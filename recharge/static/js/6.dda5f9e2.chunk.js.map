{"version":3,"sources":["pages/RechargeRecords/index.js"],"names":["connect","address","stop","blackHole","getIdentity","useState","list","setList","loading","setLoading","initial","state","saveState","setState","useCallback","newState","prev","useSetState","loadingReturn","setLoadingReturn","getList","init","orders","then","data","ret","requestList","forEach","id","tx","returnTxCache","get","push","Promise","resolve","returnRecharge","rawtx","toString","all","arr","remove","length","reReturn","useEffect","className","map","action","createtime","dos","btc","status","repent","onClick","toast","window","demos","transfer","transactionHash","set","err","returnDOS","key","time","t","Date","year","getFullYear","month","getMonth","date","getDate","addZero","formatTime"],"mappings":"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","file":"static/js/6.dda5f9e2.chunk.js","sourcesContent":["import React, {useCallback, useEffect, useState} from 'react';\nimport {Loading} from '../../components';\nimport './style.scss';\nimport {toast, addZero, returnTxCache} from \"../../utils\";\nimport {orders, returnRecharge} from \"../../service\";\nimport {connect} from \"../../components\"\nlet useSetState = (initial = {}) => {\n    const [state, saveState] = useState(initial)\n    const setState = useCallback((newState) => {\n        saveState(prev => ({...prev, ...newState}))\n    }, []);\n\n    return [state, setState]\n};\nfunction RechargeRecords({address, stop, blackHole, getIdentity}) {\n    const [list, setList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [loadingReturn, setLoadingReturn] = useSetState({});\n\n    useEffect(() => {\n        getList(true);\n    }, [address]);\n\n    function getList (init) {\n        if (!address) return;\n        setLoading(true);\n        orders({address}).then(({data}) => {\n            if (data.ret) {\n                setList(data.data.list);\n                init && reReturn(data.data.list)\n            }\n            setLoading(false);\n        }, () => {\n            setLoading(false);\n        });\n    }\n\n    function reReturn(list) {\n        let requestList = [];\n        list.forEach(({id}) => {\n            let tx = returnTxCache.get(address, id);\n            if (tx) {\n                requestList.push(new Promise((resolve) => {\n                    setLoadingReturn({id: true});\n                    returnRecharge({address, id, rawtx: tx.toString()}).then(function () {\n                        setLoadingReturn({id: false});\n                        resolve(id);\n                    }, function () {\n                        setLoadingReturn({id: false});\n                        resolve(null);\n                    })\n                }))\n            }\n        });\n\n        Promise.all(requestList).then((arr) => {\n            arr.forEach((id) => {\n                id && returnTxCache.remove(address, id)\n            });\n            arr.length && getList();\n        })\n    }\n\n    function formatTime (time) {\n        const t = new Date(time*1000);\n        const year = t.getFullYear();\n        const month = t.getMonth() + 1;\n        const date = t.getDate();\n\n        return `${year}-${addZero(month)}-${addZero(date)}`;\n    }\n\n    function returnDOS (id, dos) {\n        if (!blackHole) {\n            toast('数据获取中，请稍后');\n            return\n        }\n\n        if(loadingReturn.id){\n            toast('回退中，请稍后');\n            return\n        }\n\n        window.demos.transfer(blackHole, dos/1e8).then(function ({transactionHash}) {\n            if (transactionHash) {\n                setLoadingReturn({id: true});\n                returnTxCache.set(address, id, transactionHash);\n                returnRecharge({address, id, rawtx: transactionHash}).then(function ({data}) {\n                    setLoadingReturn({id: false});\n                    returnTxCache.remove(address, id);\n                    if(data.ret) {\n                        toast('回退成功');\n                        getList();\n                        getIdentity(address);\n                    } else {\n                        toast(data.data);\n                    }\n                }, function (err) {\n                    setLoadingReturn({id: false});\n                    toast(err.toString())\n                })\n            } else {\n                toast('获取交易hash失败')\n            }\n        }, function (err) {\n            toast(err.toString())\n        })\n    }\n\n    return (\n        <div className='p-return'>\n            <div className='circle'>\n                <div>\n                    <p className='p1'>距离停盘发放还剩</p>\n                    <p className='p2'>{stop / 1e8} <i>DOS</i></p>\n                </div>\n            </div>\n            <ul className='list'>\n                <li>\n                    <div>日期</div>\n                    <div>DOS</div>\n                    <div>BTC</div>\n                    <div>&nbsp;</div>\n                </li>\n                {list.map(({createtime, dos, btc, status, repent, id}) => {\n                    let action;\n                    // if(repent) {\n                    //     action = '已回退';\n                    // } else {\n                        switch (status) {\n                            case 0:\n                                action = '未到账';\n                                break;\n                            case 1:\n                                action = repent ? '已回退' : <button onClick={() => returnDOS(id, dos)}>回退</button>;\n                                break;\n                            case 2:\n                                action = '异常';\n                                break;\n                            default:\n                                action = `status:${status}`;\n                        }\n                    // }\n                    return (\n                        <li key={id}>\n                            <div>{formatTime(createtime)}</div>\n                            <div>{dos / 1e8}</div>\n                            <div>{btc / 1e8}</div>\n                            <div>{action}</div>\n                        </li>\n                    )\n                })}\n                {loading && <Loading /> }\n            </ul>\n        </div>\n    )\n}\n\nexport default connect()(RechargeRecords);\n"],"sourceRoot":""}