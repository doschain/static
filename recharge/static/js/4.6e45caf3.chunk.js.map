{"version":3,"sources":["pages/Home/index.js"],"names":["packageJson","require","connect","address","balance","btcLight","genesis","status","stop","surplus","PMR","level","levelApply","rechargePrice","getIdentity","invite","code","parseQuery","getQuery","useState","rechargeCount","setRechargeCount","invitedAddress","setInvitedAddress","isLoading","setIsLoading","BalanceToFixed","n","BigNumber","times","toFixed","replace","className","onClick","document","getElementById","select","execCommand","toast","e","type","value","id","readOnly","style","border","padding","position","left","onChange","src","basicURL","imgSrc","alt","result","btc","trim","Number","res","total","apply","i","j","dos","price","use","num","Math","floor","calc","expDOS","placeholder","target","_value","n_a","n_b","toString","window","demos","contract","then","data","recharge","addr","rawtx","ret","err","JSON","stringify","rechargeDOS","disabled","version"],"mappings":"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","file":"static/js/4.6e45caf3.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Card} from '../../components';\nimport './style.scss';\nimport {basicURL, toast, parseQuery} from \"../../utils\";\nimport {recharge} from \"../../service\";\nimport {connect, Input, MaskLoading} from \"../../components\"\nimport BigNumber from \"bignumber.js\"\nlet packageJson = require('../../../package.json');\n\nfunction Home({address, balance, btcLight, genesis, status, stop, surplus, PMR, level, levelApply, rechargePrice, getIdentity, code}) {\n    const invite = code || parseQuery.getQuery('invite') || '';\n    const [rechargeCount, setRechargeCount] = useState(''); //兑换（花费）BTC数量\n    const [invitedAddress, setInvitedAddress] = useState(invite); //邀请地址\n    // const [invitedAddress, setInvitedAddress] = useState('TcASfmyoFiNobNaCHeiPMkWgGmovoxk1sqk'); //邀请地址\n    const [isLoading, setIsLoading] = useState(false); //开通loading\n\n    function expDOS() {\n        let result = '--';\n        let btc = rechargeCount.trim() ? Number(rechargeCount) : -1;\n        if(Number(level) >= 0 && btc >= 0 ){\n            btc = btc * 1e8;\n            // console.log(level, levelApply, btc);\n            function calc() {\n                let total = 0;\n                let apply = levelApply;\n                let maxLevel = 10246;\n                for (let i=level; true; i++) {\n                    let j = i;\n                    if ( i > maxLevel) j = maxLevel;\n                    let dos = 4 * (j+1) * 1e8;\n\n                    if(apply !== 0) {\n                        if (apply > dos) {\n                            apply -= dos;\n                            continue;\n                        }\n                        dos -= apply;\n                    }\n\n                    let price = 1e-5 + 1e-7*j;\n                    let use = price * dos;\n\n                    if (btc < use) {\n                        let num = btc / price;\n                        total += Math.floor(num);\n                        // if (level === i) {\n                        //     return total;\n                        // }\n                        return total;\n                    }\n\n                    btc = btc - use;\n                    total += dos;\n                }\n            }\n\n            let res = calc() * 1e-8;\n            // console.log(res);\n            result = `约${res} DOS`;\n        }\n\n        return result;\n    }\n\n    const copyAddress = () => {\n        if (!genesis) return;\n        try {\n            const input = document.getElementById('genesis-container');\n            input.select();\n            document.execCommand('Copy');\n            toast('复制成功');\n        } catch (e) {\n            toast('复制失败');\n        }\n    };\n\n    function submit () {\n        if(status === 1){\n            toast('已停盘');\n            return\n        }\n        let _value = Number(rechargeCount);\n        let value = _value > 0 ? _value + '' : '';\n        setRechargeCount(value);\n\n        if (value === '') {\n            toast('请填写花费BTC数量');\n            return\n        }\n        if (value * 1e8 > balance) {\n            toast('余额不足');\n            return\n        }\n\n        rechargeDOS(value);\n    }\n\n    function rechargeDOS (value) {\n        let n_a = new BigNumber(value);\n        let n_b = new BigNumber(1e8);\n        let n = n_a.times(n_b).toString();\n        window.demos.contract(\"pay\", btcLight, [{type: \"uint256\", value: n - 0}, {type:\"string\", value: \"[3]\"}]).then(function (data){\n            setIsLoading(true);\n            recharge({\n                address,\n                addr: invitedAddress,\n                rawtx: data\n            }).then(function ({data}) {\n                setIsLoading(false);\n\n                if(data.ret) {\n                    toast('兑换成功');\n                    setRechargeCount('');\n                    getIdentity(address);\n                } else {\n                    toast(data.data);\n                }\n            }, function (err) {\n                setIsLoading(false);\n                toast(JSON.stringify(err), 30000);\n            })\n        }, function (err) {\n            toast(JSON.stringify(err), 30000);\n        });\n    }\n\n    function changeAddress (e) {\n        setInvitedAddress(typeof e === 'string' ? e : e.target.value.trim());\n    }\n\n    function scan () {\n        window.demos.scanQRCode().then(function (data){\n            let addr = data;\n            if(data.includes('address=')) {\n                addr = data.match(/address=(\\w+)/)[1]\n            }\n            setInvitedAddress(addr);\n        });\n    }\n\n    async function paste() {\n        function focus () {\n            document.getElementById('p-home-input').focus();\n        }\n        if(!invitedAddress) {\n            try {\n                const value = await window.demos.getClipboard();\n                value ? setInvitedAddress(value) : focus();\n            } catch (e) {\n                focus();\n            }\n        } else {\n            focus();\n        }\n    }\n\n    function changeRechargeCount (e) {\n        let value = typeof e === 'string' ? e : e.target.value;\n        setRechargeCount(value);\n    }\n\n    function BalanceToFixed(n) {\n        // return (n * 1e-8).toFixed(18).replace(/0*$/g,\"\")\n        return (new BigNumber(n).times(new BigNumber(1e-8))).toFixed(18).replace(/0*$/g,\"\");\n        // return (n * 1e-8).toFixed(18).replace(/0*$/g,\"\")\n    }\n\n    return (\n        <div className='p-home'>\n            <Card className='list-item'>\n                {/*<p className='p1'>剩余DOS: <i>{BalanceToFixed(surplus)}</i></p>*/}\n                {/*<p className='p1'>BTC余额: <i>{BalanceToFixed(balance)}</i></p>*/}\n                <p className='p1'>剩余DOS: <i>{BalanceToFixed(surplus)}</i></p>\n                <p className='p1'>BTC余额: <i>{BalanceToFixed(balance)}</i></p>\n                <p className='p2'>创世账户地址: <i>{genesis || '--'}</i></p>\n                <div className='bottom'><button className='c-btn' onClick={copyAddress}>复制地址</button></div>\n                <input\n                    type=\"text\"\n                    value={genesis}\n                    id=\"genesis-container\"\n                    readOnly\n                    style={{ border: 0, padding: 0, position: 'fixed', left: '-100%' }}\n                    onChange={() => {}}\n                />\n            </Card>\n            <img src={`${basicURL.imgSrc}/metcalfe.png`} alt=\"btc\" className='metcalfe'/>\n            <div className='pmr'>PMR={PMR}</div>\n            <div className='triangle'>\n                <div><i>当前{level}层</i></div>\n            </div>\n            {status === 0\n                ? <div className='status'>状态:正常</div>\n                : <div className='status status-stop'>状态:停盘</div>\n            }\n            <div className='label'>\n                <label>当前兑换价格: </label>\n                <p>{rechargePrice} BTC</p>\n            </div>\n            <div className='label'>\n                <label>距离停盘: </label>\n                <p>{stop/1e8} DOS</p>\n            </div>\n            <div className='label'>\n                <label>可兑换: </label>\n                <p>{expDOS()}</p>\n            </div>\n            <div className='content'>\n                <Input\n                    type='text'\n                    placeholder='花费BTC数量'\n                    value={rechargeCount}\n                    onChange={changeRechargeCount}\n                    id='p-home-1'\n                />\n                {invite ? (\n                    <Card className='invite'>推荐地址: {invite}</Card>\n                ) : (\n                    <div className='input'>\n                        <div className='input-wrapper'>\n                            <Input\n                                type=\"text\"\n                                placeholder='推荐地址'\n                                onChange={changeAddress}\n                                value={invitedAddress}\n                                id='p-home-input'/>\n                            {/*<i onClick={paste} />*/}\n                        </div>\n\n                        {/*<img src={`${basicURL.imgSrc}/icon_scan.png`} alt=\"scan\" onClick={scan}/>*/}\n                    </div>\n                )}\n                {/*<input type=\"text\" placeholder='推荐地址' value={invitedAddress}/>*/}\n                {isLoading && <MaskLoading />}\n                <button className='c-btn' onClick={submit} disabled={isLoading}>兑换</button>\n            </div>\n            <div className='package-json'>version: {packageJson.version}</div>\n        </div>\n    )\n}\n\nexport default connect()(Home);\n"],"sourceRoot":""}