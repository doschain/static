{"version":3,"sources":["pages/Pool/index.js","service/index.js"],"names":["connect","address","useState","list","setList","loading","setLoading","showNotice","setNotice","useEffect","getFundsPool","then","data","ret","className","map","index","name","type","addr","amount","unit","key","onClick","document","querySelectorAll","select","execCommand","toast","e","copyAddress","value","readOnly","style","border","padding","position","left","onChange","visible","onOk","getBalance","axios","get","getPrice","post","openUpCert","rawtx","getGains","page","limit"],"mappings":"uLAsFeA,yBA/Ef,YAA0B,IAAXC,EAAU,EAAVA,QAAU,EACGC,mBAAS,IADZ,mBACdC,EADc,KACRC,EADQ,OAESF,oBAAS,GAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGWJ,oBAAS,GAHpB,mBAGdK,EAHc,KAGFC,EAHE,KA6BrB,OAxBAC,qBAAU,WACDR,IACLK,GAAW,GACXI,YAAaT,GAASU,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACrBA,EAAKC,KACLT,EAAQQ,EAAKA,MAEjBN,GAAW,MACZ,WACCA,GAAW,SAEhB,CAACL,IAcA,yBAAKa,UAAU,UACVT,GAAW,kBAAC,IAAD,MACXF,EAAKY,KAAI,WAA6BC,GAAW,IAC1CC,EADIC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,KAE5B,OAAQH,GACJ,KAAK,EACDD,EAAO,uCACP,MACJ,KAAK,EACDA,EAAO,uCACP,MACJ,KAAK,EACDA,EAAO,qBACP,MACJ,QACIA,EAAI,eAAWC,GAEvB,OACI,kBAAC,IAAD,CAAMI,IAAKN,EAAOF,UAAU,aACxB,uBAAGA,UAAU,MAAMG,EAAnB,KAA0B,2BAAIG,EAAO,IAAX,IAAiBC,IAC3C,uBAAGP,UAAU,MAAb,6BAAyBK,GACzB,yBAAKL,UAAU,UACX,4BAAQA,UAAU,QAAQS,QAAS,YAlCvC,SAACP,GACjB,IACkBQ,SAASC,iBAAiB,sBAAsBT,GACxDU,SACNF,SAASG,YAAY,QACrBC,YAAM,4BACR,MAAOC,GACLD,YAAM,6BA4BcE,CAAYd,KADhB,6BAIJ,2BACIE,KAAK,OACLa,MAAOZ,EACPa,UAAQ,EACRlB,UAAU,oBACVmB,MAAO,CAAEC,OAAQ,EAAGC,QAAS,EAAGC,SAAU,QAASC,KAAM,SACzDC,SAAU,mBAK1B,yBAAKxB,UAAU,UACX,uBAAGA,UAAU,MAAb,oDACA,uBAAGA,UAAU,MAAb,MAAqB,oCAEzB,kBAAC,IAAD,CACIyB,QAAShC,EACTiC,KAAM,WAAOhC,GAAU,KAF3B,kI,gCC9EZ,qLAGaiC,EAAa,SAACxC,GACvB,OAAOyC,IAAMC,IAAN,oBAAuB1C,KAIrB2C,EAAW,SAAC3C,GACrB,OAAOyC,IAAMG,KAAN,oBAAwB5C,EAAxB,aAA4C,KAI1C6C,EAAa,SAAC,GAA4B,IAA3B7C,EAA0B,EAA1BA,QAASkB,EAAiB,EAAjBA,KAAM4B,EAAW,EAAXA,MACvC,OAAOL,IAAMG,KAAN,oBAAwB5C,EAAxB,aAA4C,CAACkB,OAAM4B,WAIjDC,EAAW,SAAC,GAA0C,IAAzC/C,EAAwC,EAAxCA,QAAwC,IAA/BgD,YAA+B,MAAxB,EAAwB,MAArBC,aAAqB,MAAb,IAAa,EAC9D,OAAOR,IAAMC,IAAN,oBAAuB1C,EAAvB,uBAA6CgD,EAA7C,kBAA2DC,KAIzDxC,EAAe,WACxB,OAAOgC,IAAMC,IAAI","file":"static/js/5.aca09336.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Card, connect, Loading, Modal} from '../../components';\nimport {toast} from '../../utils';\nimport {getFundsPool} from \"../../service\";\nimport './style.scss';\n\n\nfunction Pool({address}) {\n    const [list, setList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [showNotice, setNotice] = useState(true);\n\n    useEffect(() => {\n        if (!address) return;\n        setLoading(true);\n        getFundsPool(address).then(({data}) => {\n            if (data.ret) {\n                setList(data.data);\n            }\n            setLoading(false);\n        }, () => {\n            setLoading(false);\n        })\n    }, [address]);\n\n    const copyAddress = (index) => {\n        try {\n            const input = document.querySelectorAll('.address-container')[index];\n            input.select();\n            document.execCommand('Copy');\n            toast('复制成功');\n        } catch (e) {\n            toast('复制失败');\n        }\n    };\n\n    return (\n        <div className='p-pool'>\n            {loading && <Loading />}\n            {list.map(({type, addr, amount, unit}, index) => {\n                let name;\n                switch (type) {\n                    case 2:\n                        name = '矿池回购基金';\n                        break;\n                    case 3:\n                        name = '双倍回购基金';\n                        break;\n                    case 4:\n                        name = '已销毁';\n                        break;\n                    default:\n                        name = `type ${type}`;\n                }\n                return (\n                    <Card key={index} className='list-item'>\n                        <p className='p1'>{name}: <i>{amount/1e8} {unit}</i></p>\n                        <p className='p2'>基金账户: {addr}</p>\n                        <div className='bottom'>\n                            <button className='c-btn' onClick={() => {\n                                copyAddress(index);\n                            }}>复制地址</button>\n                        </div>\n                        <input\n                            type=\"text\"\n                            value={addr}\n                            readOnly\n                            className=\"address-container\"\n                            style={{ border: 0, padding: 0, position: 'fixed', left: '-100%' }}\n                            onChange={() => {}}\n                        />\n                    </Card>\n                )\n            })}\n            <div className='circle'>\n                <p className='p1'>距离停盘发放还剩</p>\n                <p className='p2'>-- <i>DOS</i></p>\n            </div>\n            <Modal\n                visible={showNotice}\n                onOk={() => {setNotice(false)}}\n            >每2周汇聚一次资金，以防止手续费频繁支付。</Modal>\n        </div>\n    )\n};\n\nexport default connect()(Pool);\n","import {axios} from '../utils'\n\n/** 获取余额 **/\nexport const getBalance = (address) => {\n    return axios.get(`/api/addr/${address}`);\n};\n\n/** 获取价格 **/\nexport const getPrice = (address) => {\n    return axios.post(`/api/addr/${address}/opencert`, {});\n};\n\n/** 开通证书 **/\nexport const openUpCert = ({address, addr, rawtx}) => {\n    return axios.post(`/api/addr/${address}/opencert`, {addr, rawtx});\n};\n\n/** 收益记录 **/\nexport const getGains = ({address, page = 1, limit = 1000000}) => {\n    return axios.get(`/api/addr/${address}/gains?page=${page}&limit=${limit}`);\n};\n\n/** 基金池 **/\nexport const getFundsPool = () => {\n    return axios.get('/api/funds');\n};\n"],"sourceRoot":""}