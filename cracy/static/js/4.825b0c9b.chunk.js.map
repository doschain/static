{"version":3,"sources":["pages/Home/index.js","service/index.js"],"names":["packageJson","require","window","aa","cracyTxidCache","bb","cracyInviteAddressCache","connect","address","invite","parseQuery","getQuery","useState","balance","setBalance","btcLight","setBtcLight","invitedAddress","setInvitedAddress","certPrice","setCertPrice","btcPrice","setBrcPrice","isLoading","setIsLoading","code","setCode","openStatus","setOpenStatus","getIdentity","getBalance","then","data","ret","btclight","time","status","undefined","getCertPrice","addr","getPrice","toast","value","btcusdt","demos","contract","type","set","openUpFromTxid","err","JSON","stringify","txid","openUpCert","rawtx","remove","changeAddress","e","target","trim","scan","scanQRCode","includes","match","fundManager","openFundManager","useEffect","get","className","src","basicURL","imgSrc","alt","onClick","placeholder","onChange","id","test","disabled","version","axios","post","getGains","page","limit","getFundsPool"],"mappings":"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","file":"static/js/4.825b0c9b.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './style.scss';\nimport {basicURL, toast, parseQuery, cracyTxidCache, cracyInviteAddressCache} from \"../../utils\";\nimport {getBalance, getPrice, openUpCert} from \"../../service\";\nimport {connect, Card, Input, MaskLoading} from \"../../components\"\nlet packageJson = require('../../../package.json');\nwindow.aa = cracyTxidCache;\nwindow.bb = cracyInviteAddressCache;\n\nfunction Home({address}) {\n    const invite = parseQuery.getQuery('invite') || '';\n    const [balance, setBalance] = useState(0); //余额\n    const [btcLight, setBtcLight] = useState(''); //合约地址\n    const [invitedAddress, setInvitedAddress] = useState(invite); //邀请地址\n    const [certPrice, setCertPrice] = useState(0); //证书价格\n    const [btcPrice, setBrcPrice] = useState(0); //btc价格\n    // const [isOpened, setIsOpened] = useState(false); //已开通\n    const [isLoading, setIsLoading] = useState(false); //开通loading\n    const [code, setCode] = useState(''); //邀请人\n    const [openStatus, setOpenStatus] = useState(-1); //开通状态 -1:未开通 0:开通中 1:已开通\n\n    function getIdentity () {\n        getBalance(address).then(({data}) => {\n            // console.log(data);\n            if (data.ret) {\n                let {balance, btclight, code, time, status} = data.data;\n                // time = undefined\n                // status = undefined\n\n                setBalance(balance);\n                setBtcLight(btclight);\n                setCode(code);\n                if (time) {\n                    setOpenStatus(status === undefined ? 1 : status);\n                }\n            }\n        })\n    }\n    function getCertPrice (addr) {\n        getPrice(addr || address).then(({data}) => {\n            // console.log(data);\n            if (data.ret) {\n\n                if (addr) {\n                    toast('邀请地址未开通')\n                } else {\n                    setCertPrice(data.data.value);\n                    setBrcPrice(data.data.btcusdt);\n                }\n            } else if(data.data === 'do not repeat opening') {\n                if (addr) {\n                    openUp();\n                } else {\n                    setOpenStatus(1)\n                }\n\n            }\n        })\n    }\n\n    useEffect(() => {\n        if (!address) return;\n        getIdentity();\n        getCertPrice();\n        let txid = cracyTxidCache.get(address);\n        let invite = cracyInviteAddressCache.get(address);\n        txid && invite && openUpFromTxid(txid, invite);\n\n    }, [address]);\n\n    function submit  () {\n        if(openStatus !== -1) {\n            return\n        }\n        if (!certPrice) {\n            toast('正在获取证书价格，请稍后再试。');\n            return\n        }\n        if (!(balance >= certPrice)) {\n            toast('余额不足');\n            return\n        }\n        if (invitedAddress) {\n            if((process.env.NODE_ENV === 'production' ? /^Sc.+/ : /^Tc.+/).test(invitedAddress + '')) {\n                getCertPrice(invitedAddress);\n            } else {\n                toast('请输入正确的邀请码');\n            }\n\n        } else {\n            // openUp();\n            toast('请输入邀请码');\n        }\n    }\n\n    function openUp () {\n        window.demos.contract(\"pay\", btcLight, [{type: \"uint256\", value: certPrice}, {type:\"string\", value: \"[2]\"}]).then(function (data){\n            cracyTxidCache.set(address, data);\n            cracyInviteAddressCache.set(address, invitedAddress);\n            openUpFromTxid(data);\n        }, function (err) {\n            toast(JSON.stringify(err), 3000);\n        });\n    }\n\n    function openUpFromTxid(txid, invite = invitedAddress) {\n        setIsLoading(true);\n        openUpCert({\n            address,\n            addr: invite,\n            rawtx: txid\n        }).then(function ({data}) {\n            setIsLoading(false);\n            cracyTxidCache.remove(address);\n            cracyInviteAddressCache.remove(address);\n\n            if(data.ret) {\n                toast('开通成功');\n                // setIsOpened(true);\n                setOpenStatus(0);\n                getIdentity();\n            } else {\n                toast(data.data);\n            }\n        }, function (err) {\n            setIsLoading(false);\n            toast(JSON.stringify(err), 3000);\n        })\n    }\n\n    function changeAddress (e) {\n        // setInvitedAddress(e.target.value.trim());\n        setInvitedAddress(typeof e === 'string' ? e : e.target.value.trim());\n    }\n\n    function scan () {\n        window.demos.scanQRCode().then(function (data){\n            let addr = data;\n            if(data.includes('invite=')) {\n                addr = data.match(/invite=(\\w+)/)[1]\n            }\n            setInvitedAddress(addr);\n        });\n    }\n\n    function fundManager() {\n        window.demos.openFundManager();\n    }\n\n    async function paste() {\n        function focus () {\n            document.getElementById('p-home-input').focus();\n        }\n        if(!invitedAddress) {\n            try {\n                const value = await window.demos.getClipboard();\n                value ? setInvitedAddress(value) : focus();\n            } catch (e) {\n                focus();\n            }\n        } else {\n            focus();\n        }\n    }\n\n    return (\n        <div className='p-home'>\n            <img src={`${basicURL.imgSrc}/icon_btc.png`} alt=\"btc\" className='coin-icon'/>\n            <p className='balance'>BTC余额:<span>{balance/1e8}</span></p>\n            <div className='btns'>\n                <button className='c-btn' onClick={fundManager}>充值</button>\n                <button className='c-btn' onClick={fundManager}>提现</button>\n            </div>\n            <p className='balance'>BTC价格:<span>$ {btcPrice}</span></p>\n            <p className='price'>需支付:<span>{certPrice/1e8} <i>BTC</i></span></p>\n            <p className='notice'>注意:BTC充值有矿工费用</p>\n            {(() => {\n                if(openStatus !== -1) {\n                    return <Card className='invite'>推荐地址: {code || invitedAddress || '空'}</Card>\n                }\n\n                if(invite) {\n                    return <Card className='invite'>推荐地址: {invite}</Card>\n                }\n\n                return (\n                    <div className='input'>\n                        <div className='input-wrapper'>\n                            <Input\n                                type=\"text\"\n                                placeholder='推荐地址'\n                                onChange={changeAddress}\n                                value={invitedAddress}\n                                id='p-home-input'/>\n                            {/*<i onClick={paste} />*/}\n                        </div>\n                        <img src={`${basicURL.imgSrc}/icon_scan.png`} alt=\"scan\" onClick={scan}/>\n                    </div>\n                )\n            })()}\n            {isLoading && <MaskLoading />}\n            <button className='c-btn' onClick={submit} disabled={isLoading}>\n                {/*{isOpened\n                    ? '已开通'\n                    : isLoading\n                        ? 'loading'\n                        : '开通'\n                }*/}\n                {openStatus === -1\n                    ? isLoading\n                        ? 'loading'\n                        : '开通'\n                    : openStatus === 1\n                        ? '已开通'\n                        : '处理中'\n                }\n            </button>\n            <div className='package-json'>version: {packageJson.version}</div>\n        </div>\n    )\n}\n\nexport default connect()(Home);\n","import {axios} from '../utils'\n\n/** 获取余额 **/\nexport const getBalance = (address) => {\n    return axios.get(`/api/addr/${address}`);\n};\n\n/** 获取价格 **/\nexport const getPrice = (address) => {\n    return axios.post(`/api/addr/${address}/opencert`, {});\n};\n\n/** 开通证书 **/\nexport const openUpCert = ({address, addr, rawtx}) => {\n    return axios.post(`/api/addr/${address}/opencert`, {addr, rawtx});\n};\n\n/** 收益记录 **/\nexport const getGains = ({address, page = 1, limit = 1000000}) => {\n    return axios.get(`/api/addr/${address}/gains?page=${page}&limit=${limit}`);\n};\n\n/** 基金池 **/\nexport const getFundsPool = () => {\n    return axios.get('/api/funds');\n};\n"],"sourceRoot":""}