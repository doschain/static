{"version":3,"sources":["pages/Home/index.js","service/index.js"],"names":["packageJson","require","errCount","connect","address","invite","parseQuery","getQuery","useState","balance","setBalance","btcLight","setBtcLight","invitedAddress","setInvitedAddress","certPrice","setCertPrice","btcPrice","setBrcPrice","isLoading","setIsLoading","code","setCode","openStatus","setOpenStatus","remark","setRemark","supplementTxId","setSupplementTxId","getIdentity","addr","getBalance","then","data","ret","btclight","status","openUpFromTxid","window","demos","contract","type","value","cracyTxidCache","set","cracyInviteAddressCache","err","toast","toString","undefined","get","getCertTx","rawtx","txid","reOpen","openUpCert","remove","changeAddress","e","target","trim","scan","scanQRCode","includes","match","fundManager","openFundManager","useEffect","getPrice","btcusdt","className","src","basicURL","imgSrc","alt","onClick","placeholder","onChange","id","substring","disabled","res","style","color","version","axios","post","getGains","page","limit","getFundsPool"],"mappings":"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","file":"static/js/4.229b4ba3.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './style.scss';\nimport {basicURL, toast, parseQuery, cracyTxidCache, cracyInviteAddressCache} from \"../../utils\";\nimport {getBalance, getPrice, openUpCert, getCertTx} from \"../../service\";\nimport {connect, Card, Input, MaskLoading} from \"../../components\"\nlet packageJson = require('../../../package.json');\nlet errCount = 0;\n\nfunction Home({address}) {\n    const invite = parseQuery.getQuery('invite') || '';\n    const [balance, setBalance] = useState(0); //余额\n    const [btcLight, setBtcLight] = useState(''); //合约地址\n    const [invitedAddress, setInvitedAddress] = useState(invite); //邀请地址\n    const [certPrice, setCertPrice] = useState(-1); //证书价格\n    const [btcPrice, setBrcPrice] = useState(0); //btc价格\n    const [isLoading, setIsLoading] = useState(false); //开通loading\n    const [code, setCode] = useState(''); //邀请人\n    const [openStatus, setOpenStatus] = useState(-1); //开通状态 -1:未开通 0:开通中 1:已开通 2:开通失败\n    const [remark, setRemark] = useState(''); //开通失败信息\n    const [supplementTxId, setSupplementTxId] = useState(''); // 补单txid\n\n\n    useEffect(() => {\n        if (!address) return;\n        let txid = cracyTxidCache.get(address);\n        let invite = cracyInviteAddressCache.get(address);\n        // 本地有tx缓存，补单\n        txid && invite && openUpFromTxid(txid, invite);\n\n        getIdentity();\n        getCertPrice();\n    }, [address]);\n\n    function supplement () {\n        getCertTx(address).then(({data}) => {\n            if (data.ret && data.data && data.data.rawtx) {\n                setSupplementTxId(data.data.rawtx)\n                let invite = cracyInviteAddressCache.get(address);\n                if(invite){\n                    setInvitedAddress(invite)\n                }\n            }\n        });\n    }\n\n    function getIdentity (addr) {\n        setIsLoading(true);\n        getBalance(addr || address).then(({data}) => {\n            // console.log(data);\n            setIsLoading(false);\n            if (data.ret) {\n                let {balance, btclight, code, status, remark} = data.data;\n\n                if(addr) {\n                    if (status === 1){\n                        supplementTxId ? openUpFromTxid(supplementTxId, addr) : openUp();\n                    } else {\n                        toast('邀请地址未开通');\n                    }\n\n                } else {\n                    setBalance(balance);\n                    setBtcLight(btclight);\n                    setCode(code);\n                    setRemark(remark)\n                    if (status !== undefined) {\n                        setOpenStatus(status);\n                    } else {\n                        // 没有开通，补单\n                        let txid = cracyTxidCache.get(address);\n                        if(!txid) {\n                            supplement();\n                        }\n                    }\n                }\n            } else if (addr){\n                toast('邀请地址未开通');\n            }\n        }, function () {\n            setIsLoading(false);\n        })\n    }\n\n    function getCertPrice () {\n        getPrice(address).then(({data}) => {\n            // console.log(data);\n            if (data.ret) {\n                setCertPrice(data.data.value);\n                setBrcPrice(data.data.btcusdt);\n            }\n            //  else if(data.data === 'do not repeat opening') {\n            //     setOpenStatus(1);\n            // }\n        })\n    }\n\n    function submit  () {\n        if(openStatus !== -1) {\n            return\n        }\n        if(!supplementTxId) {\n            if (certPrice < 0) {\n                toast('正在获取证书价格，请稍后再试。');\n                return\n            }\n            if (!(balance >= certPrice)) {\n                toast('余额不足');\n                return\n            }\n        }\n        if (invitedAddress) {\n            if (address.substring(0, 2) === (invitedAddress + '').substring(0, 2)) {\n                getIdentity(invitedAddress);\n            } else {\n                toast('请输入正确的邀请码');\n            }\n\n        } else {\n            // openUp();\n            toast('请输入邀请码');\n        }\n    }\n\n    function openUp () {\n        window.demos.contract(\"pay\", btcLight, [{type: \"uint256\", value: certPrice}, {type:\"string\", value: \"[2]\"}]).then(function (data){\n            openUpFromTxid(data);\n            cracyTxidCache.set(address, data);\n            cracyInviteAddressCache.set(address, invitedAddress);\n        }, function (err) {\n            toast(err.toString(), 3000);\n        });\n    }\n\n    function openUpFromTxid(txid, invite = invitedAddress) {\n        setIsLoading(true);\n        function reOpen () {\n            if (errCount === 0) {\n                openUpFromTxid(txid, invite);\n                errCount += 1;\n            } else {\n                toast('开通失败，请反馈或稍后再试', 5000);\n            }\n        }\n        openUpCert({\n            address,\n            addr: invite,\n            rawtx: txid\n        }).then(function ({data}) {\n            setIsLoading(false);\n            cracyTxidCache.remove(address);\n            cracyInviteAddressCache.remove(address);\n\n            if(data.ret) {\n                toast('操作成功');\n                // setIsOpened(true);\n                setOpenStatus(0);\n                getIdentity();\n            } else {\n                toast(data.data);\n            }\n        }, function (err) {\n            setIsLoading(false);\n            reOpen();\n\n        })\n    }\n\n    function changeAddress (e) {\n        // setInvitedAddress(e.target.value.trim());\n        setInvitedAddress(typeof e === 'string' ? e : e.target.value.trim());\n    }\n\n    function scan () {\n        window.demos.scanQRCode().then(function (data){\n            let addr = data;\n            if(data.includes('invite=')) {\n                addr = data.match(/invite=(\\w+)/)[1]\n            }\n            setInvitedAddress(addr);\n        });\n    }\n\n    function fundManager() {\n        window.demos.openFundManager();\n    }\n\n    async function paste() {\n        function focus () {\n            document.getElementById('p-home-input').focus();\n        }\n        if(!invitedAddress) {\n            try {\n                const value = await window.demos.getClipboard();\n                value ? setInvitedAddress(value) : focus();\n            } catch (e) {\n                focus();\n            }\n        } else {\n            focus();\n        }\n    }\n\n    return (\n        <div className='p-home'>\n            <img src={`${basicURL.imgSrc}/icon_btc.png`} alt=\"btc\" className='coin-icon'/>\n            <p className='balance'>BTC余额:<span>{balance/1e8}</span></p>\n            <div className='btns'>\n                <button className='c-btn' onClick={fundManager}>充值</button>\n                <button className='c-btn' onClick={fundManager}>提现</button>\n            </div>\n            <p className='balance'>BTC价格:<span>$ {btcPrice}</span></p>\n            <p className='price'>需支付:<span>{certPrice/1e8} <i>BTC</i></span></p>\n            <p className='notice'>注意:BTC充值有矿工费用</p>\n            {(() => {\n                if(openStatus !== -1) {\n                    return <Card className='invite'>推荐地址: {code || invitedAddress || '空'}</Card>\n                }\n\n                if(invite) {\n                    return <Card className='invite'>推荐地址: {invite}</Card>\n                }\n\n                return (\n                    <div className='input'>\n                        <div className='input-wrapper'>\n                            <Input\n                                type=\"text\"\n                                placeholder='推荐地址'\n                                onChange={changeAddress}\n                                value={invitedAddress}\n                                id='p-home-input'/>\n                            {/*<i onClick={paste} />*/}\n                        </div>\n                        <img src={`${basicURL.imgSrc}/icon_scan.png`} alt=\"scan\" onClick={scan}/>\n                    </div>\n                )\n            })()}\n            {isLoading && <MaskLoading />}\n            <button className='c-btn' onClick={submit} disabled={isLoading}>\n                {openStatus === -1\n                    ? isLoading\n                        ? 'loading'\n                        : '开通'\n                    : (() => {\n                        let res = '';\n                        switch(openStatus) {\n                            case 0:\n                                res = '处理中';\n                                break;\n                            case 1:\n                                res = '已开通';\n                                break;\n                            case 2:\n                                res = '开通失败';\n                                break;\n                        }\n                        return res;\n                    })()\n                }\n            </button>\n            {!!remark && <p style={{color: 'rgb(255, 45, 45)'}}>{remark}</p>}\n            <div className='package-json'>version: {packageJson.version}</div>\n        </div>\n    )\n}\n\nexport default connect()(Home);\n","import {axios} from '../utils'\n\n/** 获取余额 **/\nexport const getBalance = (address) => {\n    return axios.get(`/api/addr/${address}`);\n};\n\n/** 获取价格 **/\nexport const getPrice = (address) => {\n    return axios.post(`/api/addr/${address}/opencert`, {});\n};\n\n/** 开通证书 **/\nexport const openUpCert = ({address, addr, rawtx}) => {\n    return axios.post(`/api/addr/${address}/opencert`, {addr, rawtx});\n};\n\n/** 收益记录 **/\nexport const getGains = ({address, page = 1, limit = 1000000}) => {\n    return axios.get(`/api/addr/${address}/gains?page=${page}&limit=${limit}`);\n};\n\n/** 基金池 **/\nexport const getFundsPool = () => {\n    return axios.get('/api/funds');\n};\n\n/** 开通证书 **/\nexport const getCertTx = (address) => {\n    return axios.get(`/api/${address}/certtx`);\n};\n"],"sourceRoot":""}