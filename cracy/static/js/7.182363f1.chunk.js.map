{"version":3,"sources":["pages/ReferralCode/index.js"],"names":["connect","address","useState","QRC","setQRC","getBg","getQRCode","a","Promise","resolve","reject","window","location","origin","pathname","url","QRCode","toDataURL","width","margin","then","data","imgQRCode","document","createElement","src","onload","this","onerror","imgBg","basicURL","imgSrc","canvas","height","context","getContext","all","bg","drawImage","substring","demos","shareImage","toast","useEffect","console","error","initQRCode","className","alt","onClick","getElementById","select","execCommand","e","type","value","readOnly","id","style","border","padding","position","left","onChange"],"mappings":"mMAsGeA,yBA/Ff,YAAkC,IAAXC,EAAU,EAAVA,QAAU,EACPC,mBAAS,IADF,mBACtBC,EADsB,KACjBC,EADiB,iDA4B7B,qBAIaC,EAeAC,EAnBb,SAAAC,EAAA,sDAmBaD,EAnBb,WAoBQ,OAAO,IAAIE,SAAQ,SAAUC,EAASC,GAAS,IAAD,EACfC,OAAOC,SAA3BC,EADmC,EACnCA,OAAQC,EAD2B,EAC3BA,SACTC,EAAG,UAAMF,GAAN,OAAeC,EAAf,mBAAkCb,GAC3Ce,IAAOC,UAAUF,EAAK,CAAEG,MAAO,IAAKC,OAAQ,IAAKC,MAAK,SAAUC,GAC5D,IAAIC,EAAYC,SAASC,cAAc,OACvCF,EAAUG,IAAMJ,EAChBC,EAAUI,OAAS,WACfjB,EAAQkB,OAEZL,EAAUM,QAAU,WAChBlB,EAAO,gDA1BdL,EAJb,WAKQ,OAAO,IAAIG,SAAQ,SAAUC,EAASC,GAClC,IAAImB,EAAQN,SAASC,cAAc,OACnCK,EAAMJ,IAAN,UAAeK,IAASC,OAAxB,gBACAF,EAAMH,OAAS,WACXjB,EAAQkB,MACRK,EAAOd,MAAQW,EAAMX,MACrBc,EAAOC,OAASJ,EAAMI,QAE1BJ,EAAMD,QAAU,WACZlB,EAAO,6CAbfsB,EAAST,SAASC,cAAc,UAChCU,EAAUF,EAAOG,WAAW,MAkChC3B,QAAQ4B,IAAI,CAAC/B,IAASC,MAAcc,MAAK,YAAqB,IAAD,mBAATiB,EAAS,KAALlC,EAAK,KACzD+B,EAAQI,UAAUD,EAAI,EAAG,GACzBH,EAAQI,UAAUnC,EAAK,IAAK,KAC5B,IAAIkB,EAAOW,EAAOf,UAAW,YAAa,GAAIsB,UAAU,GACxD5B,OAAO6B,MAAMC,WAAWpB,MACzB,WACCqB,YAAM,2CA1Cd,4CA5B6B,sBA0E7B,OAvEAC,qBAAU,WAAW,4CACjB,4BAAApC,EAAA,+EAE0BS,IAAOC,UAAUhB,EAAS,CAAEiB,MAAO,IAAKC,OAAQ,IAF1E,OAEchB,EAFd,OAGQC,EAAOD,GAHf,gDAKQyC,QAAQC,MAAR,MALR,0DADiB,sBAUjB5C,GAVkB,WAAD,wBAUN6C,KAEZ,CAAC7C,IA4DA,yBAAK8C,UAAU,mBACX,yBAAKA,UAAU,UACV5C,GAAO,yBAAKsB,IAAKtB,EAAK6C,IAAI,GAAG9B,MAAM,MAAMe,OAAO,SAErD,wDAAUhC,GACV,4BAAQ8C,UAAU,QAAQE,QA/Dd,WAChB,IACkB1B,SAAS2B,eAAe,qBAChCC,SACN5B,SAAS6B,YAAY,QACrBV,YAAM,4BACR,MAAOW,GACLX,YAAM,+BAwDN,kCACA,2BACIY,KAAK,OACLC,MAAOtD,EACPuD,UAAQ,EACRC,GAAG,oBACHC,MAAO,CAAEC,OAAQ,EAAGC,QAAS,EAAGC,SAAU,QAASC,KAAM,SACzDC,SAAU,eAGd,4BAAQhB,UAAU,QAAQE,QA1FL,4CA0FrB,uC","file":"static/js/7.182363f1.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\n// import { Link } from \"react-router-dom\";\nimport './style.scss';\nimport QRCode from 'qrcode';\nimport {connect} from \"../../components\";\nimport {basicURL, toast} from \"../../utils\";\n\nfunction ReferralCode({address}) {\n    const [QRC, setQRC] = useState('');\n\n    useEffect(function (){\n        async function initQRCode() {\n            try {\n                const QRC = await QRCode.toDataURL(address, { width: 320, margin: 0 });\n                setQRC(QRC);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n        address && initQRCode();\n\n    }, [address]);\n\n    const copyAddress = () => {\n        try {\n            const input = document.getElementById('address-container');\n            input.select();\n            document.execCommand('Copy');\n            toast('复制成功');\n        } catch (e) {\n            toast('复制失败');\n        }\n    };\n\n    async function share () {\n        let canvas = document.createElement('canvas');\n        let context = canvas.getContext('2d');\n\n        function getBg () {\n            return new Promise(function (resolve, reject) {\n                let imgBg = document.createElement('img');\n                imgBg.src = `${basicURL.imgSrc}/share_c.jpg`;\n                imgBg.onload = function() {\n                    resolve(this);\n                    canvas.width = imgBg.width;\n                    canvas.height = imgBg.height;\n                };\n                imgBg.onerror = function() {\n                    reject('图片加载失败');\n                };\n            });\n        }\n\n        function getQRCode () {\n            return new Promise(function (resolve, reject) {\n                const {origin, pathname} = window.location;\n                const url = `${origin}${pathname}?invite=${address}`;\n                QRCode.toDataURL(url, { width: 210, margin: 0 }).then(function (data) {\n                    let imgQRCode = document.createElement('img');\n                    imgQRCode.src = data;\n                    imgQRCode.onload = function() {\n                        resolve(this);\n                    };\n                    imgQRCode.onerror = function() {\n                        reject('图片加载失败');\n                    };\n                });\n            });\n        }\n\n        Promise.all([getBg(), getQRCode()]).then(function ([bg, QRC]){\n            context.drawImage(bg, 0, 0);\n            context.drawImage(QRC, 255, 809);\n            let data = canvas.toDataURL( 'image/png', 1 ).substring(5);\n            window.demos.shareImage(data);\n        }, function () {\n            toast('图片加载失败')\n        })\n    }\n\n    return (\n        <div className='p-referral-code'>\n            <div className=\"qrcode\">\n                {QRC && <img src={QRC} alt=\"\" width=\"280\" height=\"280\" />}\n            </div>\n            <p>推广地址: {address}</p>\n            <button className='c-btn' onClick={copyAddress}>复制推广码</button>\n            <input\n                type=\"text\"\n                value={address}\n                readOnly\n                id=\"address-container\"\n                style={{ border: 0, padding: 0, position: 'fixed', left: '-100%' }}\n                onChange={() => {}}\n            />\n            {/*<Link to='/share'><button className='c-btn'>分享二维码</button></Link>*/}\n            <button className='c-btn' onClick={share}>分享二维码</button>\n        </div>\n    )\n};\n\nexport default connect()(ReferralCode);\n"],"sourceRoot":""}