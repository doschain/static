{"version":3,"sources":["lib/api.js","components/InvoiceDatasheet/SelectEditor.js","components/InvoiceDatasheet/MultiLineEditor.js","components/InvoiceDatasheet/helpers.js","lib/editors_content_backup.js","lib/local_storage.js","selectors/app.js","selectors/modal.js","selectors/external_api.js","selectors/form.js","selectors/index.js","actions/index.js","selectors/api.js","actions/app.js","actions/modal.js","components/ErrorBoundary.js","constants.js","actions/methods.js","components/Message.js","reducers/form.js","reducers/app.js","reducers/util.js","reducers/api/handlers.js","reducers/api/handlersCMS.js","reducers/api/api.js","reducers/api/index.js","reducers/modal.js","reducers/external_api.js","reducers/index.js","redux/configureStore.js","lib/external_api.js","actions/external_api.js","helpers.js","lib/fp.js","actions/lib.js","components/Modal/modalTypes.js","lib/queryString.js","Config/presets.js","Config/ConfigProvider.js","Config/Config.js","Config/index.js","lib/merkle.js","lib/pki.js","utils/strings.js","utils/validation.js","actions/types.js","actions/api.js"],"names":["TOP_LEVEL_COMMENT_PARENTID","STATUS_ERR","400","401","403","404","getUrl","path","version","arguments","length","undefined","concat","getResponse","get","digestPayload","payload","CryptoJS","SHA256","arrayBufferToWordArray","base64ToArrayBuffer","toString","enc","Hex","digest","sha3_256","convertMarkdownToFile","markdown","name","mime","utoa","makeProposal","attachments","files","Object","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","map","_ref","makeInvoice","month","year","exchangerate","contractorname","contractorlocation","contractorcontact","contractorrate","paymentaddress","lineItems","json","_convertJsonToFile","JSON","stringify","id","_ref2","makeComment","token","comment","parentid","makeLikeComment","action","commentid","makeCensoredComment","reason","signRegister","email","proposal","pki","then","publickey","digests","x","Buffer","from","sort","compare","root","MerkleTree","getRoot","signature","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","signComment","join","signLikeComment","signCensorComment","parseResponse","response","contentType","headers","includes","err","Error","status","internalError","statusCode","parseResponseBody","errorcode","getHumanReadableError","errorcontext","errorCode","errorContext","csrfToken","GET","fetch","credentials","getOptions","csrf","method","Accept","Content-Type","X-Csrf-Token","body","POST","me","apiInfo","_ref3","_ref3$response","route","pubkey","testnet","mode","activeusersession","newUser","username","password","keys","register","verificationtoken","verifyNewUser","verificationToken","qs","likedComments","proposalPaywallDetails","userProposalCredits","editUser","_ref4","emailnotifications","manageUser","userid","verifyUserPayment","login","likeComment","censorComment","changeUsername","newusername","changePassword","currentpassword","newpassword","forgottenPasswordRequest","resetPassword","verifyResetPassword","resendVerificationEmailRequest","passwordResetRequest","updateKeyRequest","verifyKeyRequest","policy","vetted","after","unvetted","userProposals","searchUser","obj","user","userId","proposalComments","invoiceComments","logout","localStorage","removeItem","proposalSetStatus","censorMsg","proposalstatus","statuschangemessage","invoiceSetStatus","newProposal","_ref5","censorshiprecord","timestamp","Date","now","PROPOSAL_STATUS_UNREVIEWED","editProposal","newComment","startVote","duration","quorumpercentage","passpercentage","vote","mask","options","description","bits","proposalsVoteStatus","proposalVoteStatus","proposalVoteResults","proposalAuthorizeOrRevokeVote","proposalPaywallPayment","rescanUserPayments","PUT","inviteNewUser","newInvoice","invoice","_ref6","INVOICE_STATUS_UNREVIEWED","editInvoice","userInvoices","adminInvoices","generatePayouts","payApprovedInvoices","tokenInventory","exchangeRate","customStyles","container","provided","objectSpread","height","valueContainer","fontWeight","display","alignItems","control","minHeight","option","padding","textAlign","dropdownIndicator","input","margin","SelectEditor","value","onCommit","react_default","a","createElement","react_select_esm","classNamePrefix","styles","autoFocus","openOnFocus","closeOnSelect","find","op","getValueObj","onChange","MultiLineEditor","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","bind","assertThisInitialized","handleOnKeyDownCapture","resizeText","event","target","keyCode","shiftKey","stopPropagation","textAreaRef","style","scrollHeight","maxHeight","_this2","_this$props","onKeyDown","className","onKeyDownCapture","ref","React","Component","columnTypes","LABOR_COL","EXP_COL","SUBTOTAL_COL","getDropdownOptionsByColumnType","colType","_mapColTypeToOptions","defineProperty","label","selectWrapper","InvoiceDatasheet_SelectEditor","multiLineWrapper","InvoiceDatasheet_MultiLineEditor","generateBlankLineItem","type","domain","subdomain","proposaltoken","labor","expenses","subtotal","convertLineItemsToGrid","readOnly","grid","createTableHeaders","_lineItems$reduce","reduce","acc","line","idx","isLabelReadonly","isExpenseReadonly","newLine","dataEditor","fromMinutesToHours","fromUSDCentsToUSDUnits","expenseTotal","laborTotal","total","gridBody","totalsLine","component","forceComponent","convertGridToLineItems","copyGrid","row","toConsumableArray","rowValues","lineItem","cell","col","fromHoursToMinutes","fromUSDUnitsToUSDCents","lineitemsWithSubtotal","rate","l","width","updateGridCell","values","processCellsChange","currentGrid","changes","userRate","change","processTypeColChange","processLaborColChange","processExpenseColChange","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","g","return","processSubtotalColChange","__webpack_require__","d","__webpack_exports__","resetNewProposalData","getNewProposalData","handleSaveTextEditorsContent","resetNewInvoiceData","getNewInvoiceData","handleSaveCSVEditorsContent","query_string__WEBPACK_IMPORTED_MODULE_0__","query_string__WEBPACK_IMPORTED_MODULE_0___default","n","_helpers__WEBPACK_IMPORTED_MODULE_1__","_components_InvoiceDatasheet_helpers__WEBPACK_IMPORTED_MODULE_2__","getProposalBackupKey","key","updateProposalFormData","state","proposalFormState","form","newProposalData","location","pathname","search","draftid","parse","getProposalPath","window","sessionStorage","setItem","getItem","getInvoiceBackupKey","updateInvoiceFormData","invoiceFormState","newInvoiceData","address","contact","lineitems","getInvoicePath","getCurrentMonth","getCurrentYear","loggedInStateKey","stateKey","persistentStateKey","loadStateLocalStorage","serializedState","saveStateLocalStorage","console","log","clearStateLocalStorage","handleSaveStateToLocalStorage","loggedInAsEmail","proposalcredits","app","proposalCredits","loggedInAsUsername","stateFromLs","apiMeFromStorage","apiMeResponseFromStorage","apiMe","apiMeResponse","customResponse","isEqual","set","handleSaveApiMe","draftProposalsFromStore","draftProposals","draftProposalsLocalStorage","newValue","handleSaveAppDraftProposals","draftInvoicesFromStore","draftInvoices","draftInvoicesLocalStorage","handleSaveAppDraftInvoices","replyTo","or","constant","apiProposal","apiInvoice","getLastSubmittedProposal","submittedProposals","lastSubmitted","draftProposalById","drafts","draftInvoiceById","getUserAlreadyPaid","userAlreadyPaid","getAdminFilterValue","parseInt","adminProposalsShow","getPublicFilterValue","publicProposalsShow","getUserFilterValue","userProposalsShow","getMonthFilterValue","invoiceSortOption","getYearFilterValue","isMarkdown","compose","eq","isJSON","getProposalFiles","getInvoiceFiles","getMarkdownFile","getNotMarkdownFile","filter","not","getNotJSONFile","getEditProposalValues","getTextFromIndexMd","getEditUserValues","emailNotifications","apiEditUserResponse","apiEditUserPayload","apiUserResponse","myproposalnotifications-statuschange","NOTIFICATION_EMAIL_MY_PROPOSAL_STATUS_CHANGE","myproposalnotifications-votestarted","NOTIFICATION_EMAIL_MY_PROPOSAL_VOTE_STARTED","regularproposalnotifications-vetted","NOTIFICATION_EMAIL_REGULAR_PROPOSAL_VETTED","regularproposalnotifications-edited","NOTIFICATION_EMAIL_REGULAR_PROPOSAL_EDITED","regularproposalnotifications-votestarted","NOTIFICATION_EMAIL_REGULAR_PROPOSAL_VOTE_STARTED","adminproposalnotifications-new","NOTIFICATION_EMAIL_ADMIN_PROPOSAL_NEW","adminproposalnotifications-voteauthorized","NOTIFICATION_EMAIL_ADMIN_PROPOSAL_VOTE_AUTHORIZED","commentnotifications-proposal","NOTIFICATION_EMAIL_COMMENT_ON_MY_PROPOSAL","commentnotifications-comment","NOTIFICATION_EMAIL_COMMENT_ON_MY_COMMENT","resolveEditUserValues","prefs","getUserPaywallStatus","isCMS","CMS_PAYWALL_STATUS","PAYWALL_STATUS_PAID","userPaywallStatus","PAYWALL_STATUS_WAITING","getUserPaywallConfirmations","userPaywallConfirmations","getUserPaywallTxid","userPaywallTxid","userHasPaid","userCanExecuteActions","getKeyMismatch","isProposalStatusApproved","apiProposalComments","apiInvoiceComments","getTempThreadTree","replyThreadTree","unvettedProposals","apiUnvettedProposals","vettedProposals","apiVettedProposals","getUnvettedFilteredProposals","filterValue","proposals","PROPOSAL_STATUS_UNREVIEWED_CHANGES","b","getDraftProposals","draftsObj","indexOf","getSubmittedUserProposals","userID","isUserProp","prop","vettedProps","unvettedProps","orderBy","sortByNewestFirst","getUserProposalsWithVoteStatus","voteStatus","getPropVoteStatus","getUserProposals","userFilterValue","PROPOSAL_USER_FILTER_SUBMITTED","PROPOSAL_USER_FILTER_DRAFT_PROPOSALS","getUserInvoicesFilterCounts","invoices","apiUserInvoices","_state$app$invoiceSor","FILTER_ALL_MONTHS","getInvoicesByMonth","getInvoicesByYear","draftFilterCounts","PROPOSAL_USER_FILTER_DRAFT_INVOICES","getDraftInvoices","assign","getInvoicesCountByStatus","getAdminInvoicesCountByStatus","apiAdminInvoices","_state$app$invoiceSor2","INVOICE_STATUS_NEW","getInvoicesByStatus","INVOICE_STATUS_UPDATED","INVOICE_STATUS_REJECTED","INVOICE_STATUS_APPROVED","INVOICE_STATUS_DISPUTED","INVOICE_STATUS_PAID","INVOICE_FILTER_ALL","i","getAdminInvoices","adminFilterValue","monthFilter","yearFilter","invoicesByStatus","invoicesByYear","invoicesByMonth","getUserInvoices","getUserProposalFilterCounts","_proposalFilterCounts","proposalFilterCounts","PROPOSAL_FILTER_ALL","getUnvettedProposalFilterCounts","usResponse","apiUnvettedStatusResponse","numofunvetted","numofunvettedchanges","PROPOSAL_STATUS_CENSORED","numofcensored","getVettedProposalFilterCounts","_objectSpread2","PROPOSAL_STATUS_ABANDONED","PROPOSAL_APPROVED","PROPOSAL_REJECTED","vsResponse","apiPropsVoteStatusResponse","count","countPublicProposals","votesstatus","countOfAbandonedProps","p","countAbandonedProposals","countOfApprovedProps","vs","PROPOSAL_VOTING_FINISHED","isProposalApproved","countApprovedProps","countOfRejectedProps","countRejectedProps","getUnvettedEmptyProposalsMessage","getVettedEmptyProposalsMessage","PROPOSAL_VOTING_ACTIVE","PROPOSAL_VOTING_NOT_AUTHORIZED","getCsrfIsNeeded","csrfIsNeeded","isShowingSignupConfirmation","shouldAutoVerifyKey","shouldVerifyKey","identityImportError","identityImportResult","errorMsg","identityImportSuccess","successMsg","onboardViewed","commentsSortOption","pollingCreditsPayment","proposalPaymentReceived","redirectedFrom","getopenedModals","getIsExtApiRequesting","bool","getExtApiResponse","getExtApiError","isApiRequestingPayWithFaucet","payWithFaucetError","payWithFaucetTxId","lastBlockHeight","isApiRequestingLastBlockHeight","recordFormSelector","formValueSelector","invoiceFormMonth","invoiceFormYear","selectorMap","fns","_len","args","Array","_key","res","apply","_app__WEBPACK_IMPORTED_MODULE_0__","_api__WEBPACK_IMPORTED_MODULE_1__","_modal__WEBPACK_IMPORTED_MODULE_2__","_external_api__WEBPACK_IMPORTED_MODULE_3__","getIsApiRequesting","getApiPayload","getApiResponse","getApiError","isApiRequestingInit","isApiRequestingUnvettedStatus","isApiRequestingMe","isApiRequestingPolicy","isApiRequestingNewUser","isApiRequestingChangePassword","isApiRequestingChangeUsername","isApiRequestingVerifyNewUser","isApiRequestingLogin","isApiRequestingLogout","isApiRequestingForgottenPassword","isApiRequestingResendVerificationEmail","isApiRequestingPasswordReset","isApiRequestingVetted","isApiRequestingUnvetted","isApiRequestingUserProposals","isApiRequestingProposal","isApiRequestingNewProposal","isApiRequestingNewInvoice","isApiRequestingInvoice","isApiRequestingUserSearch","isApiRequestingUser","isApiRequestingNewComment","isApiRequestingSetStatusProposal","isApiRequestingPropsVoteStatus","isApiRequestingPropVoteStatus","isApiRequestingPropVoteResults","isApiRequestingEditUser","isApiRequestingManageUser","isApiRequestingEditProposal","isApiRequestingEditInvoice","apiNewUserPayload","apiLoginPayload","apiForgottenPasswordPayload","apiResendVerificationEmailPayload","apiNewProposalPayload","apiNewInvoicePayload","apiSetStatusProposalPayload","apiManageUserPayload","apiInitResponse","apiPolicyResponse","apiNewUserResponse","apiChangePasswordResponse","apiChangeUsernameResponse","apiLoginResponse","resendVerificationEmailResponse","verifyResetPasswordResponse","apiVettedResponse","apiUserProposalsResponse","apiUnvettedResponse","apiProposalResponse","apiInvoiceResponse","apiProposalCommentsResponse","apiInvoiceCommentsResponse","apiNewProposalResponse","apiNewInvoiceResponse","apiUserInvoicesResponse","apiSetStatusProposalResponse","apiUserSearchResponse","updateUserKey","verifyUserKey","updateUserKeyError","verifyUserKeyError","apiCommentsLikesResponse","editUserError","manageUserResponse","apiLikeCommentError","apiLikeCommentPayload","apiPropsVoteStatusError","apiPropVoteStatusError","apiPropVoteResultsResponse","apiAuthorizeVotePayload","apiAuthorizeVoteError","isApiRequestingAuthorizeVote","apiAuthorizeVoteToken","apiStartVotePayload","apiStartVoteError","isApiRequestingStartVote","apiStartVoteToken","isApiRequestingSetProposalStatusByToken","setStatusProposalIsRequesting","setStatusProposalToken","setStatusProposalStatus","apiProposalPaywallDetailsResponse","proposalPaywallAddress","proposalCreditPrice","creditPrice","api","creditprice","isApiRequestingProposalPaywall","proposalPaywallError","apiUserProposalCreditsResponse","proposalCreditPurchases","r","spentcredits","unspentcredits","purchasesMap","forEach","credit","txid","numberPurchased","price","datePurchased","datepurchased","txId","isApiRequestingUserProposalCredits","apiInitError","apiCensorCommentError","apiNewUserError","apiUserError","apiChangePasswordError","apiChangeUsernameError","apiVerifyNewUserError","apiLoginError","apiLogoutError","apiUserSearchError","apiVettedError","apiUserProposalsError","apiUnvettedError","apiProposalError","apiNewProposalError","apiNewInvoiceError","apiUserInvoicesError","apiSetStatusProposalError","apiCommentsLikesError","apiError","newUserEmail","forgottenPassEmail","emailForResendVerification","lastLoginTime","getUserUsername","isAdmin","paywalladdress","paywallAddress","paywallTxid","paywallAmount","paywallamount","paywallTxNotBefore","paywalltxnotbefore","isTestNet","proposalsWithVoteStatus","proposalWithVoteStatus","censoredComment","getApiLastLoaded","lastLoadedUnvettedProposal","lastLoadedUserProposal","lastLoadedUserDetailProposal","serverPubkey","userPubkey","commentsLikes","isLoadingSubmit","vettedProposalsIsRequesting","vettedProposalsError","userProposalsIsRequesting","userProposalsError","filtered","unreviewedProposals","censoredProposals","unvettedProposalsIsRequesting","unvettedProposalsError","proposalToken","proposalStatus","proposalAuthor","proposalIsRequesting","invoiceIsRequesting","proposalError","newUserResponse","newProposalIsRequesting","newInvoiceIsRequesting","newProposalError","newInvoiceError","userInvoiceError","newProposalMerkle","newProposalToken","newProposalSignature","newProposalName","newProposalDescription","newProposalFiles","newInvoiceToken","setStatusProposalError","keyMismatch","manageUserAction","lastLoginTimeFromLoginResponse","lastLoginTimeFromMeResponse","sessionMaxAge","visitedProposal","apiEditProposalResponse","apiEditProposalError","editProposalToken","apiProposalPaywallPaymentResponse","apiProposalPaywallPaymentTxid","apiProposalPaywallPaymentAmount","apiProposalPaywallPaymentConfirmations","isApiRequestingUpdateUserKey","apiRescanUserPaymentsResponse","apiRescanUserPaymentsUserId","apiRescanUserPaymentsError","isApiRequestingRescanUserPayments","apiRescanUserPaymentsNewCredits","amountOfCreditsAddedOnRescan","newCredits","apiTokenInventoryResponse","apiTokenInventoryError","apiTokenInventoryIsRequesting","resetPasswordResponse","isApiRequestingComments","isApiRequestingCommentsLikes","isModeFetched","CMSWWWMODE","invoiceToken","inviteUserResponse","isApiRequestingInviteUser","isApiRequestingPayInvoices","isApiRequestingAdminInvoices","adminInvoicesResponse","resetPassEmail","adminInvoicesError","isApiRequestingUserInvoices","isApiRequestingSetStatusInvoice","setStatusInvoicePayload","setStatusInvoicePayloadToken","setStatusInvoicePayloadStatus","generatePayoutsResponse","generatePayoutsError","isApiRequestingGeneratePayouts","payouts","isApiRequestingSetInvoiceStatusByToken","usePaywall","and","apiEditInvoiceResponse","apiEditInvoiceError","editInvoiceToken","visitedInvoice","apiExchangeRateResponse","apiExchangeRateError","isApiRequestingExchangeRate","onRouteChange","dispatch","cleanErrors","onSetReplyParent","parentId","Promise","all","act","SET_REPLY_PARENT","reset","onSaveNewInvoice","_","getState","onSubmitInvoice","sel","onSaveNewProposal","onSubmitProposal","trim","onSaveNewProposalV2","onEditProposalV2","onSubmitEditedProposal","onFetchProposalApi","onSaveNewCommentV2","parentID","onSubmitCommentApi","onEditProposal","onResetUser","RESET_USER","onEditInvoice","_ref7","onSubmitEditedInvoice","onSaveDraftProposal","_ref8","draftId","uniqueID","SAVE_DRAFT_PROPOSAL","onLoadDraftProposals","stateFromLS","LOAD_DRAFT_PROPOSALS","onDeleteDraftProposal","DELETE_DRAFT_PROPOSAL","onSaveDraftInvoice","_ref9","SAVE_DRAFT_INVOICE","onLoadDraftInvoices","LOAD_DRAFT_INVOICES","onDeleteDraftInvoice","DELETE_DRAFT_INVOICE","onSaveChangeUsername","_ref10","newUsername","onChangeUsername","onSaveChangePassword","_ref11","existingPassword","newPassword","onChangePassword","onFetchProposalApp","onFetchProposalComments","onFetchInvoiceApp","onFetchInvoiceApi","onFetchInvoiceComments","onLoadMe","LOAD_ME","onResetPaywallInfo","RESET_PAYWALL_INFO","onChangeAdminFilter","CHANGE_ADMIN_FILTER_VALUE","onChangeUserFilter","CHANGE_USER_FILTER_VALUE","onChangeDateFilter","CHANGE_DATE_FILTER","onResetDateFilter","RESET_DATE_FILTER","onChangeProposalStatusApproved","SET_PROPOSAL_APPROVED","onIdentityImported","IDENTITY_IMPORTED","onLocalStorageChange","_ref12","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","apiInfoResponse","wrap","_context","prev","abrupt","sent","handleLogout","onRequestMe","stop","_x","_x2","setOnboardAsViewed","SET_ONBOARD_AS_VIEWED","resetLastSubmittedProposal","RESET_LAST_SUBMITTED","onSetCommentsSortOption","SET_COMMENTS_SORT_OPTION","toggleCreditsPaymentPolling","TOGGLE_CREDITS_PAYMENT_POLLING","toggleProposalPaymentReceived","TOGGLE_PROPOSAL_PAYMENT_RECEIVED","onEditUserPreferences","preferences","onEditUser","onResetComments","RESET_COMMENTS","onResetInviteUser","RESET_INVITE_USER","openModal","closeModal","closeAllModals","confirmWithModal","_types__WEBPACK_IMPORTED_MODULE_0__","modalType","callback","disableCloseOnClick","disableCloseOnEsc","OPEN_MODAL","CLOSE_MODAL","CLOSE_ALL_MODALS","resolve","ErrorBoundary","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","error","title","errorRenderer","displayError","children","defaultProps","react__WEBPACK_IMPORTED_MODULE_5___default","_Message__WEBPACK_IMPORTED_MODULE_6__","header","TESTNET","RECORD_TYPE_INVOICE","EXPLORER","PROPOSAL_STATUS_PUBLIC","PAYWALL_STATUS_LACKING_CONFIRMATIONS","CONFIRMATIONS_REQUIRED","PUB_KEY_STATUS_LOADING","PUB_KEY_STATUS_LOADED","PROPOSAL_VOTING_AUTHORIZED","USER_DETAIL_TAB_GENERAL","USER_DETAIL_TAB_PREFERENCES","USER_DETAIL_TAB_PROPOSALS","MANAGE_USER_EXPIRE_NEW_USER_VERIFICATION","MANAGE_USER_EXPIRE_UPDATE_KEY_VERIFICATION","MANAGE_USER_EXPIRE_RESET_PASSWORD_VERIFICATION","MANAGE_USER_CLEAR_USER_PAYWALL","MANAGE_USER_UNLOCK","MANAGE_USER_DEACTIVATE","MANAGE_USER_REACTIVATE","LIST_HEADER_PUBLIC","LIST_HEADER_UNVETTED","LIST_HEADER_USER","SORT_BY_OLD","SORT_BY_NEW","SORT_BY_TOP","DEFAULT_TAB_TITLE","PUBLIC_KEY_MISMATCH","INVALID_KEY_PAIR","INVALID_FILE","LOAD_KEY_FAILED","PI_DOCS","PROPOSAL_GUIDELINES","TESTNET_PROPOSALS_REPOSITORY","MAINNET_PROPOSALS_REPOSITORY","INVOICE_STATUS_INVALID","INVOICE_STATUS_NOTFOUND","CMS_LIST_HEADER_ADMIN","CMS_LIST_HEADER_USER","CMS_DEFAULT_TAB_TITLE","MONTHS","YEARS","BLOCK_DURATION_TESTNET","BLOCK_DURATION_MAINNET","_lib__WEBPACK_IMPORTED_MODULE_1__","reduceTypes","types","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","Message","onDismissClick","mapTypeToIcon","success","info","icon","lineHeight","flexGrow","whiteSpace","message","cursor","fontSize","onClick","formReducer","reducer","plugin","form/record","form/reply","form/change-username","form/change-password","DEFAULT_STATE","replyParent","recentPayments","_act$SET_REPLY_PARENT","_action$payload","_action$payload$comme","tree","parentBranch","updatedParentBranch","newDraftProposals","newDraft","newDraftInvoices","_action$payload2","votesEndHeight","endheight","currentNumberOfConfirmations","el","amount","DEFAULT_REQUEST_STATE","isRequesting","request","receive","resetMultiple","onReceiveVoteStatusChange","newStatus","newVoteStatus","optionsresult","totalvotes","receiveProposals","isUnvetted","lastLoaded","incomingUnvettedProps","incomingVettedProps","unionWith","onReceiveProposals","auxPayload","cloneDeep","onReceiveSetStatusInvoice","invoiceFromState","updatedInvoiceToken","updatedInvoiceStatus","updateInvoiceStatus","getInvoiceToken","updatedUserInvoices","updatedAdminInvoices","resopnse","init","commentslikes","forgottenPassword","passwordReset","unvettedStatus","userSearch","_act$SET_EMAIL$act$CL","curr","userProps","onReceiveUser","comments","c","censored","onReceiveCensoredComment","cAction","newAction","backupCV","reducedVotes","cv","currentAction","oldAction","cvs","newCommentVote","_reducedVotes","newCommentsLikes","backup","resultvotes","onReceiveSyncLikeComment","commentsLikesBackup","proposalCommentsBackup","onResetSyncLikeComment","getExpiredTime","getTime","manageUserPayload","newuserverificationexpiry","updatekeyverificationexpiry","resetpasswordverificationexpiry","newuserpaywallamount","islocked","isdeactivated","onReceiveManageUser","isadmin","onReceiveNewComment","poyload","onReceiveNewInvoiceComment","onReceiveCensorInvoiceComment","getProposalToken","updatedProposal","viewedProposal","updateProposalStatus","onReceiveSetStatus","newState","data","onReceiveProposalsVoteStatus","onReceiveProposalVoteStatus","hashmap","castvotes","ticket","onReceiveProposalVoteResults","creditsAdded","newcredits","onReceiveRescanUserPayments","onReceivePayApprovedInvoices","openedModals","modal","_act$OPEN_MODAL$act$C","payWithFaucet","external_api","_act$REQUEST_PAYWALL_","rootReducer","combineReducers","configureStore","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middlewares","createLogger","process","REACT_APP_USE_REDUX_LOGGER","thunkMiddleware","Boolean","createStore","applyMiddleware","dcrdataURL","isTestnet","getSubdomainForDcrdata","getRawTransactions","url","statusText","getHeightByDcrdata","dcrddataBlockHeightURL","getPaymentsByAddressDcrdata","dcrdataAddressURL","params","formBody","encodedKey","encodeURIComponent","encodedValue","push","clearPollingPointer","external_api_verifyUserPayment","actions_external_api_payWithFaucet","external_api_getLastBlockHeight","external_api_resetPaywallPaymentWithFaucet","globalpollingpointer","clearTimeout","setPollingPointer","paymentpolling","txNotBefore","checkForPayment","checkDcrdataHandler","catch","txn","confirmations","UPDATE_USER_PAYWALL_STATUS","verifyUserPaymentWithPoliteia","verified","setTimeout","handler","transactions","addressToMatch","transaction","vout","time","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","voutData","addresses","scriptPubKey","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","REQUEST_PAYWALL_PAYMENT_WITH_FAUCET","RECEIVE_PAYWALL_PAYMENT_WITH_FAUCET","getLastBlockHeight","REQUEST_GET_LAST_BLOCK_HEIGHT","RECEIVE_GET_LAST_BLOCK_HEIGHT","resetPaywallPaymentWithFaucet","RESET_PAYWALL_PAYMENT_WITH_FAUCET","str","btoa","unescape","atou","decodeURIComponent","escape","atob","file","text","substring","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","85","88","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","base64","binary_string","len","bytes","Uint8Array","charCodeAt","buffer","ab","i8a","lib","WordArray","create","getUsernameFieldLabel","defaultText","minusernamelength","maxusernamelength","getPasswordFieldLabel","minpasswordlength","getRandomColor","color","Math","floor","random","prefix","substr","verifyUserPubkey","keyToBeMatched","keyMismatchAction","publicKey","multiplyFloatingNumbers","num1","num2","cont1","cont2","pow","hasReachedQuorom","numofeligiblevotes","yesOption","hasPassed","votesreceived","_defaultObj","defaultObj","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","cur","renderInvoiceStatus","mapInvoiceStatusToMessage","_mapInvoiceStatusToMe","formatDate","date","twoChars","v","getUTCFullYear","getUTCMonth","day","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","getJsonData","split","pop","e","getMonth","getFullYear","parseFloat","toFixed","cents","units","isEmpty","toggleBlockScroll","block","scrollTo","document","overflow","arg","fn","_len2","_key2","_len3","_key3","result","_len4","_key4","_len5","_key5","t","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","callAfterMinimumWait","waitTimeMs","timedOut","revisedCallback","CONFIRM_ACTION","CONFIRM_ACTION_WITH_REASON","LOGIN","PAYWALL_MODAL","PURCHASE_CREDITS_MODAL","CREDITS_HISTORY_MODAL","MANAGE_CREDITS_MODAL","CHANGE_USERNAME_MODAL","CHANGE_PASSWORD_MODAL","START_VOTE_MODAL","SEARCH_PROPOSAL_VOTES","IMPORT_IDENTITY_MODAL","PROPOSAL_VERSION_DIFF","WELCOME_MODAL","getQueryStringValue","queryString","getQueryStringValues","setQueryStringValue","newQsValue","qsValue","newurl","protocol","host","history","pushState","setQueryStringWithoutPageReload","removeQueryStringsFromUrl","parameter","parameter2","replace","RegExp","constants","RECORD_TYPE_PROPOSAL","commonDefaults","isStaging","aboutContent","POLITEIA","paywallContent","recordType","enableAdminInvite","enableCommentVote","enablePaywall","privacyPolicyContent","testnetGitRepository","mainnetGitRepository","CMS","privacyprivacyPolicyContent","ConfigContext","createContext","useConfig","Consumer","useContext","ConfigProvider","configOptions","objectWithoutProperties","Provider","defaultPreset","presets","Config","defaultStagingValue","defaultTitleValue","defaultRecordType","defaultEnableAdminInvite","defaultEnableCommentVote","defaultEnablePaywall","defaultprivacyPolicyContent","defaultAboutContent","defaultPaywallContent","defaultTestnetGitRepository","defaultMainnetGitRepository","env","dotenvParse","getConf","presetName","loadConfig","ConfigProvider_ConfigProvider","ConfigProvider_useConfig","sha256","crypto","createHash","update","leaves","hashAlgorithm","hashAlgo","layers","createHashes","nodes","layerIndex","left","right","hash","leaf","index","proof","layer","isRightNode","pairIndex","position","targetNode","isArray","node","isLeftNode","buffers","toHex","loadKeys","generateKeys","existing","myPubKeyHex","signStringHex","verifyKeyPair","getKeys","importKeys","promise__WEBPACK_IMPORTED_MODULE_0__","promise__WEBPACK_IMPORTED_MODULE_0___default","localforage__WEBPACK_IMPORTED_MODULE_1__","localforage__WEBPACK_IMPORTED_MODULE_1___default","tweetnacl__WEBPACK_IMPORTED_MODULE_2__","tweetnacl__WEBPACK_IMPORTED_MODULE_2___default","tweetnacl_util__WEBPACK_IMPORTED_MODULE_3__","tweetnacl_util__WEBPACK_IMPORTED_MODULE_3___default","lodash_fp_get__WEBPACK_IMPORTED_MODULE_4__","lodash_fp_get__WEBPACK_IMPORTED_MODULE_4___default","toUint8Array","toByteArray","ceil","prototype","localforage","nacl","sign","keyPair","warn","myKeyPair","secretKey","myPublicKey","msg","detached","util","decodeUTF8","signString","_keysFromHex","keysFromHex","sig","pubKey","verify","keysToHex","decodedKeys","capitalize","stringInput","charAt","toUpperCase","slice","yupFieldMatcher","validation_minLengthMessage","validation_maxLengthMessage","buildRegexFromSupportedChars","supportedChars","concatedChars","char","invalidMessage","fieldName","stringUtils","buildValidCharsStrFromSupportedChars","excludeEmptyString","minLengthMessage","minLenght","maxLengthMessage","maxLength","SET_EMAIL","REQUEST_INIT_SESSION","RECEIVE_INIT_SESSION","REQUEST_ME","RECEIVE_ME","UPDATE_ME","REQUEST_POLICY","RECEIVE_POLICY","REQUEST_NEW_USER","RECEIVE_NEW_USER","SET_PROPOSAL_CREDITS","ADD_PROPOSAL_CREDITS","SUBTRACT_PROPOSAL_CREDITS","REQUEST_CHANGE_USERNAME","RECEIVE_CHANGE_USERNAME","REQUEST_CHANGE_PASSWORD","RECEIVE_CHANGE_PASSWORD","RESET_NEW_USER","REQUEST_VERIFY_NEW_USER","RECEIVE_VERIFY_NEW_USER","REQUEST_USER","RECEIVE_USER","REQUEST_LOGIN","RECEIVE_LOGIN","KEY_MISMATCH","REQUEST_FORGOTTEN_PASSWORD_REQUEST","RECEIVE_FORGOTTEN_PASSWORD_REQUEST","RESET_FORGOTTEN_PASSWORD_REQUEST","REQUEST_RESEND_VERIFICATION_EMAIL","RECEIVE_RESEND_VERIFICATION_EMAIL","RESET_RESEND_VERIFICATION_EMAIL","REQUEST_PASSWORD_RESET_REQUEST","RECEIVE_PASSWORD_RESET_REQUEST","RESET_PASSWORD_RESET_REQUEST","REQUEST_LOGOUT","RECEIVE_LOGOUT","REQUEST_USER_PROPOSALS","RECEIVE_USER_PROPOSALS","REQUEST_VETTED","RECEIVE_VETTED","REQUEST_UNVETTED","RECEIVE_UNVETTED","REQUEST_PROPOSAL","RECEIVE_PROPOSAL","REQUEST_PROPOSAL_COMMENTS","RECEIVE_PROPOSAL_COMMENTS","REQUEST_NEW_PROPOSAL","RECEIVE_NEW_PROPOSAL","REQUEST_EDIT_PROPOSAL","RECEIVE_EDIT_PROPOSAL","REQUEST_NEW_COMMENT","RECEIVE_NEW_COMMENT","RESET_PROPOSAL","RESET_INVOICE","REQUEST_SETSTATUS_PROPOSAL","RECEIVE_SETSTATUS_PROPOSAL","SET_VOTES_END_HEIGHT","REQUEST_START_VOTE","RECEIVE_START_VOTE","REQUEST_UPDATED_KEY","RECEIVE_UPDATED_KEY","REQUEST_VERIFIED_KEY","RECEIVE_VERIFIED_KEY","REQUEST_USERNAMES_BY_ID","RECEIVE_USERNAMES_BY_ID","REDIRECTED_FROM","RESET_REDIRECTED_FROM","CHANGE_PUBLIC_FILTER_VALUE","REQUEST_LIKE_COMMENT","RECEIVE_LIKE_COMMENT","RECEIVE_SYNC_LIKE_COMMENT","RESET_SYNC_LIKE_COMMENT","REQUEST_CENSOR_COMMENT","RECEIVE_CENSOR_COMMENT","REQUEST_LIKED_COMMENTS","RECEIVE_LIKED_COMMENTS","REQUEST_UNVETTED_STATUS","RECEIVE_UNVETTED_STATUS","REQUEST_EDIT_USER","RECEIVE_EDIT_USER","RESET_EDIT_USER","REQUEST_MANAGE_USER","RECEIVE_MANAGE_USER","REQUEST_PROPOSAL_VOTE_STATUS","RECEIVE_PROPOSAL_VOTE_STATUS","REQUEST_PROPOSAL_VOTE_RESULTS","RECEIVE_PROPOSAL_VOTE_RESULTS","REQUEST_PROPOSALS_VOTE_STATUS","RECEIVE_PROPOSALS_VOTE_STATUS","REQUEST_USER_SEARCH","RECEIVE_USER_SEARCH","REQUEST_SET_VISITED_PROPOSAL","RECEIVE_SET_VISITED_PROPOSAL","REQUEST_GET_VISITED_PROPOSAL","RECEIVE_GET_VISITED_PROPOSAL","SAVE_PAYMENT_POLLING_QUEUE","UPDATE_PAYMENT_POLLING_QUEUE","SET_PAYMENT_POLLING_QUEUE","REQUEST_PROPOSAL_PAYWALL_DETAILS","RECEIVE_PROPOSAL_PAYWALL_DETAILS","REQUEST_UPDATE_PROPOSAL_CREDITS","RECEIVE_UPDATE_PROPOSAL_CREDITS","REQUEST_USER_PROPOSAL_CREDITS","RECEIVE_USER_PROPOSAL_CREDITS","CLEAN_ERRORS","REQUEST_SIGNUP_CONFIRMATION","RESET_SIGNUP_CONFIRMATION","RECEIVE_USERNAMES","CONFIRM_MODAL","RECEIVE_NEW_THREAD_COMMENT","CSRF_NEEDED","SHOULD_AUTO_VERIFY_KEY","REQUEST_AUTHORIZE_VOTE","RECEIVE_AUTHORIZE_VOTE","RECEIVE_REVOKE_AUTH_VOTE","REQUEST_PROPOSAL_PAYWALL_PAYMENT","RECEIVE_PROPOSAL_PAYWALL_PAYMENT","REQUEST_RESCAN_USER_PAYMENTS","RECEIVE_RESCAN_USER_PAYMENTS","RESET_RESCAN_USER_PAYMENTS","REQUEST_TOKEN_INVENTORY","RECEIVE_TOKEN_INVENTORY","REQUEST_RESET_PASSWORD","RECEIVE_RESET_PASSWORD","REQUEST_VERIFY_RESET_PASSWORD","RECEIVE_VERIFY_RESET_PASSWORD","RESET_RESET_PASSWORD","REQUEST_INVITE_USER","RECEIVE_INVITE_USER","REQUEST_NEW_INVOICE","RECEIVE_NEW_INVOICE","REQUEST_EDIT_INVOICE","RECEIVE_EDIT_INVOICE","REQUEST_USER_INVOICES","RECEIVE_USER_INVOICES","REQUEST_ADMIN_INVOICES","RECEIVE_ADMIN_INVOICES","REQUEST_INVOICE","RECEIVE_INVOICE","REQUEST_INVOICE_COMMENTS","RECEIVE_INVOICE_COMMENTS","RECEIVE_NEW_INVOICE_COMMENT","RECEIVE_CENSOR_INVOICE_COMMENT","REQUEST_SETSTATUS_INVOICE","RECEIVE_SETSTATUS_INVOICE","REQUEST_GENERATE_PAYOUTS","RECEIVE_GENERATE_PAYOUTS","REQUEST_PAY_APPROVED","RECEIVE_PAY_APPROVED","REQUEST_EXCHANGE_RATE","RECEIVE_EXCHANGE_RATE","onResetProposal","onResetInvoice","onSetEmail","onSignup","onResetSignup","onResetRescanUserPayments","onSignupConfirm","onCreateNewUserCMS","onCreateNewUser","requestApiInfo","fetchUser","external_api_actions","updateMe","onGetPolicy","withCsrf","onInviteUserConfirm","onResetNewUser","onVerifyNewUser","onSearchUser","query","onLogin","onLogout","_Users_mg_Desktop_doschain_politeiagui_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","onFetchUserInvoices","onFetchAdminInvoices","onFetchVettedByTokens","tokens","fetchVoteStatus","promises","voteStatusPromises","onFetchProposalVoteStatus","t0","onFetchTokenInventory","onFetchUnvettedStatus","onFetchUnvetted","onFetchProposal","onFetchInvoice","onFetchUser","test","onFetchLikedComments","onManageUser","modalTypes","confirm","onManageUserv2","numcomments","onLikeComment","onCensorComment","isCms","receipt","onSubmitComment","responsecomment","onUpdateUserKey","onVerifyUserKey","onSetInvoiceStatus","authorid","onSetProposalStatus","censorMessage","resetRedirectedFrom","onForgottenPasswordRequest","resetForgottenPassword","onResetPassword","onVerifyResetPassword","onResendVerificationEmail","onResendVerificationEmailConfirm","_ref13","resetResendVerificationEmail","onPasswordResetRequest","_ref14","resetPasswordReset","haspaid","onStartVote","quorum","pass","onFetchProposalPaywallDetails","onUserProposalCredits","dispatchAfterWaitFn","onFetchProposalsVoteStatus","onFetchUserProposalsWithVoteStatus","_ref16","_callee2","_ref17","publicPropsTokens","_context2","onFetchProposalsVoteStatusByTokens","_ref18","_callee3","_context3","_x3","onFetchProposalVoteResults","onAuthorizeVote","onRevokeVote","onFetchProposalPaywallPayment","onRescanUserPayments","onGeneratePayouts","onPayApprovedInvoices","onFetchExchangeRate"],"mappings":"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BAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,sBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,IAAA7R,EAAAC,EAAAC,EAAA,uBAAA2R,EAAA,KAAA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","file":"static/js/1.f8d9be59.chunk.js","sourcesContent":["import \"isomorphic-fetch\";\nimport CryptoJS from \"crypto-js\";\nimport * as pki from \"./pki\";\nimport qs from \"query-string\";\nimport { sha3_256 } from \"js-sha3\";\nimport get from \"lodash/fp/get\";\nimport MerkleTree from \"./merkle\";\nimport {\n  PROPOSAL_STATUS_UNREVIEWED,\n  INVOICE_STATUS_UNREVIEWED\n} from \"../constants\";\nimport {\n  getHumanReadableError,\n  base64ToArrayBuffer,\n  arrayBufferToWordArray,\n  utoa\n} from \"../helpers\";\n\nexport const TOP_LEVEL_COMMENT_PARENTID = \"0\";\n\nconst STATUS_ERR = {\n  400: \"Bad response from server\",\n  401: \"Not authorized\",\n  403: \"Forbidden\",\n  404: \"Not found\"\n};\n\nconst apiBase = \"/api\";\nconst getUrl = (path, version = \"v1\") => `${apiBase}/${version}${path}`;\nconst getResponse = get(\"response\");\n\nexport const digestPayload = payload =>\n  CryptoJS.SHA256(\n    arrayBufferToWordArray(base64ToArrayBuffer(payload))\n  ).toString(CryptoJS.enc.Hex);\n\nexport const digest = payload => sha3_256(payload);\n\nexport const convertMarkdownToFile = markdown => ({\n  name: \"index.md\",\n  mime: \"text/plain; charset=utf-8\",\n  payload: utoa(markdown)\n});\nexport const convertJsonToFile = json => ({\n  name: \"invoice.json\",\n  mime: \"text/plain; charset=utf-8\",\n  payload: utoa(JSON.stringify(json))\n});\n\nexport const makeProposal = (name, markdown, attachments = []) => ({\n  files: [\n    convertMarkdownToFile(name + \"\\n\\n\" + markdown),\n    ...(attachments || [])\n  ].map(({ name, mime, payload }) => ({\n    name,\n    mime,\n    payload,\n    digest: digestPayload(payload)\n  }))\n});\n\nexport const makeInvoice = (\n  month,\n  year,\n  exchangerate,\n  contractorname,\n  contractorlocation,\n  contractorcontact,\n  contractorrate,\n  paymentaddress,\n  lineItems,\n  files = []\n) => {\n  const { name, mime, payload } = convertJsonToFile({\n    version: 1,\n    month,\n    year,\n    exchangerate,\n    contractorname,\n    contractorlocation,\n    contractorcontact,\n    contractorrate,\n    paymentaddress,\n    lineItems\n  });\n\n  return {\n    id: \"\",\n    month,\n    year,\n    exchangerate,\n    contractorname,\n    contractorlocation,\n    contractorcontact,\n    contractorrate,\n    paymentaddress,\n    files: [\n      {\n        name,\n        mime,\n        payload,\n        digest: digestPayload(payload)\n      },\n      ...files\n    ].map(({ name, mime, payload }) => ({\n      name,\n      mime,\n      payload,\n      digest: digestPayload(payload)\n    }))\n  };\n};\n\nexport const makeComment = (token, comment, parentid) => ({\n  token,\n  parentid: parentid || TOP_LEVEL_COMMENT_PARENTID,\n  comment\n});\n\nexport const makeLikeComment = (token, action, commentid) => ({\n  token,\n  commentid,\n  action\n});\n\nexport const makeCensoredComment = (token, reason, commentid) => ({\n  token,\n  commentid,\n  reason\n});\n\nexport const signRegister = (email, proposal) => {\n  return pki.myPubKeyHex(email).then(publickey => {\n    const digests = proposal.files\n      .map(x => Buffer.from(get(\"digest\", x), \"hex\"))\n      .sort(Buffer.compare);\n    const tree = new MerkleTree(digests);\n    const root = tree.getRoot().toString(\"hex\");\n    return pki\n      .signStringHex(email, root)\n      .then(signature => ({ ...proposal, publickey, signature }));\n  });\n};\n\nexport const signComment = (email, comment) =>\n  pki\n    .myPubKeyHex(email)\n    .then(publickey =>\n      pki\n        .signStringHex(\n          email,\n          [comment.token, comment.parentid, comment.comment].join(\"\")\n        )\n        .then(signature => ({ ...comment, publickey, signature }))\n    );\n\nexport const signLikeComment = (email, comment) =>\n  pki\n    .myPubKeyHex(email)\n    .then(publickey =>\n      pki\n        .signStringHex(\n          email,\n          [comment.token, comment.commentid, comment.action].join(\"\")\n        )\n        .then(signature => ({ ...comment, publickey, signature }))\n    );\n\nexport const signCensorComment = (email, comment) =>\n  pki\n    .myPubKeyHex(email)\n    .then(publickey =>\n      pki\n        .signStringHex(\n          email,\n          [comment.token, comment.commentid, comment.reason].join(\"\")\n        )\n        .then(signature => ({ ...comment, publickey, signature }))\n    );\n\nconst parseResponseBody = response => {\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType && contentType.includes(\"application/json\"))\n    return response.json();\n  const err = new Error(STATUS_ERR[response.status] || \"Internal server error\");\n  err.internalError = true;\n  err.statusCode = response.status;\n  throw err;\n};\n\nexport const parseResponse = response =>\n  parseResponseBody(response).then(json => {\n    if (json.errorcode) {\n      const err = new Error(\n        getHumanReadableError(json.errorcode, json.errorcontext)\n      );\n      err.internalError = false;\n      err.errorCode = json.errorcode;\n      err.errorContext = json.errorcontext;\n      throw err;\n    }\n    return { response: json, csrfToken: response.headers.get(\"X-Csrf-Token\") };\n  });\n\nconst GET = path =>\n  fetch(apiBase + path, { credentials: \"include\" }).then(parseResponse);\n\nconst getOptions = (csrf, json, method) => ({\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"X-Csrf-Token\": csrf\n  },\n  credentials: \"include\", // Include cookies\n  method,\n  body: JSON.stringify(json)\n});\n\nconst POST = (path, csrf, json) =>\n  fetch(getUrl(path), getOptions(csrf, json, \"POST\")).then(parseResponse);\n\nconst PUT = (path, csrf, json) =>\n  fetch(getUrl(path), getOptions(csrf, json, \"PUT\")).then(parseResponse);\n\nexport const me = () => GET(\"/v1/user/me\").then(getResponse);\n\nexport const apiInfo = () =>\n  GET(\"/\").then(\n    ({\n      csrfToken,\n      response: { version, route, pubkey, testnet, mode, activeusersession }\n    }) => ({\n      csrfToken: csrfToken,\n      version,\n      route,\n      pubkey,\n      testnet,\n      mode,\n      activeusersession\n    })\n  );\n\nexport const newUser = (csrf, email, username, password) =>\n  pki.generateKeys().then(keys =>\n    pki.loadKeys(email, keys).then(() =>\n      pki.myPubKeyHex(email).then(publickey =>\n        POST(\"/user/new\", csrf, {\n          email,\n          username,\n          password: digest(password),\n          publickey\n        }).then(getResponse)\n      )\n    )\n  );\n\nexport const register = (csrf, email, username, password, verificationtoken) =>\n  pki.generateKeys().then(keys =>\n    pki.loadKeys(email, keys).then(() =>\n      pki.myPubKeyHex(email).then(publickey =>\n        POST(\"/register\", csrf, {\n          email,\n          username,\n          password: digest(password),\n          publickey,\n          verificationtoken\n        }).then(getResponse)\n      )\n    )\n  );\n\nexport const verifyNewUser = (email, verificationToken) => {\n  return pki\n    .signStringHex(email, verificationToken)\n    .then(signature =>\n      GET(\n        \"/v1/user/verify?\" +\n          qs.stringify({ email, verificationToken, signature })\n      )\n    )\n    .then(getResponse);\n};\n\nexport const likedComments = token =>\n  GET(`/v1/user/proposals/${token}/commentslikes`).then(getResponse);\n\nexport const proposalPaywallDetails = () =>\n  GET(\"/v1/proposals/paywall\").then(getResponse);\n\nexport const userProposalCredits = () =>\n  GET(\"/v1/user/proposals/credits\").then(getResponse);\n\nexport const editUser = (csrf, { emailnotifications }) =>\n  POST(\"/user/edit\", csrf, {\n    emailnotifications\n  }).then(getResponse);\n\nexport const manageUser = (csrf, userid, action, reason) =>\n  POST(\"/user/manage\", csrf, { userid, action, reason }).then(getResponse);\n\nexport const verifyUserPayment = () =>\n  GET(\"/v1/user/verifypayment\").then(getResponse);\n\nexport const login = (csrf, username, password) =>\n  POST(\"/login\", csrf, { username, password: digest(password) }).then(\n    getResponse\n  );\n\n// XXXX: this route hasn't been merged into the master of the backend.\n// Pull request: https://github.com/decred/politeia/pull/940\nexport const loginWithUsername = (csrf, username, password) =>\n  POST(\"/login\", csrf, { username, password: digest(password) }).then(\n    getResponse\n  );\n\nexport const likeComment = (csrf, comment) =>\n  POST(\"/comments/like\", csrf, comment).then(getResponse);\n\nexport const censorComment = (csrf, comment) =>\n  POST(\"/comments/censor\", csrf, comment).then(getResponse);\n\nexport const changeUsername = (csrf, password, newusername) =>\n  POST(\"/user/username/change\", csrf, {\n    password: digest(password),\n    newusername\n  }).then(getResponse);\n\nexport const changePassword = (csrf, currentpassword, newpassword) =>\n  POST(\"/user/password/change\", csrf, {\n    currentpassword: digest(currentpassword),\n    newpassword: digest(newpassword)\n  }).then(getResponse);\n\nexport const forgottenPasswordRequest = (csrf, email) =>\n  POST(\"/user/password/reset\", csrf, { email }).then(getResponse);\n\n// XXXX: this route hasn't been merged into the master of the backend.\n// Pull request: https://github.com/decred/politeia/pull/937\nexport const resetPassword = (csrf, username, email) =>\n  POST(\"/user/password/reset\", csrf, { username, email }).then(getResponse);\n\n// XXXX: this route hasn't been merged into the master of the backend.\n// Pull request: https://github.com/decred/politeia/pull/937\nexport const verifyResetPassword = (\n  csrf,\n  username,\n  verificationtoken,\n  newpassword\n) =>\n  POST(\"/user/password/reset/verify\", csrf, {\n    username,\n    verificationtoken,\n    newpassword: digest(newpassword)\n  }).then(getResponse);\n\nexport const resendVerificationEmailRequest = (csrf, email) =>\n  pki\n    .generateKeys()\n    .then(keys => pki.loadKeys(email, keys))\n    .then(() => pki.myPubKeyHex(email))\n    .then(publickey =>\n      POST(\"/user/new/resend\", csrf, { email, publickey }).then(getResponse)\n    );\n\nexport const passwordResetRequest = (\n  csrf,\n  email,\n  verificationtoken,\n  newpassword\n) =>\n  POST(\"/user/password/reset\", csrf, {\n    email,\n    verificationtoken,\n    newpassword: digest(newpassword)\n  }).then(getResponse);\n\nexport const updateKeyRequest = (csrf, publickey) =>\n  POST(\"/user/key\", csrf, { publickey }).then(getResponse);\n\nexport const verifyKeyRequest = (csrf, email, verificationtoken) =>\n  pki\n    .signStringHex(email, verificationtoken)\n    .then(signature =>\n      POST(\"/user/key/verify\", csrf, { signature, verificationtoken }).then(\n        getResponse\n      )\n    );\n\nexport const policy = () => GET(\"/v1/policy\").then(getResponse);\nexport const vetted = after => {\n  return !after\n    ? GET(\"/v1/proposals/vetted\").then(getResponse)\n    : GET(`/v1/proposals/vetted?${qs.stringify({ after })}`).then(getResponse);\n};\n\nexport const unvetted = after => {\n  return !after\n    ? GET(\"/v1/proposals/unvetted\").then(getResponse)\n    : GET(`/v1/proposals/unvetted?${qs.stringify({ after })}`).then(\n        getResponse\n      );\n};\n\nexport const userProposals = (userid, after) => {\n  return !after\n    ? GET(`/v1/user/proposals?${qs.stringify({ userid })}`).then(getResponse)\n    : GET(`/v1/user/proposals?${qs.stringify({ userid, after })}`).then(\n        getResponse\n      );\n};\n\nexport const searchUser = obj =>\n  GET(`/v1/users?${qs.stringify(obj)}`).then(getResponse);\n\nexport const status = () => GET(\"/v1/proposals/stats\").then(getResponse);\nexport const proposal = (token, version = null) =>\n  GET(`/v1/proposals/${token}` + (version ? `?version=${version}` : \"\")).then(\n    getResponse\n  );\n\nexport const user = userId => GET(`/v1/user/${userId}`).then(getResponse);\nexport const proposalComments = token =>\n  GET(`/v1/proposals/${token}/comments`).then(getResponse);\nexport const invoiceComments = token =>\n  GET(`/v1/invoices/${token}/comments`).then(getResponse);\nexport const logout = csrf =>\n  POST(\"/logout\", csrf, {}).then(() => {\n    localStorage.removeItem(\"state\");\n    return {};\n  });\n\nexport const proposalSetStatus = (email, csrf, token, status, censorMsg) =>\n  pki\n    .myPubKeyHex(email)\n    .then(publickey =>\n      pki.signStringHex(email, token + status + censorMsg).then(signature => {\n        return POST(`/proposals/${token}/status`, csrf, {\n          proposalstatus: status,\n          token,\n          signature,\n          publickey,\n          statuschangemessage: censorMsg\n        });\n      })\n    )\n    .then(getResponse);\n\nexport const invoiceSetStatus = (email, csrf, token, version, status, reason) =>\n  pki\n    .myPubKeyHex(email)\n    .then(publickey =>\n      pki\n        .signStringHex(email, token + version + status + reason)\n        .then(signature => {\n          return POST(`/invoices/${token}/status`, csrf, {\n            status,\n            token,\n            signature,\n            publickey,\n            reason\n          });\n        })\n    )\n    .then(getResponse);\n\nexport const newProposal = (csrf, proposal) =>\n  POST(\"/proposals/new\", csrf, proposal).then(\n    ({ response: { censorshiprecord } }) => ({\n      ...proposal,\n      censorshiprecord,\n      timestamp: Date.now() / 1000,\n      status: PROPOSAL_STATUS_UNREVIEWED\n    })\n  );\n\nexport const editProposal = (csrf, proposal) =>\n  POST(\"/proposals/edit\", csrf, proposal).then(getResponse);\n\nexport const newComment = (csrf, comment) =>\n  POST(\"/comments/new\", csrf, comment).then(getResponse);\n\nexport const startVote = (\n  email,\n  csrf,\n  token,\n  duration,\n  quorumpercentage,\n  passpercentage\n) =>\n  pki\n    .myPubKeyHex(email)\n    .then(publickey =>\n      pki.signStringHex(email, token).then(signature =>\n        POST(\"/proposals/startvote\", csrf, {\n          vote: {\n            token,\n            mask: 3,\n            duration: duration,\n            quorumpercentage,\n            passpercentage,\n            options: [\n              {\n                id: \"no\",\n                description: \"Don't approve proposal\",\n                bits: 1\n              },\n              {\n                id: \"yes\",\n                description: \"Approve proposal\",\n                bits: 2\n              }\n            ]\n          },\n          signature,\n          publickey\n        })\n      )\n    )\n    .then(getResponse);\n\nexport const proposalsVoteStatus = () =>\n  GET(\"/v1/proposals/votestatus\").then(getResponse);\nexport const proposalVoteStatus = token =>\n  GET(`/v1/proposals/${token}/votestatus`).then(getResponse);\nexport const proposalVoteResults = token =>\n  GET(`/v1/proposals/${token}/votes`).then(getResponse);\n\nexport const proposalAuthorizeOrRevokeVote = (\n  csrf,\n  action,\n  token,\n  email,\n  version\n) =>\n  pki\n    .myPubKeyHex(email)\n    .then(publickey =>\n      pki.signStringHex(email, token + version + action).then(signature =>\n        POST(\"/proposals/authorizevote\", csrf, {\n          action,\n          token,\n          signature,\n          publickey\n        })\n      )\n    )\n    .then(getResponse);\n\nexport const proposalPaywallPayment = () =>\n  GET(\"/v1/proposals/paywallpayment\").then(getResponse);\n\nexport const rescanUserPayments = (csrf, userid) =>\n  PUT(\"/user/payments/rescan\", csrf, { userid }).then(getResponse);\n\n// CMS\nexport const inviteNewUser = (csrf, email) =>\n  POST(\"/invite\", csrf, {\n    email\n  }).then(getResponse);\n\nexport const newInvoice = (csrf, invoice) =>\n  POST(\"/invoices/new\", csrf, invoice).then(\n    ({ response: { censorshiprecord } }) => ({\n      ...invoice,\n      censorshiprecord,\n      timestamp: Date.now() / 1000,\n      status: INVOICE_STATUS_UNREVIEWED\n    })\n  );\n\nexport const editInvoice = (csrf, invoice) =>\n  POST(\"/invoices/edit\", csrf, invoice).then(getResponse);\n\nexport const invoice = (token, version = null) =>\n  GET(`/v1/invoices/${token}` + (version ? `?version=${version}` : \"\")).then(\n    getResponse\n  );\n\nexport const userInvoices = () => GET(\"/v1/user/invoices\").then(getResponse);\n\nexport const adminInvoices = csrf =>\n  POST(\"/admin/invoices\", csrf, {}).then(getResponse);\n\nexport const generatePayouts = csrf =>\n  POST(\"/admin/generatepayouts\", csrf, {}).then(getResponse);\n\nexport const payApprovedInvoices = () =>\n  GET(\"/v1/admin/payinvoices\").then(getResponse);\n\nexport const tokenInventory = () =>\n  GET(\"/v1/proposals/tokeninventory\").then(getResponse);\n\nexport const exchangeRate = (csrf, month, year) =>\n  POST(\"/invoices/exchangerate\", csrf, { month, year }).then(getResponse);\n","import React from \"react\";\nimport Select from \"react-select\";\n\nconst customStyles = {\n  container: provided => ({\n    ...provided,\n    height: 20\n  }),\n  valueContainer: provided => ({\n    ...provided,\n    height: 20,\n    fontWeight: \"normal\",\n    display: \"flex\",\n    alignItems: \"center\"\n  }),\n  control: provided => ({\n    ...provided,\n    minHeight: 20,\n    height: 20\n  }),\n  option: provided => ({\n    ...provided,\n    padding: \"4px 8px\",\n    textAlign: \"left\",\n    fontWeight: \"normal\"\n  }),\n  dropdownIndicator: provided => ({\n    ...provided,\n    padding: 0\n  }),\n  input: provided => ({\n    ...provided,\n    padding: 0,\n    margin: 0\n  })\n};\n\nconst SelectEditor = ({ value, options, onCommit }) => {\n  const handleChange = ({ value }) => {\n    onCommit(value);\n  };\n  const getValueObj = value => options.find(op => op.value === value);\n  return (\n    <Select\n      classNamePrefix=\"t\"\n      styles={customStyles}\n      autoFocus\n      openOnFocus\n      closeOnSelect\n      options={options}\n      value={getValueObj(value)}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default SelectEditor;\n","import React from \"react\";\n\nclass MultiLineEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleOnKeyDownCapture = this.handleOnKeyDownCapture.bind(this);\n  }\n\n  componentDidMount() {\n    this.resizeText();\n  }\n\n  componentDidUpdate() {\n    this.resizeText();\n  }\n\n  handleInputChange(event) {\n    this.props.onChange(event.target.value);\n  }\n\n  // Prevents default onKeyDown if shift + enter are pressed\n  handleOnKeyDownCapture(event) {\n    if (event.keyCode === 13 && event.shiftKey) {\n      event.stopPropagation();\n    }\n  }\n\n  //Sets height and maxheight of textarea to scrollheight\n  resizeText() {\n    if (this.textAreaRef) {\n      this.textAreaRef.style.height = this.textAreaRef.scrollHeight + \"px\";\n      this.textAreaRef.style.maxHeight = this.textAreaRef.scrollHeight + \"px\";\n    }\n  }\n\n  render() {\n    const { value, onKeyDown } = this.props;\n    return (\n      <textarea\n        autoFocus\n        className=\"multiline-cell-editor\"\n        value={value}\n        onChange={this.handleInputChange}\n        onKeyDownCapture={this.handleOnKeyDownCapture}\n        onKeyDown={onKeyDown}\n        ref={textAreaRef => (this.textAreaRef = textAreaRef)}\n      />\n    );\n  }\n}\n\nexport default MultiLineEditor;\n","import React from \"react\";\nimport {\n  fromHoursToMinutes,\n  fromUSDCentsToUSDUnits,\n  fromMinutesToHours,\n  fromUSDUnitsToUSDCents\n} from \"../../helpers\";\nimport SelectEditor from \"./SelectEditor\";\nimport MultiLineEditor from \"./MultiLineEditor\";\n\nexport const columnTypes = {\n  TYPE_COL: 1,\n  DOMAIN_COL: 2,\n  SUBDOMAIN_COL: 3,\n  DESC_COL: 4,\n  PROP_TOKEN_COL: 5,\n  LABOR_COL: 6,\n  EXP_COL: 7,\n  SUBTOTAL_COL: 8\n};\n\nexport const { LABOR_COL, EXP_COL, SUBTOTAL_COL } = columnTypes;\n\nconst getDropdownOptionsByColumnType = colType => {\n  const domainOptions = [\n    \"Development\",\n    \"Marketing\",\n    \"Design\",\n    \"Research\",\n    \"Documentation\",\n    \"Community Management\"\n  ];\n  const mapColTypeToOptions = {\n    [columnTypes.TYPE_COL]: [\n      {\n        label: \"Labor\",\n        value: 1\n      },\n      {\n        label: \"Expense\",\n        value: 2\n      },\n      {\n        label: \"Misc\",\n        value: 3\n      }\n    ],\n    [columnTypes.DOMAIN_COL]: domainOptions.map(op => ({\n      value: op,\n      label: op\n    }))\n  };\n\n  return mapColTypeToOptions[colType];\n};\n\nexport const selectWrapper = options => props => (\n  <SelectEditor {...{ ...props, options }} />\n);\n\nexport const multiLineWrapper = props => <MultiLineEditor {...{ ...props }} />;\n\nexport const generateBlankLineItem = () => ({\n  type: 1,\n  domain: \"\",\n  subdomain: \"\",\n  description: \"\",\n  proposaltoken: \"\",\n  labor: \"\",\n  expenses: \"\",\n  subtotal: \"\"\n});\n\nexport const convertLineItemsToGrid = (lineItems, readOnly = true) => {\n  const grid = [createTableHeaders()];\n  const { grid: gridBody, expenseTotal, laborTotal, total } = lineItems.reduce(\n    (acc, line, idx) => {\n      const isLabelReadonly =\n        line.type === 2 ? true : line.type === 3 ? true : readOnly;\n      const isExpenseReadonly = line.type === 1 ? true : readOnly;\n      const newLine = [\n        { readOnly: true, value: idx + 1 },\n        {\n          readOnly,\n          value: line.type,\n          dataEditor: selectWrapper(\n            getDropdownOptionsByColumnType(columnTypes.TYPE_COL)\n          )\n        },\n        {\n          readOnly,\n          value: line.domain,\n          dataEditor: selectWrapper(\n            getDropdownOptionsByColumnType(columnTypes.DOMAIN_COL)\n          )\n        },\n        { readOnly, value: line.subdomain },\n        {\n          readOnly,\n          value: line.description,\n          dataEditor: multiLineWrapper,\n          className: \"multiline-cell-value\"\n        },\n        {\n          readOnly,\n          value: line.proposaltoken,\n          dataEditor: multiLineWrapper,\n          className: \"multiline-cell-value\"\n        },\n        { readOnly: isLabelReadonly, value: +fromMinutesToHours(line.labor) },\n        {\n          readOnly: isExpenseReadonly,\n          value: +fromUSDCentsToUSDUnits(line.expenses)\n        },\n        {\n          readOnly: true,\n          value: line.subtotal\n        }\n      ];\n      return {\n        grid: acc.grid.concat([newLine]),\n        expenseTotal: acc.expenseTotal + line.expenses,\n        laborTotal: acc.laborTotal + line.labor,\n        total: acc.total + line.subtotal\n      };\n    },\n    { grid: [], expenseTotal: 0, laborTotal: 0, total: 0 }\n  );\n  const totalsLine = [\n    { readOnly: true },\n    { readOnly: true },\n    { readOnly: true },\n    { readOnly: true },\n    { readOnly: true },\n    {\n      readOnly: true,\n      component: <span className=\"total-label\">Total</span>,\n      forceComponent: true\n    },\n    {\n      readOnly: true,\n      value: (\n        <span className=\"total-label\">{+fromMinutesToHours(laborTotal)}</span>\n      )\n    },\n    {\n      readOnly: true,\n      value: (\n        <span className=\"total-label\">\n          {+fromUSDCentsToUSDUnits(expenseTotal)}\n        </span>\n      )\n    },\n    {\n      readOnly: true,\n      value: <span className=\"total-label\">{total}</span>\n    }\n  ];\n  return grid.concat(gridBody).concat([totalsLine]);\n};\n\nexport const convertGridToLineItems = grid => {\n  const copyGrid = grid.map(row => [...row]);\n  return copyGrid.reduce((acc, rowValues, row) => {\n    // skip first and last rows\n    if (row === 0 || row === copyGrid.length - 1) return acc;\n\n    const lineItem = rowValues.reduce((acc, cell, col) => {\n      switch (col) {\n        case columnTypes.TYPE_COL:\n          return { ...acc, type: +cell.value };\n        case columnTypes.DOMAIN_COL:\n          return { ...acc, domain: cell.value };\n        case columnTypes.SUBDOMAIN_COL:\n          return { ...acc, subdomain: cell.value };\n        case columnTypes.DESC_COL:\n          return { ...acc, description: cell.value };\n        case columnTypes.PROP_TOKEN_COL:\n          return { ...acc, proposaltoken: cell.value };\n        case columnTypes.LABOR_COL:\n          return { ...acc, labor: fromHoursToMinutes(+cell.value) };\n        case columnTypes.EXP_COL:\n          return { ...acc, expenses: fromUSDUnitsToUSDCents(+cell.value) };\n        case columnTypes.SUBTOTAL_COL:\n          return { ...acc, subtotal: +cell.value };\n        default:\n          return acc;\n      }\n    }, {});\n\n    return acc.concat([lineItem]);\n  }, []);\n};\n\nexport const lineitemsWithSubtotal = (lineItems, rate) =>\n  lineItems.map(l => {\n    return l.type === 1\n      ? {\n          ...l,\n          subtotal: +fromMinutesToHours(l.labor) * +fromUSDCentsToUSDUnits(rate)\n        }\n      : {\n          ...l,\n          subtotal: +fromUSDCentsToUSDUnits(l.expenses)\n        };\n  });\n\nexport const createTableHeaders = () => [\n  { readOnly: true, value: \"\", width: 25 },\n  { value: \"Type\", width: 120, readOnly: true },\n  { value: \"Domain\", width: 175, readOnly: true },\n  { value: \"Subdomain\", width: 175, readOnly: true },\n  { value: \"Description\", readOnly: true },\n  { value: \"Proposal Token\", readOnly: true },\n  { value: \"Labor (hours)\", width: 60, readOnly: true },\n  { value: \"Expense (USD)\", width: 60, readOnly: true },\n  { value: \"Subtotal (USD)\", width: 60, readOnly: true }\n];\n\nexport const updateGridCell = (grid, row, col, values) => {\n  grid[row][col] = { ...grid[row][col], ...values };\n  return grid;\n};\n\nexport const processTypeColChange = (grid, { row, col, value }) => {\n  // if value is 1, the expense column must be 0, so we set it to readOnly\n  if (+value === 1) {\n    grid = updateGridCell(grid, row, EXP_COL, { value: 0, readOnly: true });\n  } else {\n    // if it is not 1, we make sure it is not readOnly\n    grid = updateGridCell(grid, row, EXP_COL, { readOnly: false });\n  }\n\n  // if value is 2, the labor column must be 0, so we set it to readOnly\n  if (+value === 2 || +value === 3) {\n    grid = updateGridCell(grid, row, LABOR_COL, { value: 0, readOnly: true });\n  } else {\n    // if it is not 2, we make sure it is not readOnly\n    grid = updateGridCell(grid, row, LABOR_COL, { readOnly: false });\n  }\n\n  return updateGridCell(grid, row, col, { value });\n};\n\nexport const processLaborColChange = (grid, { row, col, value }, userRate) => {\n  // updates subtotal upon labor value entry\n  grid = updateGridCell(grid, row, SUBTOTAL_COL, { value: value * userRate });\n  return updateGridCell(grid, row, col, { value });\n};\n\nexport const processExpenseColChange = (grid, { row, col, value }) => {\n  // updates subtotal upon expense value entry\n  grid = updateGridCell(grid, row, SUBTOTAL_COL, { value: value });\n  return updateGridCell(grid, row, col, { value });\n};\n\nexport const processSubtotalColChange = (grid, userRate) => {\n  // case where user rate changes and grid must recalculate subtotal\n  for (const g of grid) {\n    const row = g[0].value;\n    const type = g[1].value;\n    const value = g[6].value;\n\n    if (type === 1) {\n      grid = updateGridCell(grid, row, SUBTOTAL_COL, {\n        value: value * userRate\n      });\n    }\n  }\n  return grid;\n};\n\nexport const processCellsChange = (currentGrid, changes, userRate = 0) => {\n  return changes.reduce(\n    (acc, change) => {\n      switch (change.col) {\n        case columnTypes.TYPE_COL:\n          acc.grid = processTypeColChange(acc.grid, change);\n          return acc;\n        case columnTypes.LABOR_COL:\n          acc.grid = processLaborColChange(acc.grid, change, userRate);\n          return acc;\n        case columnTypes.EXP_COL:\n          acc.grid = processExpenseColChange(acc.grid, change);\n          return acc;\n        case columnTypes.SUBTOTAL_COL:\n          acc.grid = processSubtotalColChange(acc.grid, userRate);\n          return acc;\n        default:\n          acc.grid = updateGridCell(acc.grid, change.row, change.col, {\n            value: change.value\n          });\n          return acc;\n      }\n    },\n    { grid: currentGrid }\n  );\n};\n","/*\nThis lib is designed to handle persisting data for the text editors using session storage\n*/\nimport qs from \"query-string\";\nimport { getCurrentMonth, getCurrentYear } from \"../helpers\";\nimport { generateBlankLineItem } from \"../components/InvoiceDatasheet/helpers\";\n\nexport const NEW_PROPOSAL_PATH = \"/proposals/new\";\n\nexport const getProposalPath = location => {\n  const { pathname, search } = location;\n  const { draftid } = qs.parse(search);\n  const path = draftid ? `${pathname}-${draftid}` : pathname;\n  return path;\n};\n\nexport const PROPOSAL_FORM_NAME = \"name\";\nexport const PROPOSAL_FORM_DESC = \"description\";\n\nexport const getProposalBackupKey = (key, path) => `proposal-${key}::${path}`;\n\nconst updateProposalFormData = state => {\n  const proposalFormState = state.form[\"form/record\"];\n  const newProposalData = (proposalFormState && proposalFormState.values) || {};\n  const name = newProposalData[PROPOSAL_FORM_NAME];\n  const description = newProposalData[PROPOSAL_FORM_DESC];\n  if (!name && !description) {\n    return;\n  }\n\n  const path = getProposalPath(window.location);\n  sessionStorage.setItem(\n    getProposalBackupKey(PROPOSAL_FORM_NAME, path),\n    newProposalData[PROPOSAL_FORM_NAME]\n  );\n  sessionStorage.setItem(\n    getProposalBackupKey(PROPOSAL_FORM_DESC, path),\n    newProposalData[PROPOSAL_FORM_DESC]\n  );\n};\n\nexport const resetNewProposalData = () => {\n  sessionStorage.setItem(\n    getProposalBackupKey(PROPOSAL_FORM_NAME, NEW_PROPOSAL_PATH),\n    \"\"\n  );\n  sessionStorage.setItem(\n    getProposalBackupKey(PROPOSAL_FORM_DESC, NEW_PROPOSAL_PATH),\n    \"\"\n  );\n};\n\nexport const getNewProposalData = () => {\n  return {\n    name:\n      sessionStorage.getItem(\n        getProposalBackupKey(PROPOSAL_FORM_NAME, NEW_PROPOSAL_PATH)\n      ) || \"\",\n    description:\n      sessionStorage.getItem(\n        getProposalBackupKey(PROPOSAL_FORM_DESC, NEW_PROPOSAL_PATH)\n      ) || \"\"\n  };\n};\n\nexport const handleSaveTextEditorsContent = state => {\n  updateProposalFormData(state);\n};\n\n//CMS\nexport const NEW_INVOICE_PATH = \"/invoices/new\";\n\nexport const getInvoicePath = location => {\n  const { pathname, search } = location;\n  const { draftid } = qs.parse(search);\n  const path = draftid ? `${pathname}-${draftid}` : pathname;\n  return path;\n};\n\nexport const INVOICE_FORM_ADDRESS = \"address\";\nexport const INVOICE_FORM_CONTACT = \"contact\";\nexport const INVOICE_FORM_LINE_ITEMS = \"lineitems\";\nexport const INVOICE_FORM_LOCATION = \"location\";\nexport const INVOICE_FORM_MONTH = \"month\";\nexport const INVOICE_FORM_YEAR = \"year\";\nexport const INVOICE_FORM_NAME = \"name\";\nexport const INVOICE_FORM_RATE = \"rate\";\n\nexport const getInvoiceBackupKey = (key, path) => `invoice-${key}::${path}`;\n\nconst updateInvoiceFormData = state => {\n  const invoiceFormState = state.form[\"form/record\"];\n  const newInvoiceData = (invoiceFormState && invoiceFormState.values) || {};\n\n  const address = newInvoiceData[INVOICE_FORM_ADDRESS];\n  const contact = newInvoiceData[INVOICE_FORM_CONTACT];\n  const lineitems = newInvoiceData[INVOICE_FORM_LINE_ITEMS];\n  const location = newInvoiceData[INVOICE_FORM_LOCATION];\n  const month = newInvoiceData[INVOICE_FORM_MONTH];\n  const year = newInvoiceData[INVOICE_FORM_YEAR];\n  const name = newInvoiceData[INVOICE_FORM_NAME];\n  const rate = newInvoiceData[INVOICE_FORM_RATE];\n\n  if (\n    !address &&\n    !contact &&\n    !lineitems &&\n    !location &&\n    !month &&\n    !year &&\n    !name &&\n    !rate\n  ) {\n    return;\n  }\n\n  const path = getInvoicePath(window.location);\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_ADDRESS, path),\n    newInvoiceData[INVOICE_FORM_ADDRESS]\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_CONTACT, path),\n    newInvoiceData[INVOICE_FORM_CONTACT]\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_LINE_ITEMS, path),\n    JSON.stringify(newInvoiceData[INVOICE_FORM_LINE_ITEMS])\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_LOCATION, path),\n    newInvoiceData[INVOICE_FORM_LOCATION]\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_MONTH, path),\n    newInvoiceData[INVOICE_FORM_MONTH]\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_YEAR, path),\n    newInvoiceData[INVOICE_FORM_YEAR]\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_NAME, path),\n    newInvoiceData[INVOICE_FORM_NAME]\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_RATE, path),\n    newInvoiceData[INVOICE_FORM_RATE]\n  );\n};\n\nexport const resetNewInvoiceData = () => {\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_ADDRESS, NEW_INVOICE_PATH),\n    \"\"\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_CONTACT, NEW_INVOICE_PATH),\n    \"\"\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_LINE_ITEMS, NEW_INVOICE_PATH),\n    JSON.stringify([generateBlankLineItem()])\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_LOCATION, NEW_INVOICE_PATH),\n    \"\"\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_MONTH, NEW_INVOICE_PATH),\n    getCurrentMonth() - 1\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_YEAR, NEW_INVOICE_PATH),\n    getCurrentYear()\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_NAME, NEW_INVOICE_PATH),\n    \"\"\n  );\n  sessionStorage.setItem(\n    getInvoiceBackupKey(INVOICE_FORM_RATE, NEW_INVOICE_PATH),\n    \"\"\n  );\n};\n\nexport const getNewInvoiceData = () => {\n  return {\n    address:\n      sessionStorage.getItem(\n        getInvoiceBackupKey(INVOICE_FORM_ADDRESS, NEW_INVOICE_PATH)\n      ) || \"\",\n    contact:\n      sessionStorage.getItem(\n        getInvoiceBackupKey(INVOICE_FORM_CONTACT, NEW_INVOICE_PATH)\n      ) || \"\",\n    lineitems: JSON.parse(\n      sessionStorage.getItem(\n        getInvoiceBackupKey(INVOICE_FORM_LINE_ITEMS, NEW_INVOICE_PATH)\n      )\n    ) || [generateBlankLineItem()],\n    location:\n      sessionStorage.getItem(\n        getInvoiceBackupKey(INVOICE_FORM_LOCATION, NEW_INVOICE_PATH)\n      ) || \"\",\n    month:\n      sessionStorage.getItem(\n        getInvoiceBackupKey(INVOICE_FORM_MONTH, NEW_INVOICE_PATH)\n      ) || getCurrentMonth() - 1,\n    year:\n      sessionStorage.getItem(\n        getInvoiceBackupKey(INVOICE_FORM_YEAR, NEW_INVOICE_PATH)\n      ) || getCurrentYear(),\n    name:\n      sessionStorage.getItem(\n        getInvoiceBackupKey(INVOICE_FORM_NAME, NEW_INVOICE_PATH)\n      ) || \"\",\n    rate:\n      sessionStorage.getItem(\n        getInvoiceBackupKey(INVOICE_FORM_RATE, NEW_INVOICE_PATH)\n      ) || \"\"\n  };\n};\n\nexport const handleSaveCSVEditorsContent = state => {\n  updateInvoiceFormData(state);\n};\n","/*\n  This lib is designed to handle persisting state data into local storage\n*/\nimport isEqual from \"lodash/isEqual\";\nimport get from \"lodash/get\";\nimport set from \"lodash/set\";\nimport { loggedInAsUsername, loggedInAsEmail } from \"../selectors/api\";\n\n// Logged in state key refers to the chunck of the state which will be stored\n// in the local storage only while the user stills logged in\nexport const loggedInStateKey = \"state\";\n\n// Persistent state key refers to the chunck of state which will persist\n// in the local storage even if the user logs out\nexport const persistentStateKey = email => `state-${email}`;\n\nexport const stateKey = email =>\n  email ? persistentStateKey(email) : loggedInStateKey;\n\nexport const loadStateLocalStorage = email => {\n  try {\n    const serializedState = localStorage.getItem(stateKey(email));\n    if (!serializedState) return undefined;\n    else return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveStateLocalStorage = (state, email = \"\") => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(stateKey(email), serializedState);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const clearStateLocalStorage = email => {\n  const key = stateKey(email);\n  if (localStorage.getItem(key)) {\n    localStorage.setItem(key, \"\");\n  }\n};\n\nconst handleSaveApiMe = state => {\n  const email = loggedInAsEmail(state);\n  const proposalcredits = state.app.proposalCredits;\n  const username = loggedInAsUsername(state);\n  const stateFromLs = loadStateLocalStorage() || {};\n  const apiMeFromStorage = get(stateFromLs, [\"api\", \"me\"], undefined);\n  const apiMeResponseFromStorage = get(apiMeFromStorage, \"response\", undefined);\n  const apiMe = get(state, [\"api\", \"me\"], undefined);\n  const apiMeResponse = get(apiMe, \"response\", undefined);\n  const customResponse = {\n    ...apiMeResponse,\n    username,\n    email,\n    proposalcredits\n  };\n  if (apiMeResponse && !isEqual(apiMeResponseFromStorage, customResponse)) {\n    saveStateLocalStorage(\n      set(stateFromLs, [\"api\", \"me\", \"response\"], customResponse)\n    );\n  }\n};\n\nconst handleSaveAppDraftProposals = state => {\n  const email = loggedInAsEmail(state);\n  if (!email) {\n    return;\n  }\n  const stateFromLs = loadStateLocalStorage(email) || {};\n  const draftProposalsFromStore = state.app.draftProposals;\n  const draftProposalsLocalStorage = get(\n    stateFromLs,\n    [\"app\", \"draftProposals\"],\n    {}\n  );\n\n  if (\n    draftProposalsFromStore &&\n    !isEqual(draftProposalsFromStore, draftProposalsLocalStorage)\n  ) {\n    const newValue = set(\n      stateFromLs,\n      [\"app\", \"draftProposals\"],\n      draftProposalsFromStore\n    );\n    saveStateLocalStorage(newValue, email);\n  }\n};\n\nconst handleSaveAppDraftInvoices = state => {\n  const email = loggedInAsEmail(state);\n  if (!email) {\n    return;\n  }\n  const stateFromLs = loadStateLocalStorage(email) || {};\n  const draftInvoicesFromStore = state.app.draftInvoices;\n  const draftInvoicesLocalStorage = get(\n    stateFromLs,\n    [\"app\", \"draftInvoices\"],\n    {}\n  );\n\n  if (\n    draftInvoicesFromStore &&\n    !isEqual(draftInvoicesFromStore, draftInvoicesLocalStorage)\n  ) {\n    const newValue = set(\n      stateFromLs,\n      [\"app\", \"draftInvoices\"],\n      draftInvoicesFromStore\n    );\n    saveStateLocalStorage(newValue, email);\n  }\n};\n\nexport const handleSaveStateToLocalStorage = state => {\n  handleSaveApiMe(state);\n  handleSaveAppDraftProposals(state);\n  handleSaveAppDraftInvoices(state);\n};\n","import get from \"lodash/fp/get\";\nimport compose from \"lodash/fp/compose\";\nimport eq from \"lodash/fp/eq\";\nimport filter from \"lodash/fp/filter\";\nimport find from \"lodash/fp/find\";\nimport orderBy from \"lodash/fp/orderBy\";\nimport { or, constant, not } from \"../lib/fp\";\nimport qs from \"query-string\";\nimport {\n  apiProposal,\n  apiInvoice,\n  apiProposalComments,\n  apiInvoiceComments,\n  userAlreadyPaid,\n  getKeyMismatch,\n  apiPropsVoteStatusResponse,\n  apiUnvettedProposals,\n  apiVettedProposals,\n  apiUserInvoices,\n  getPropVoteStatus,\n  apiUnvettedStatusResponse,\n  userid,\n  apiUserResponse,\n  apiEditUserResponse,\n  apiEditUserPayload,\n  isCMS,\n  apiAdminInvoices\n} from \"./api\";\nimport {\n  PAYWALL_STATUS_PAID,\n  PAYWALL_STATUS_WAITING,\n  PROPOSAL_FILTER_ALL,\n  PROPOSAL_STATUS_UNREVIEWED,\n  PROPOSAL_STATUS_UNREVIEWED_CHANGES,\n  PROPOSAL_STATUS_CENSORED,\n  PROPOSAL_VOTING_NOT_AUTHORIZED,\n  PROPOSAL_VOTING_AUTHORIZED,\n  PROPOSAL_VOTING_ACTIVE,\n  PROPOSAL_VOTING_FINISHED,\n  PROPOSAL_USER_FILTER_SUBMITTED,\n  PROPOSAL_USER_FILTER_DRAFT_PROPOSALS,\n  PROPOSAL_APPROVED,\n  PROPOSAL_REJECTED,\n  INVOICE_STATUS_NEW,\n  INVOICE_STATUS_UPDATED,\n  INVOICE_STATUS_REJECTED,\n  INVOICE_STATUS_APPROVED,\n  INVOICE_STATUS_PAID,\n  NOTIFICATION_EMAIL_MY_PROPOSAL_STATUS_CHANGE,\n  NOTIFICATION_EMAIL_MY_PROPOSAL_VOTE_STARTED,\n  NOTIFICATION_EMAIL_ADMIN_PROPOSAL_NEW,\n  NOTIFICATION_EMAIL_ADMIN_PROPOSAL_VOTE_AUTHORIZED,\n  NOTIFICATION_EMAIL_REGULAR_PROPOSAL_VETTED,\n  NOTIFICATION_EMAIL_REGULAR_PROPOSAL_EDITED,\n  NOTIFICATION_EMAIL_REGULAR_PROPOSAL_VOTE_STARTED,\n  NOTIFICATION_EMAIL_COMMENT_ON_MY_PROPOSAL,\n  NOTIFICATION_EMAIL_COMMENT_ON_MY_COMMENT,\n  PROPOSAL_STATUS_ABANDONED,\n  CMS_PAYWALL_STATUS,\n  INVOICE_FILTER_ALL,\n  INVOICE_STATUS_DISPUTED,\n  FILTER_ALL_MONTHS,\n  PROPOSAL_USER_FILTER_DRAFT_INVOICES\n} from \"../constants\";\nimport {\n  getTextFromIndexMd,\n  countPublicProposals,\n  isProposalApproved,\n  getCurrentYear\n} from \"../helpers\";\n\nexport const replyTo = or(get([\"app\", \"replyParent\"]), constant(0));\n\nexport const proposal = state => {\n  const proposal = apiProposal(state) || {};\n\n  return proposal;\n};\n\nexport const invoice = state => {\n  const invoice = apiInvoice(state) || {};\n\n  return invoice;\n};\n\nexport const proposalCredits = state => state.app.proposalCredits;\n\nexport const getLastSubmittedProposal = state =>\n  state.app.submittedProposals.lastSubmitted;\nexport const newProposalInitialValues = state =>\n  state.app.draftProposals.initialValues || {};\nexport const draftProposals = state =>\n  state && state.app && state.app.draftProposals;\nexport const draftProposalById = state => {\n  const drafts = draftProposals(state);\n  const { draftid } = qs.parse(window.location.search);\n  return (draftid && drafts && drafts[draftid]) || false;\n};\nexport const draftInvoices = state => {\n  return state && state.app && state.app.draftInvoices;\n};\nexport const draftInvoiceById = state => {\n  const drafts = draftInvoices(state);\n  const { draftid } = qs.parse(window.location.search);\n  return (draftid && drafts && drafts[draftid]) || false;\n};\nexport const getUserAlreadyPaid = state => state.app.userAlreadyPaid;\nexport const getAdminFilterValue = state =>\n  parseInt(state.app.adminProposalsShow, 10);\nexport const getPublicFilterValue = state =>\n  parseInt(state.app.publicProposalsShow, 10);\nexport const getUserFilterValue = state =>\n  parseInt(state.app.userProposalsShow, 10);\nexport const getMonthFilterValue = state =>\n  state.app.invoiceSortOption &&\n  parseInt(state.app.invoiceSortOption.month, 10);\nexport const getYearFilterValue = state =>\n  state.app.invoiceSortOption && parseInt(state.app.invoiceSortOption.year, 10);\nexport const isMarkdown = compose(\n  eq(\"index.md\"),\n  get(\"name\")\n);\nexport const isJSON = compose(\n  eq(\"invoice.json\"),\n  get(\"name\")\n);\nexport const getProposalFiles = compose(\n  get(\"files\"),\n  proposal\n);\nexport const getInvoiceFiles = compose(\n  get(\"file\"),\n  invoice\n);\nexport const getMarkdownFile = compose(\n  find(isMarkdown),\n  getProposalFiles\n);\nexport const getNotMarkdownFile = compose(\n  filter(not(isMarkdown)),\n  getProposalFiles\n);\nexport const getInvoiceJSON = compose(\n  find(isJSON),\n  getInvoiceFiles\n);\nexport const getNotJSONFile = compose(\n  filter(not(isJSON)),\n  getInvoiceFiles\n);\n\nexport const getEditProposalValues = state => {\n  const { name } = proposal(state);\n\n  const files = name ? getNotMarkdownFile(state) : [];\n  const description = name ? getTextFromIndexMd(getMarkdownFile(state)) : \"\";\n  return {\n    name,\n    description,\n    files\n  };\n};\n\nexport const getEditUserValues = state => {\n  let emailNotifications;\n\n  if (apiEditUserResponse(state)) {\n    const editUserPayload = apiEditUserPayload(state);\n    emailNotifications = editUserPayload.emailnotifications;\n  } else {\n    const userResponse = apiUserResponse(state) || { user: {} };\n    emailNotifications = userResponse.user.emailnotifications || 0;\n  }\n\n  return {\n    \"myproposalnotifications-statuschange\": !!(\n      emailNotifications & NOTIFICATION_EMAIL_MY_PROPOSAL_STATUS_CHANGE\n    ),\n    \"myproposalnotifications-votestarted\": !!(\n      emailNotifications & NOTIFICATION_EMAIL_MY_PROPOSAL_VOTE_STARTED\n    ),\n    \"regularproposalnotifications-vetted\": !!(\n      emailNotifications & NOTIFICATION_EMAIL_REGULAR_PROPOSAL_VETTED\n    ),\n    \"regularproposalnotifications-edited\": !!(\n      emailNotifications & NOTIFICATION_EMAIL_REGULAR_PROPOSAL_EDITED\n    ),\n    \"regularproposalnotifications-votestarted\": !!(\n      emailNotifications & NOTIFICATION_EMAIL_REGULAR_PROPOSAL_VOTE_STARTED\n    ),\n    \"adminproposalnotifications-new\": !!(\n      emailNotifications & NOTIFICATION_EMAIL_ADMIN_PROPOSAL_NEW\n    ),\n    \"adminproposalnotifications-voteauthorized\": !!(\n      emailNotifications & NOTIFICATION_EMAIL_ADMIN_PROPOSAL_VOTE_AUTHORIZED\n    ),\n    \"commentnotifications-proposal\": !!(\n      emailNotifications & NOTIFICATION_EMAIL_COMMENT_ON_MY_PROPOSAL\n    ),\n    \"commentnotifications-comment\": !!(\n      emailNotifications & NOTIFICATION_EMAIL_COMMENT_ON_MY_COMMENT\n    )\n  };\n};\n\nexport const resolveEditUserValues = prefs => {\n  return {\n    emailnotifications:\n      (prefs[\"myproposalnotifications-statuschange\"]\n        ? NOTIFICATION_EMAIL_MY_PROPOSAL_STATUS_CHANGE\n        : 0) |\n      (prefs[\"myproposalnotifications-votestarted\"]\n        ? NOTIFICATION_EMAIL_MY_PROPOSAL_VOTE_STARTED\n        : 0) |\n      (prefs[\"regularproposalnotifications-vetted\"]\n        ? NOTIFICATION_EMAIL_REGULAR_PROPOSAL_VETTED\n        : 0) |\n      (prefs[\"regularproposalnotifications-edited\"]\n        ? NOTIFICATION_EMAIL_REGULAR_PROPOSAL_EDITED\n        : 0) |\n      (prefs[\"regularproposalnotifications-votestarted\"]\n        ? NOTIFICATION_EMAIL_REGULAR_PROPOSAL_VOTE_STARTED\n        : 0) |\n      (prefs[\"adminproposalnotifications-new\"]\n        ? NOTIFICATION_EMAIL_ADMIN_PROPOSAL_NEW\n        : 0) |\n      (prefs[\"adminproposalnotifications-voteauthorized\"]\n        ? NOTIFICATION_EMAIL_ADMIN_PROPOSAL_VOTE_AUTHORIZED\n        : 0) |\n      (prefs[\"commentnotifications-proposal\"]\n        ? NOTIFICATION_EMAIL_COMMENT_ON_MY_PROPOSAL\n        : 0) |\n      (prefs[\"commentnotifications-comment\"]\n        ? NOTIFICATION_EMAIL_COMMENT_ON_MY_COMMENT\n        : 0)\n  };\n};\n\nexport const getUserPaywallStatus = state => {\n  if (isCMS(state)) return CMS_PAYWALL_STATUS;\n  if (userAlreadyPaid(state)) {\n    return PAYWALL_STATUS_PAID;\n  }\n\n  return state.app.userPaywallStatus || PAYWALL_STATUS_WAITING;\n};\nexport const getUserPaywallConfirmations = state => {\n  if (userAlreadyPaid(state)) {\n    return null;\n  }\n  return state.app.userPaywallConfirmations;\n};\n\nexport const getUserPaywallTxid = state => {\n  if (userAlreadyPaid(state)) {\n    return null;\n  }\n  return state.app.userPaywallTxid;\n};\n\nexport const userHasPaid = state => {\n  return getUserPaywallStatus(state) === PAYWALL_STATUS_PAID;\n};\nexport const userCanExecuteActions = state => {\n  return userHasPaid(state) && !getKeyMismatch(state);\n};\n\nexport const isProposalStatusApproved = state =>\n  state.app.isProposalStatusApproved;\nexport const activeVotesEndHeight = state => state.app.activeVotesEndHeight;\n\nexport const proposalComments = state => apiProposalComments(state);\n\nexport const invoiceComments = state => apiInvoiceComments(state);\n\nexport const getTempThreadTree = state => state.app.replyThreadTree;\n\nexport const unvettedProposals = state => {\n  const unvettedProposals = apiUnvettedProposals(state);\n  return unvettedProposals;\n};\n\nexport const vettedProposals = state => {\n  const vettedProposals = apiVettedProposals(state);\n  return vettedProposals;\n};\n\nexport const getUnvettedFilteredProposals = state => {\n  const filterValue = getAdminFilterValue(state);\n  const proposals = unvettedProposals(state);\n\n  if (!filterValue) {\n    return proposals;\n  }\n\n  return proposals\n    .filter(proposal => {\n      // alow propos with status of unreviewed changes be filtered along with general unreviewed props\n      if (\n        proposal.status === PROPOSAL_STATUS_UNREVIEWED_CHANGES &&\n        filterValue === PROPOSAL_STATUS_UNREVIEWED\n      ) {\n        return true;\n      }\n      return filterValue === proposal.status;\n    })\n    .sort((a, b) => b.timestamp - a.timestamp);\n};\n\nexport const getVettedFilteredProposals = state => {\n  const vettedProps = vettedProposals(state);\n  const filterValue = getPublicFilterValue(state);\n  if (!filterValue) return vettedProps;\n  return vettedProps\n    .filter(prop => {\n      const propVoteStatus = getPropVoteStatus(state)(\n        prop.censorshiprecord.token\n      ).status;\n      const propVote = getPropVoteStatus(state)(prop.censorshiprecord.token);\n\n      // the filter value used for all proposals on pre-voting is PROPOSAL_VOTING_NOT_AUTHORIZED however proposals with authorized voting should also be included\n      const filterForPreVoting = filterValue === PROPOSAL_VOTING_NOT_AUTHORIZED;\n      const propIsVotingAuthorized =\n        propVoteStatus === PROPOSAL_VOTING_AUTHORIZED;\n      if (filterForPreVoting && propIsVotingAuthorized) {\n        return true;\n      }\n\n      // proposals approved and rejected should be handled\n      const filterForApproved = filterValue === PROPOSAL_APPROVED;\n      const propIsApproved =\n        propVoteStatus === PROPOSAL_VOTING_FINISHED &&\n        isProposalApproved(propVote);\n      if (filterForApproved && propIsApproved) {\n        return true;\n      }\n\n      const filterForRejected = filterValue === PROPOSAL_REJECTED;\n      const propIsRejected =\n        propVoteStatus === PROPOSAL_VOTING_FINISHED &&\n        !isProposalApproved(propVote);\n      if (filterForRejected && propIsRejected) {\n        return true;\n      }\n\n      // the proposals under the abandoned tab are classified by their regular status and NOT by their voting status, so is necessary a special conditional to handle this corner case\n      const filterForAbandoned = filterValue === PROPOSAL_STATUS_ABANDONED;\n      const propIsAbandoned = prop.status === PROPOSAL_STATUS_ABANDONED;\n      if (filterForAbandoned && propIsAbandoned) {\n        return true;\n      }\n\n      return (\n        filterValue ===\n        getPropVoteStatus(state)(prop.censorshiprecord.token).status\n      );\n    })\n    .sort((a, b) => b.timestamp - a.timestamp);\n};\n\nexport const getDraftProposals = state => {\n  const draftsObj = draftProposals(state) || {};\n  const drafts = Object.keys(draftsObj)\n    .filter(\n      key => [\"newDraft\", \"lastSubmitted\", \"originalName\"].indexOf(key) === -1\n    )\n    .map(key => draftsObj[key]);\n  return drafts;\n};\n\nexport const getSubmittedUserProposals = state => userID => {\n  const isUserProp = prop => prop.userid === userID;\n  const vettedProps = vettedProposals(state).filter(isUserProp);\n  const unvettedProps = unvettedProposals(state).filter(isUserProp);\n\n  const sortByNewestFirst = orderBy([\"timestamp\"], [\"desc\"]);\n\n  return sortByNewestFirst(vettedProps.concat(unvettedProps));\n};\n\nexport const getUserProposalsWithVoteStatus = (state, { userID }) => {\n  const userProposals = getSubmittedUserProposals(state)(userID);\n  return userProposals.map(prop => ({\n    ...prop,\n    voteStatus: getPropVoteStatus(state)(prop.censorshiprecord.token)\n  }));\n};\n\nexport const getUserProposals = state => {\n  const userFilterValue = getUserFilterValue(state);\n  const userID = userid(state);\n\n  if (userFilterValue === PROPOSAL_USER_FILTER_SUBMITTED) {\n    return getSubmittedUserProposals(state)(userID);\n  } else if (userFilterValue === PROPOSAL_USER_FILTER_DRAFT_PROPOSALS) {\n    return getDraftProposals(state);\n  }\n\n  return [];\n};\n\n// TODO: call getUserInvoicesCountByStatus\nexport const getUserInvoicesFilterCounts = state => {\n  let invoices = apiUserInvoices(state);\n  const { month, year } = state.app.invoiceSortOption;\n  if (month !== FILTER_ALL_MONTHS) {\n    invoices = getInvoicesByMonth(getInvoicesByYear(invoices, year), month);\n  }\n  const draftFilterCounts = {\n    [PROPOSAL_USER_FILTER_DRAFT_INVOICES]: getDraftInvoices(state).length\n  };\n  const userInvoiceCounts = Object.assign(\n    {},\n    getInvoicesCountByStatus(invoices),\n    draftFilterCounts\n  );\n  return userInvoiceCounts;\n};\n\nexport const getAdminInvoicesCountByStatus = state => {\n  let invoices = apiAdminInvoices(state);\n  const { month, year } = state.app.invoiceSortOption;\n  if (month !== FILTER_ALL_MONTHS) {\n    invoices = getInvoicesByMonth(getInvoicesByYear(invoices, year), month);\n  }\n  return getInvoicesCountByStatus(invoices);\n};\n\nexport const getInvoicesCountByStatus = invoices => {\n  return invoices\n    ? {\n        [INVOICE_STATUS_NEW]: getInvoicesByStatus(invoices, INVOICE_STATUS_NEW)\n          .length,\n        [INVOICE_STATUS_UPDATED]: getInvoicesByStatus(\n          invoices,\n          INVOICE_STATUS_UPDATED\n        ).length,\n        [INVOICE_STATUS_REJECTED]: getInvoicesByStatus(\n          invoices,\n          INVOICE_STATUS_REJECTED\n        ).length,\n        [INVOICE_STATUS_APPROVED]: getInvoicesByStatus(\n          invoices,\n          INVOICE_STATUS_APPROVED\n        ).length,\n        [INVOICE_STATUS_DISPUTED]: getInvoicesByStatus(\n          invoices,\n          INVOICE_STATUS_DISPUTED\n        ).length,\n        [INVOICE_STATUS_PAID]: getInvoicesByStatus(\n          invoices,\n          INVOICE_STATUS_PAID\n        ).length,\n        [INVOICE_FILTER_ALL]: invoices.length\n      }\n    : 0;\n};\n\nconst getInvoicesByStatus = (invoices, status) =>\n  status === INVOICE_FILTER_ALL\n    ? invoices\n    : invoices.filter(i => i.status === status);\n\nconst getInvoicesByYear = (invoices, year) =>\n  year === getCurrentYear()\n    ? invoices\n    : invoices.filter(i => i.input.year === year);\n\nconst getInvoicesByMonth = (invoices = [], month) =>\n  month === FILTER_ALL_MONTHS\n    ? invoices\n    : invoices.filter(i => i.input.month === month);\n\nexport const getAdminInvoices = state => {\n  const invoices = apiAdminInvoices(state);\n  const adminFilterValue = getAdminFilterValue(state);\n  const monthFilter = getMonthFilterValue(state);\n  const yearFilter = getYearFilterValue(state);\n\n  if (!invoices) return [];\n\n  const invoicesByStatus = getInvoicesByStatus(invoices, adminFilterValue);\n  const invoicesByYear = getInvoicesByYear(invoicesByStatus, yearFilter);\n  const invoicesByMonth = getInvoicesByMonth(invoicesByYear, monthFilter);\n\n  return invoicesByStatus && invoicesByYear && invoicesByMonth;\n};\n\nexport const getUserInvoices = state => {\n  const invoices = apiUserInvoices(state);\n  const userFilterValue = getUserFilterValue(state);\n  const monthFilter = getMonthFilterValue(state);\n  const yearFilter = getYearFilterValue(state);\n\n  if (!invoices) return [];\n\n  const invoicesByStatus = getInvoicesByStatus(invoices, userFilterValue);\n  const invoicesByYear = getInvoicesByYear(invoicesByStatus, yearFilter);\n  const invoicesByMonth = getInvoicesByMonth(invoicesByYear, monthFilter);\n\n  if (userFilterValue === PROPOSAL_USER_FILTER_DRAFT_INVOICES) {\n    return getDraftInvoices(state);\n  } else {\n    return invoicesByStatus && invoicesByYear && invoicesByMonth;\n  }\n};\n\nexport const getDraftInvoices = state => {\n  const draftsObj = draftInvoices(state) || {};\n  const drafts = Object.keys(draftsObj)\n    .filter(\n      key => [\"newDraft\", \"lastSubmitted\", \"originalName\"].indexOf(key) === -1\n    )\n    .map(key => draftsObj[key]);\n\n  const sortByNewestFirst = orderBy([\"timestamp\"], [\"desc\"]);\n\n  return sortByNewestFirst(drafts);\n};\n\nexport const getUserProposalFilterCounts = state => {\n  const userId = userid(state);\n  const proposalFilterCounts = {\n    [PROPOSAL_USER_FILTER_SUBMITTED]: getSubmittedUserProposals(state)(userId)\n      .length,\n    [PROPOSAL_USER_FILTER_DRAFT_PROPOSALS]: getDraftProposals(state).length\n  };\n\n  proposalFilterCounts[PROPOSAL_FILTER_ALL] = Object.keys(\n    proposalFilterCounts\n  ).reduce((total, filterValue) => total + proposalFilterCounts[filterValue]);\n\n  return proposalFilterCounts;\n};\n\nexport const getUnvettedProposalFilterCounts = state => {\n  const usResponse = apiUnvettedStatusResponse(state);\n  return usResponse\n    ? {\n        [PROPOSAL_STATUS_UNREVIEWED]:\n          usResponse.numofunvetted + usResponse.numofunvettedchanges,\n        [PROPOSAL_STATUS_CENSORED]: usResponse.numofcensored,\n        [PROPOSAL_FILTER_ALL]:\n          usResponse.numofunvetted +\n          usResponse.numofunvettedchanges +\n          usResponse.numofcensored\n      }\n    : {};\n};\n\nconst countAbandonedProposals = (proposals = []) =>\n  proposals.filter(p => p.status === PROPOSAL_STATUS_ABANDONED).length;\n\nconst countApprovedProps = (votesstatus = []) =>\n  votesstatus.filter(vs => {\n    if (vs.status === PROPOSAL_VOTING_FINISHED) {\n      return isProposalApproved(vs);\n    }\n    return false;\n  }).length;\n\nconst countRejectedProps = (votesstatus = []) =>\n  votesstatus.filter(vs => {\n    if (vs.status === PROPOSAL_VOTING_FINISHED) {\n      return !isProposalApproved(vs);\n    }\n    return false;\n  }).length;\n\nexport const getVettedProposalFilterCounts = state => {\n  if (isCMS(state))\n    return {\n      [PROPOSAL_STATUS_ABANDONED]: 0,\n      [PROPOSAL_APPROVED]: 0,\n      [PROPOSAL_REJECTED]: 0\n    };\n  const vsResponse = apiPropsVoteStatusResponse(state);\n  const vettedProps = apiVettedProposals(state);\n  const count = vsResponse ? countPublicProposals(vsResponse.votesstatus) : {};\n\n  // abandoned proposals has to be counted separately because it's counting  is not based on its voting status\n  const countOfAbandonedProps = countAbandonedProposals(vettedProps);\n\n  // add the amount of abandoned props to the total num of proposals\n  count[PROPOSAL_FILTER_ALL] += countOfAbandonedProps;\n\n  // approved and rejected proposals\n  const countOfApprovedProps = vsResponse\n    ? countApprovedProps(vsResponse.votesstatus)\n    : 0;\n  const countOfRejectedProps = vsResponse\n    ? countRejectedProps(vsResponse.votesstatus)\n    : 0;\n  return {\n    ...count,\n    [PROPOSAL_STATUS_ABANDONED]: countOfAbandonedProps,\n    [PROPOSAL_APPROVED]: countOfApprovedProps,\n    [PROPOSAL_REJECTED]: countOfRejectedProps\n  };\n};\n\nexport const getUnvettedEmptyProposalsMessage = state => {\n  switch (getAdminFilterValue(state)) {\n    case PROPOSAL_STATUS_UNREVIEWED:\n      return \"There are no proposals to review\";\n    case PROPOSAL_STATUS_CENSORED:\n      return \"There are no censored proposals, yay!\";\n    default:\n      return \"There are no unvetted proposals\";\n  }\n};\n\nexport const getVettedEmptyProposalsMessage = state => {\n  switch (getPublicFilterValue(state)) {\n    case PROPOSAL_VOTING_ACTIVE:\n      return \"There are no proposals being actively voted on\";\n    case PROPOSAL_VOTING_NOT_AUTHORIZED:\n      return \"There are no pre-voting proposals\";\n    case PROPOSAL_REJECTED:\n      return \"There are no rejected proposals\";\n    case PROPOSAL_APPROVED:\n      return \"There are no approved proposals\";\n    case PROPOSAL_STATUS_ABANDONED:\n      return \"There are no abandoned proposals\";\n    default:\n      return \"There are no proposals\";\n  }\n};\n\nexport const votesEndHeight = state => state.app.votesEndHeight || {};\n\nexport const getCsrfIsNeeded = state =>\n  state.app ? state.app.csrfIsNeeded : null;\n\nexport const isShowingSignupConfirmation = state =>\n  state.app.isShowingSignupConfirmation;\n\nexport const shouldAutoVerifyKey = state => state.app.shouldVerifyKey;\n\nexport const identityImportError = state =>\n  state.app.identityImportResult && state.app.identityImportResult.errorMsg;\n\nexport const identityImportSuccess = state =>\n  state.app.identityImportResult && state.app.identityImportResult.successMsg;\n\nexport const onboardViewed = state => state.app.onboardViewed;\n\nexport const commentsSortOption = state => state.app.commentsSortOption;\n\nexport const pollingCreditsPayment = state => state.app.pollingCreditsPayment;\n\nexport const proposalPaymentReceived = state =>\n  state.app.proposalPaymentReceived;\n\nexport const redirectedFrom = state => state.app.redirectedFrom;\n","import get from \"lodash/fp/get\";\n\nexport const getopenedModals = state => get([\"modal\", \"openedModals\"], state);\n","import get from \"lodash/fp/get\";\nimport compose from \"lodash/fp/compose\";\nimport { bool, or } from \"../lib/fp\";\n\nexport const getIsExtApiRequesting = key =>\n  bool(get([\"external_api\", key, \"isRequesting\"]));\nexport const getExtApiResponse = key => get([\"external_api\", key, \"response\"]);\nexport const getExtApiError = key => get([\"external_api\", key, \"error\"]);\n\nexport const isApiRequestingPayWithFaucet = or(\n  getIsExtApiRequesting(\"payWithFaucet\"),\n  getIsExtApiRequesting(\"blockHeight\")\n);\n\nexport const payWithFaucetError = getExtApiError(\"payWithFaucet\");\n\nexport const payWithFaucetTxId = compose(\n  get(\"txid\"),\n  getExtApiResponse(\"payWithFaucet\")\n);\n\nexport const lastBlockHeight = getExtApiResponse(\"blockHeight\");\nexport const isApiRequestingLastBlockHeight = getIsExtApiRequesting(\n  \"blockHeight\"\n);\nexport const lasBlockHeightError = getExtApiError(\"blockHeight\");\n","import { formValueSelector } from \"redux-form\";\n\nconst recordFormSelector = formValueSelector(\"form/record\");\n\nexport const invoiceFormMonth = state => recordFormSelector(state, \"month\");\nexport const invoiceFormYear = state => recordFormSelector(state, \"year\");\n","export * from \"./app\";\nexport * from \"./api\";\nexport * from \"./modal\";\nexport * from \"./external_api\";\nexport * from \"./form\";\n\nexport const selectorMap = fns => (...args) =>\n  Object.keys(fns).reduce(\n    (res, key) => ({ ...res, [key]: fns[key](...args) }),\n    {}\n  );\n","export * from \"./app\";\nexport * from \"./api\";\nexport * from \"./modal\";\nexport * from \"./external_api\";\n","import get from \"lodash/fp/get\";\nimport eq from \"lodash/fp/eq\";\nimport filter from \"lodash/fp/filter\";\nimport compose from \"lodash/fp/compose\";\nimport { and, or, bool, constant, not } from \"../lib/fp\";\nimport {\n  PROPOSAL_STATUS_UNREVIEWED,\n  PROPOSAL_STATUS_CENSORED,\n  PROPOSAL_STATUS_ABANDONED,\n  CMSWWWMODE\n} from \"../constants\";\n\nexport const getIsApiRequesting = key =>\n  bool(get([\"api\", key, \"isRequesting\"]));\nexport const getApiPayload = key => get([\"api\", key, \"payload\"]);\nexport const getApiResponse = key => get([\"api\", key, \"response\"]);\nexport const getApiError = key => get([\"api\", key, \"error\"]);\n\nexport const isApiRequestingInit = getIsApiRequesting(\"init\");\nexport const isApiRequestingUnvettedStatus = getIsApiRequesting(\n  \"unvettedStatus\"\n);\nexport const isApiRequestingMe = getIsApiRequesting(\"me\");\nexport const isApiRequestingPolicy = getIsApiRequesting(\"policy\");\nexport const isApiRequestingNewUser = getIsApiRequesting(\"newUser\");\nexport const isApiRequestingChangePassword = getIsApiRequesting(\n  \"changePassword\"\n);\nexport const isApiRequestingChangeUsername = getIsApiRequesting(\n  \"changeUsername\"\n);\nexport const isApiRequestingVerifyNewUser = getIsApiRequesting(\"verifyNewUser\");\nexport const isApiRequestingLogin = getIsApiRequesting(\"login\");\nexport const isApiRequestingLogout = getIsApiRequesting(\"logout\");\nexport const isApiRequestingForgottenPassword = getIsApiRequesting(\n  \"forgottenPassword\"\n);\nexport const isApiRequestingResendVerificationEmail = getIsApiRequesting(\n  \"resendVerificationEmail\"\n);\nexport const isApiRequestingPasswordReset = getIsApiRequesting(\"passwordReset\");\nconst isApiRequestingVetted = getIsApiRequesting(\"vetted\");\nconst isApiRequestingUnvetted = getIsApiRequesting(\"unvetted\");\nconst isApiRequestingUserProposals = getIsApiRequesting(\"userProposals\");\nconst isApiRequestingProposal = getIsApiRequesting(\"proposal\");\nconst isApiRequestingNewProposal = getIsApiRequesting(\"newProposal\");\nconst isApiRequestingNewInvoice = getIsApiRequesting(\"newInvoice\");\nconst isApiRequestingInvoice = getIsApiRequesting(\"invoice\");\nexport const isApiRequestingUserSearch = getIsApiRequesting(\"userSearch\");\nexport const isApiRequestingUser = getIsApiRequesting(\"user\");\nexport const isApiRequestingNewComment = getIsApiRequesting(\"newComment\");\nexport const isApiRequestingSetStatusProposal = getIsApiRequesting(\n  \"setStatusProposal\"\n);\nexport const isApiRequestingPropsVoteStatus = getIsApiRequesting(\n  \"proposalsVoteStatus\"\n);\nexport const isApiRequestingPropVoteStatus = getIsApiRequesting(\n  \"proposalVoteStatus\"\n);\nexport const isApiRequestingPropVoteResults = getIsApiRequesting(\n  \"proposalVoteResults\"\n);\nexport const isApiRequestingEditUser = getIsApiRequesting(\"editUser\");\nexport const isApiRequestingManageUser = getIsApiRequesting(\"manageUser\");\nexport const isApiRequestingEditProposal = getIsApiRequesting(\"editProposal\");\nexport const isApiRequestingEditInvoice = getIsApiRequesting(\"editInvoice\");\n\nconst apiNewUserPayload = getApiPayload(\"newUser\");\nconst apiLoginPayload = getApiPayload(\"login\");\nconst apiForgottenPasswordPayload = getApiPayload(\"forgottenPassword\");\nconst apiResendVerificationEmailPayload = getApiPayload(\n  \"resendVerificationEmail\"\n);\nconst apiNewProposalPayload = getApiPayload(\"newProposal\");\nconst apiNewInvoicePayload = getApiPayload(\"newInvoice\");\nconst apiSetStatusProposalPayload = getApiPayload(\"setStatusProposal\");\nconst apiManageUserPayload = getApiPayload(\"manageUser\");\n\nexport const apiMeResponse = getApiResponse(\"me\");\nexport const apiUnvettedStatusResponse = getApiResponse(\"unvettedStatus\");\nexport const apiInitResponse = getApiResponse(\"init\");\nconst apiPolicyResponse = getApiResponse(\"policy\");\nexport const apiNewUserResponse = getApiResponse(\"newUser\");\nexport const apiUserResponse = getApiResponse(\"user\");\nexport const apiChangePasswordResponse = getApiResponse(\"changePassword\");\nexport const apiChangeUsernameResponse = getApiResponse(\"changeUsername\");\nexport const apiLoginResponse = getApiResponse(\"login\");\nexport const forgottenPasswordResponse = getApiResponse(\"forgottenPassword\");\nexport const resendVerificationEmailResponse = getApiResponse(\n  \"resendVerificationEmail\"\n);\nexport const passwordResetResponse = getApiResponse(\"passwordReset\");\nexport const verifyResetPasswordResponse = getApiResponse(\n  \"verifyResetPassword\"\n);\nexport const apiVettedResponse = getApiResponse(\"vetted\");\nconst apiUserProposalsResponse = getApiResponse(\"userProposals\");\nconst apiUnvettedResponse = getApiResponse(\"unvetted\");\nconst apiProposalResponse = getApiResponse(\"proposal\");\nconst apiInvoiceResponse = getApiResponse(\"invoice\");\nconst apiProposalCommentsResponse = getApiResponse(\"proposalComments\");\nconst apiInvoiceCommentsResponse = getApiResponse(\"invoiceComments\");\nconst apiNewProposalResponse = getApiResponse(\"newProposal\");\nconst apiNewInvoiceResponse = getApiResponse(\"newInvoice\");\nconst apiUserInvoicesResponse = getApiResponse(\"userInvoices\");\nconst apiSetStatusProposalResponse = getApiResponse(\"setStatusProposal\");\nexport const apiUserSearchResponse = getApiResponse(\"userSearch\");\nexport const verifyNewUser = getApiResponse(\"verifyNewUser\");\nexport const updateUserKey = getApiResponse(\"updateUserKey\");\nexport const verifyUserKey = getApiResponse(\"verifyUserKey\");\nexport const updateUserKeyError = getApiError(\"updateUserKey\");\nexport const verifyUserKeyError = getApiError(\"verifyUserKey\");\nconst apiCommentsLikesResponse = getApiResponse(\"commentslikes\");\nexport const apiEditUserPayload = getApiPayload(\"editUser\");\nexport const apiEditUserResponse = getApiResponse(\"editUser\");\nexport const editUserError = getApiError(\"editUser\");\nexport const manageUserResponse = getApiResponse(\"manageUser\");\n\nexport const apiLikeCommentResponse = getApiResponse(\"likeComment\");\nexport const apiLikeCommentError = getApiError(\"likeComment\");\nexport const apiLikeCommentPayload = getApiPayload(\"likeComment\");\n\nexport const apiPropsVoteStatusResponse = getApiResponse(\"proposalsVoteStatus\");\nexport const apiPropsVoteStatusError = getApiError(\"proposalsVoteStatus\");\n\nexport const apiPropVoteStatusResponse = getApiResponse(\"proposalVoteStatus\");\nexport const apiPropVoteStatusError = getApiError(\"proposalVoteStatusError\");\n\nexport const apiPropVoteResultsResponse = getApiResponse(\"proposalVoteResults\");\nexport const apiPropVoteResultsError = getApiError(\"proposalVoteResultsError\");\n\nexport const apiAuthorizeVoteResponse = getApiResponse(\"authorizeVote\");\nexport const apiAuthorizeVotePayload = getApiPayload(\"authorizeVote\");\nexport const apiAuthorizeVoteError = getApiError(\"authorizeVote\");\nexport const isApiRequestingAuthorizeVote = getIsApiRequesting(\"authorizeVote\");\nexport const apiAuthorizeVoteToken = compose(\n  get(\"token\"),\n  apiAuthorizeVotePayload\n);\n\nexport const apiStartVoteResponse = getApiResponse(\"startVote\");\nexport const apiStartVotePayload = getApiPayload(\"startVote\");\nexport const apiStartVoteError = getApiError(\"startVote\");\nexport const isApiRequestingStartVote = getIsApiRequesting(\"startVote\");\nexport const apiStartVoteToken = compose(\n  get(\"token\"),\n  apiStartVotePayload\n);\n\nexport const isApiRequestingSetProposalStatusByToken = state => token => {\n  return (\n    setStatusProposalIsRequesting(state) &&\n    setStatusProposalToken(state) === token &&\n    setStatusProposalStatus(state)\n  );\n};\n\nconst apiProposalPaywallDetailsResponse = getApiResponse(\n  \"proposalPaywallDetails\"\n);\nexport const proposalPaywallAddress = compose(\n  get(\"paywalladdress\"),\n  apiProposalPaywallDetailsResponse\n);\nexport const proposalCreditPrice = state => {\n  let creditPrice = 0;\n  if (\n    state.api.proposalPaywallDetails &&\n    state.api.proposalPaywallDetails.response\n  ) {\n    creditPrice = state.api.proposalPaywallDetails.response.creditprice;\n  }\n\n  // Amount returned from the server is in atoms, so convert to dcr.\n  return creditPrice / 100000000;\n};\nexport const proposalPaywallTxNotBefore = compose(\n  get(\"paywalltxnotbefore\"),\n  apiProposalPaywallDetailsResponse\n);\nexport const isApiRequestingProposalPaywall = getIsApiRequesting(\n  \"proposalPaywallDetails\"\n);\nexport const proposalPaywallError = getApiError(\"proposalPaywallDetails\");\n\nexport const isApiRequestingUpdateProposalCredits = getIsApiRequesting(\n  \"updateProposalCredits\"\n);\nexport const updateProposalCreditsError = getApiError(\"updateProposalCredits\");\nconst apiUserProposalCreditsResponse = getApiResponse(\"userProposalCredits\");\nexport const proposalCreditPurchases = state => {\n  const r = apiUserProposalCreditsResponse(state);\n  if (!r || !r.spentcredits || !r.unspentcredits) {\n    return [];\n  }\n\n  const purchasesMap = {};\n  [...r.spentcredits, ...r.unspentcredits].forEach(credit => {\n    if (credit.txid in purchasesMap) {\n      purchasesMap[credit.txid].numberPurchased++;\n    } else {\n      purchasesMap[credit.txid] = {\n        price: credit.price / 100000000,\n        datePurchased: credit.datepurchased,\n        numberPurchased: 1,\n        txId: credit.txid\n      };\n    }\n  });\n\n  return Object.values(purchasesMap).sort(\n    (a, b) => a.datePurchased - b.datePurchased\n  );\n};\nexport const isApiRequestingUserProposalCredits = getIsApiRequesting(\n  \"userProposalCredits\"\n);\nexport const userProposalCreditsError = getApiError(\"userProposalCredits\");\n\nexport const apiInitError = getApiError(\"init\");\nexport const apiCensorCommentError = getApiError(\"censorComment\");\nexport const apiNewUserError = or(apiInitError, getApiError(\"newUser\"));\nexport const apiUserError = getApiError(\"user\");\nexport const apiChangePasswordError = or(\n  apiInitError,\n  getApiError(\"changePassword\")\n);\nexport const apiChangeUsernameError = or(\n  apiInitError,\n  getApiError(\"changeUsername\")\n);\nexport const apiVerifyNewUserError = or(\n  apiInitError,\n  getApiError(\"verifyNewUser\")\n);\nexport const apiForgottenPasswordError = or(\n  apiInitError,\n  getApiError(\"forgottenPassword\")\n);\nexport const apiPasswordResetError = or(\n  apiInitError,\n  getApiError(\"passwordReset\")\n);\nexport const apiLoginError = or(apiInitError, getApiError(\"login\"));\nexport const apiLogoutError = getApiError(\"logout\");\nexport const apiUserSearchError = getApiError(\"userSearch\");\nconst apiVettedError = getApiError(\"vetted\");\nconst apiUserProposalsError = getApiError(\"userProposals\");\nconst apiUnvettedError = getApiError(\"unvetted\");\nconst apiProposalError = getApiError(\"proposal\");\nconst apiNewProposalError = getApiError(\"newProposal\");\nconst apiNewInvoiceError = getApiError(\"newInvoice\");\nconst apiUserInvoicesError = getApiError(\"userInvoices\");\nconst apiSetStatusProposalError = getApiError(\"setStatusProposal\");\nconst apiCommentsLikesError = getApiError(\"commentslikes\");\nexport const apiError = or(\n  apiInitError,\n  apiNewUserError,\n  apiChangePasswordError,\n  apiChangeUsernameError,\n  apiVerifyNewUserError,\n  apiCensorCommentError,\n  apiLoginError,\n  apiLogoutError,\n  apiVettedError,\n  apiUserProposalsError,\n  apiProposalError,\n  apiUserSearchError,\n  apiNewProposalError,\n  apiCommentsLikesError,\n  apiSetStatusProposalError\n);\n\nexport const csrf = compose(\n  get(\"csrfToken\"),\n  apiInitResponse\n);\n\nexport const newUserEmail = compose(\n  get(\"email\"),\n  apiNewUserPayload\n);\nexport const forgottenPassEmail = compose(\n  get(\"email\"),\n  apiForgottenPasswordPayload\n);\nexport const emailForResendVerification = compose(\n  get(\"email\"),\n  apiResendVerificationEmailPayload\n);\n\nexport const email = or(\n  compose(\n    get(\"email\"),\n    apiMeResponse\n  ),\n  compose(\n    get(\"email\"),\n    apiLoginPayload\n  )\n);\n\nexport const loggedInAsEmail = or(\n  compose(\n    get(\"email\"),\n    apiMeResponse\n  )\n);\n\nexport const lastLoginTime = or(\n  compose(\n    get(\"lastlogintime\"),\n    apiMeResponse\n  )\n);\n\nexport const getUserUsername = or(\n  compose(\n    get(\"username\"),\n    apiChangeUsernameResponse\n  ),\n  compose(\n    get(\"username\"),\n    apiUserResponse\n  )\n);\n\nexport const loggedInAsUsername = or(\n  compose(\n    get(\"username\"),\n    apiChangeUsernameResponse\n  ),\n  compose(\n    get(\"username\"),\n    apiMeResponse\n  )\n);\n\nexport const isAdmin = bool(\n  or(\n    compose(\n      get(\"isadmin\"),\n      apiMeResponse\n    ),\n    compose(\n      get(\"isadmin\"),\n      apiLoginResponse\n    )\n  )\n);\n\nexport const userAlreadyPaid = bool(state => {\n  if (state.api.me && state.api.me.response) {\n    return state.api.me.response.paywalladdress === \"\";\n  }\n  if (state.api.login && state.api.login.response) {\n    return state.api.login.response.paywalladdress === \"\";\n  }\n\n  return false;\n});\n\nexport const paywallAddress = compose(\n  get(\"paywalladdress\"),\n  apiMeResponse\n);\nexport const paywallTxid = compose(\n  get(\"paywalltxid\"),\n  apiMeResponse\n);\n\nexport const paywallAmount = state => {\n  let paywallAmount = 0;\n  if (state.api.me && state.api.me.response) {\n    paywallAmount = state.api.me.response.paywallamount;\n  }\n\n  // Amount returned from the server is in atoms, so convert to dcr.\n  return paywallAmount / 100000000;\n};\n\nexport const paywallTxNotBefore = state => {\n  if (state.api.me && state.api.me.response) {\n    return state.api.me.response.paywalltxnotbefore;\n  }\n\n  return null;\n};\n\nexport const isTestNet = compose(\n  get(\"testnet\"),\n  apiInitResponse\n);\nexport const isMainNet = not(isTestNet);\n\nexport const getPropVoteStatus = state => token => {\n  const vsResponse = apiPropsVoteStatusResponse(state) || {};\n  return vsResponse[token] || {};\n};\n\nexport const proposalsWithVoteStatus = state => {\n  const proposals = apiVettedProposals(state);\n  return proposals.map(prop => ({\n    ...prop,\n    voteStatus: getPropVoteStatus(state)(prop.censorshiprecord.token)\n  }));\n};\n\nexport const proposalWithVoteStatus = state => {\n  const proposal = apiProposal(state);\n  return (\n    !!proposal && {\n      ...proposal,\n      voteStatus: getPropVoteStatus(state)(proposal.censorshiprecord.token)\n    }\n  );\n};\n\nexport const userid = state =>\n  state.api.me.response && state.api.me.response.userid;\nexport const censoredComment = state => state.api.censorComment.response;\n\nexport const getApiLastLoaded = key => get([\"api\", \"lastLoaded\", key]);\n\nexport const lastLoadedUnvettedProposal = getApiLastLoaded(\"unvetted\");\nexport const lastLoadedVettedProposal = getApiLastLoaded(\"vetted\");\nexport const lastLoadedUserProposal = getApiLastLoaded(\"userProposals\");\nexport const lastLoadedUserDetailProposal = getApiLastLoaded(\"user\");\n\nexport const serverPubkey = compose(\n  get(\"pubkey\"),\n  apiInitResponse\n);\nexport const userPubkey = compose(\n  get(\"publickey\"),\n  apiMeResponse\n);\nexport const commentsLikes = or(\n  compose(\n    get(\"commentslikes\"),\n    apiCommentsLikesResponse\n  ),\n  constant(null)\n);\nexport const policy = apiPolicyResponse;\nexport const isLoadingSubmit = or(\n  isApiRequestingPolicy,\n  isApiRequestingInit,\n  isApiRequestingEditProposal\n);\nexport const apiVettedProposals = or(\n  compose(\n    get(\"proposals\"),\n    apiVettedResponse\n  ),\n  constant([])\n);\nexport const vettedProposalsIsRequesting = isApiRequestingVetted;\nexport const vettedProposalsError = or(apiInitError, apiVettedError);\n\nexport const apiUserProposals = or(\n  compose(\n    get(\"proposals\"),\n    apiUserProposalsResponse\n  ),\n  constant([])\n);\nexport const userProposalsIsRequesting = isApiRequestingUserProposals;\nexport const userProposalsError = or(apiInitError, apiUserProposalsError);\nexport const apiUnvettedProposals = or(\n  compose(\n    get(\"proposals\"),\n    apiUnvettedResponse\n  ),\n  constant([])\n);\nconst filtered = status =>\n  compose(\n    filter(\n      compose(\n        eq(status),\n        get(\"status\")\n      )\n    ),\n    apiUnvettedProposals\n  );\nexport const unreviewedProposals = filtered(PROPOSAL_STATUS_UNREVIEWED);\nexport const abandonedProposals = filtered(PROPOSAL_STATUS_ABANDONED);\nexport const censoredProposals = filtered(PROPOSAL_STATUS_CENSORED);\nexport const unvettedProposalsIsRequesting = or(\n  isApiRequestingInit,\n  isApiRequestingUnvetted\n);\nexport const unvettedProposalsError = or(apiInitError, apiUnvettedError);\nexport const apiProposal = compose(\n  get(\"proposal\"),\n  apiProposalResponse\n);\nexport const apiInvoice = compose(\n  get(\"invoice\"),\n  apiInvoiceResponse\n);\nexport const proposalPayload = state => state.api.proposal.payload;\nexport const proposalToken = compose(\n  get([\"censorshiprecord\", \"token\"]),\n  apiProposal\n);\nexport const proposalStatus = compose(\n  get(\"status\"),\n  apiProposal\n);\n\nexport const proposalAuthor = compose(\n  get([\"username\"]),\n  apiProposal\n);\nexport const apiProposalComments = or(\n  compose(\n    get(\"comments\"),\n    apiProposalCommentsResponse\n  ),\n  constant([])\n);\nexport const apiInvoiceComments = or(\n  compose(\n    get(\"comments\"),\n    apiInvoiceCommentsResponse\n  ),\n  constant([])\n);\nexport const proposalIsRequesting = or(\n  isApiRequestingInit,\n  isApiRequestingProposal\n);\nexport const invoiceIsRequesting = isApiRequestingInvoice;\nexport const proposalError = or(apiInitError, apiProposalError);\nexport const user = compose(\n  get(\"user\"),\n  apiUserResponse\n);\nexport const newUserResponse = bool(apiNewUserResponse);\nexport const newProposalIsRequesting = isApiRequestingNewProposal;\nexport const newInvoiceIsRequesting = isApiRequestingNewInvoice;\nexport const newProposalError = apiNewProposalError;\nexport const newInvoiceError = apiNewInvoiceError;\nexport const userInvoiceError = apiUserInvoicesError;\nexport const newProposalMerkle = compose(\n  get([\"censorshiprecord\", \"merkle\"]),\n  apiNewProposalResponse\n);\nexport const newProposalToken = compose(\n  get([\"censorshiprecord\", \"token\"]),\n  apiNewProposalResponse\n);\nexport const newProposalSignature = compose(\n  get([\"censorshiprecord\", \"signature\"]),\n  apiNewProposalResponse\n);\nexport const newProposalName = compose(\n  get(\"name\"),\n  apiNewProposalPayload\n);\nexport const newProposalDescription = compose(\n  get(\"description\"),\n  apiNewProposalPayload\n);\nexport const newProposalFiles = compose(\n  get(\"files\"),\n  apiNewProposalPayload\n);\nexport const newInvoiceMerkle = compose(\n  get([\"censorshiprecord\", \"merkle\"]),\n  apiNewInvoiceResponse\n);\nexport const newInvoiceToken = compose(\n  get([\"censorshiprecord\", \"token\"]),\n  apiNewInvoiceResponse\n);\nexport const newInvoiceSignature = compose(\n  get([\"censorshiprecord\", \"signature\"]),\n  apiNewInvoiceResponse\n);\nexport const newInvoiceYear = compose(\n  get(\"year\"),\n  apiNewInvoicePayload\n);\nexport const newInvoiceMonth = compose(\n  get(\"month\"),\n  apiNewInvoicePayload\n);\nexport const newInvoiceFiles = compose(\n  get(\"files\"),\n  apiNewInvoicePayload\n);\nexport const apiUserInvoices = compose(\n  get(\"invoices\"),\n  apiUserInvoicesResponse\n);\nexport const setStatusProposal = compose(\n  get(\"status\"),\n  apiSetStatusProposalResponse\n);\nexport const setStatusProposalIsRequesting = isApiRequestingSetStatusProposal;\nexport const setStatusProposalToken = compose(\n  get(\"token\"),\n  apiSetStatusProposalPayload\n);\nexport const setStatusProposalStatus = compose(\n  get(\"status\"),\n  apiSetStatusProposalPayload\n);\nexport const setStatusProposalError = apiSetStatusProposalError;\nexport const verificationToken = compose(\n  get(\"verificationtoken\"),\n  apiNewUserResponse\n);\nexport const getKeyMismatch = state => state.api.keyMismatch;\nexport const manageUserAction = compose(\n  get(\"action\"),\n  apiManageUserPayload\n);\nexport const lastLoginTimeFromLoginResponse = compose(\n  get(\"lastlogintime\"),\n  apiLoginResponse\n);\nexport const lastLoginTimeFromMeResponse = compose(\n  get(\"lastlogintime\"),\n  apiMeResponse\n);\nexport const sessionMaxAge = compose(\n  get(\"sessionmaxage\"),\n  apiMeResponse\n);\n\nexport const visitedProposal = compose(\n  get(\"accesstime\"),\n  getApiResponse(\"proposalComments\")\n);\n\nexport const apiEditProposalResponse = getApiResponse(\"editProposal\");\nexport const apiEditProposalError = getApiError(\"editProposal\");\nexport const apiEditProposalPayload = getApiPayload(\"editProposal\");\nexport const editProposalToken = compose(\n  get([\"proposal\", \"censorshiprecord\", \"token\"]),\n  apiEditProposalResponse\n);\n\nexport const apiProposalPaywallPaymentResponse = getApiResponse(\n  \"proposalPaywallPayment\"\n);\nexport const apiProposalPaywallPaymentError = getApiError(\n  \"proposalPaywallPayment\"\n);\nexport const apiProposalPaywallPaymentTxid = compose(\n  get(\"txid\"),\n  apiProposalPaywallPaymentResponse\n);\nexport const apiProposalPaywallPaymentAmount = compose(\n  get(\"amount\"),\n  apiProposalPaywallPaymentResponse\n);\nexport const apiProposalPaywallPaymentConfirmations = compose(\n  get(\"confirmations\"),\n  apiProposalPaywallPaymentResponse\n);\nexport const isApiRequestingUpdateUserKey = getIsApiRequesting(\"updateUserKey\");\n\nconst rescanUserPaymentsKey = \"rescanUserPayments\";\nexport const apiRescanUserPaymentsResponse = getApiResponse(\n  rescanUserPaymentsKey\n);\nexport const apiRescanUserPaymentsUserId = getApiPayload(rescanUserPaymentsKey);\nexport const apiRescanUserPaymentsError = getApiError(rescanUserPaymentsKey);\nexport const isApiRequestingRescanUserPayments = getIsApiRequesting(\n  rescanUserPaymentsKey\n);\nexport const apiRescanUserPaymentsNewCredits = compose(\n  get(\"newcredits\"),\n  apiRescanUserPaymentsResponse\n);\n\nexport const amountOfCreditsAddedOnRescan = state => {\n  const newCredits = apiRescanUserPaymentsNewCredits(state);\n  return newCredits && newCredits.length;\n};\n\nexport const apiTokenInventoryResponse = getApiResponse(\"tokenInventory\");\nexport const apiTokenInventoryError = getApiError(\"tokenInventory\");\nexport const apiTokenInventoryPayload = getApiPayload(\"tokenInventory\");\nexport const apiTokenInventoryIsRequesting = getIsApiRequesting(\n  \"tokenInventory\"\n);\n\nexport const isApiRequesting = or(\n  isApiRequestingInit,\n  isApiRequestingUnvettedStatus,\n  isApiRequestingPolicy,\n  isApiRequestingNewUser,\n  isApiRequestingVerifyNewUser,\n  isApiRequestingLogin,\n  isApiRequestingLogout,\n  isApiRequestingForgottenPassword,\n  isApiRequestingResendVerificationEmail,\n  isApiRequestingPasswordReset,\n  isApiRequestingVetted,\n  isApiRequestingUnvetted,\n  isApiRequestingUserProposals,\n  isApiRequestingProposal,\n  isApiRequestingNewProposal,\n  isApiRequestingUser,\n  isApiRequestingNewComment,\n  isApiRequestingSetStatusProposal,\n  isApiRequestingStartVote,\n  isApiRequestingPropsVoteStatus,\n  isApiRequestingPropVoteStatus,\n  isApiRequestingPropVoteResults\n);\n\nexport const resetPasswordResponse = getApiResponse(\"resetPassword\");\n\nexport const isApiRequestingComments = or(\n  getIsApiRequesting(\"proposalComments\"),\n  getIsApiRequesting(\"invoiceComments\")\n);\n\nexport const isApiRequestingCommentsLikes = getIsApiRequesting(\"commentslikes\");\n\n// CMS Selectors\nconst mode = compose(\n  get(\"mode\"),\n  apiInitResponse\n);\n\nexport const isModeFetched = state => {\n  if (mode(state) === undefined) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const isCMS = state => mode(state) === CMSWWWMODE;\n\nexport const invoiceToken = compose(\n  get([\"censorshiprecord\", \"token\"]),\n  apiInvoice\n);\n\nexport const inviteUserResponse = getApiResponse(\"inviteUser\");\nexport const isApiRequestingInviteUser = getIsApiRequesting(\"inviteUser\");\n\nexport const isApiRequestingPayInvoices = getIsApiRequesting(\"payApproved\");\n\nexport const isApiRequestingAdminInvoices = getIsApiRequesting(\"adminInvoices\");\nexport const adminInvoicesResponse = getApiResponse(\"adminInvoices\");\nexport const apiAdminInvoices = compose(\n  get(\"invoices\"),\n  adminInvoicesResponse\n);\nexport const resetPassEmail = compose(\n  get(\"email\"),\n  getApiPayload(\"resetPassword\")\n);\nexport const adminInvoicesError = getApiError(\"adminInvoices\");\n\nexport const isApiRequestingUserInvoices = getIsApiRequesting(\"userInvoices\");\n\nexport const isApiRequestingSetStatusInvoice = getIsApiRequesting(\n  \"setStatusInvoice\"\n);\nexport const setStatusInvoicePayload = getApiPayload(\"setStatusInvoice\");\nexport const setStatusInvoicePayloadToken = compose(\n  get(\"token\"),\n  setStatusInvoicePayload\n);\nexport const setStatusInvoicePayloadStatus = compose(\n  get(\"status\"),\n  setStatusInvoicePayload\n);\n\nexport const generatePayoutsResponse = getApiResponse(\"payouts\");\nexport const generatePayoutsError = getApiError(\"payouts\");\nexport const isApiRequestingGeneratePayouts = getIsApiRequesting(\"payouts\");\nexport const payouts = compose(\n  get(\"payouts\"),\n  generatePayoutsResponse\n);\n\nexport const isApiRequestingSetInvoiceStatusByToken = state => token => {\n  return (\n    isApiRequestingSetStatusInvoice(state) &&\n    setStatusInvoicePayloadToken(state) === token &&\n    setStatusInvoicePayloadStatus(state)\n  );\n};\n\nexport const usePaywall = and(not(isCMS));\n\nexport const apiEditInvoiceResponse = getApiResponse(\"editInvoice\");\nexport const apiEditInvoiceError = getApiError(\"editInvoice\");\n\nexport const editInvoiceToken = compose(\n  get([\"invoice\", \"censorshiprecord\", \"token\"]),\n  apiEditInvoiceResponse\n);\n\nexport const visitedInvoice = compose(\n  get(\"accesstime\"),\n  getApiResponse(\"invoiceComments\")\n);\n\nexport const apiExchangeRateResponse = getApiResponse(\"exchangeRate\");\nexport const apiExchangeRateError = getApiError(\"exchangeRate\");\nexport const isApiRequestingExchangeRate = getIsApiRequesting(\"exchangeRate\");\nexport const exchangeRate = compose(\n  get(\"exchangerate\"),\n  apiExchangeRateResponse\n);\n","import Promise from \"promise\";\nimport { reset } from \"redux-form\";\nimport {\n  onSubmitProposal,\n  onChangeUsername,\n  onChangePassword,\n  onFetchProposalComments,\n  onSubmitEditedProposal,\n  onSubmitInvoice,\n  onSubmitEditedInvoice,\n  onFetchInvoiceComments,\n  handleLogout,\n  onRequestMe\n} from \"./api\";\nimport {\n  onFetchProposal as onFetchProposalApi,\n  onSubmitComment as onSubmitCommentApi,\n  onFetchInvoice as onFetchInvoiceApi\n} from \"./api\";\nimport {\n  resetNewProposalData,\n  resetNewInvoiceData\n} from \"../lib/editors_content_backup\";\nimport * as sel from \"../selectors\";\nimport act from \"./methods\";\nimport { TOP_LEVEL_COMMENT_PARENTID, apiInfo } from \"../lib/api\";\nimport { onEditUser, cleanErrors } from \"./api\";\nimport { loadStateLocalStorage, loggedInStateKey } from \"../lib/local_storage\";\nimport {\n  PROPOSAL_VOTING_ACTIVE,\n  PROPOSAL_VOTING_NOT_AUTHORIZED,\n  PROPOSAL_STATUS_UNREVIEWED,\n  PROPOSAL_FILTER_ALL,\n  PROPOSAL_APPROVED,\n  PROPOSAL_REJECTED\n} from \"../constants\";\nimport { fromUSDUnitsToUSDCents, uniqueID } from \"../helpers\";\n// import { openModal } from \"./modal\";\n// import * as modalTypes from \"../components/Modal/modalTypes\";\n\nexport const SET_REPLY_PARENT = \"SET_REPLY_PARENT\";\n\nexport const onRouteChange = () => dispatch => {\n  dispatch(cleanErrors());\n};\n\nexport const onSetReplyParent = (\n  parentId = TOP_LEVEL_COMMENT_PARENTID\n) => dispatch =>\n  Promise.all([\n    dispatch(act.SET_REPLY_PARENT(parentId)),\n    dispatch(reset(\"form/reply\"))\n  ]);\n\nexport const onSaveNewInvoice = (\n  {\n    month,\n    year,\n    name,\n    location,\n    contact,\n    rate,\n    address,\n    lineitems,\n    exchangerate,\n    files\n  },\n  _,\n  props\n) => (dispatch, getState) => {\n  // const lineItems = convertGridToLineItems(datasheet);\n  dispatch(\n    onSubmitInvoice(\n      props.loggedInAsEmail,\n      props.userid,\n      props.username,\n      +month,\n      +year,\n      exchangerate,\n      name,\n      location,\n      contact,\n      fromUSDUnitsToUSDCents(+rate),\n      address,\n      lineitems,\n      files\n    )\n  ).then(() => sel.newInvoiceToken(getState()));\n};\n\nexport const onSaveNewProposal = ({ name, description, files }, _, props) => (\n  dispatch,\n  getState\n) =>\n  dispatch(\n    onSubmitProposal(\n      props.loggedInAsEmail,\n      props.userid,\n      props.username,\n      name.trim(),\n      description,\n      files\n    )\n  ).then(() => sel.newProposalToken(getState()));\n\nexport const onSaveNewProposalV2 = ({ name, description, files }) => (\n  dispatch,\n  getState\n) => {\n  const email = sel.loggedInAsEmail(getState());\n  const id = sel.userid(getState());\n  const username = sel.loggedInAsUsername(getState());\n\n  return dispatch(\n    onSubmitProposal(email, id, username, name.trim(), description, files)\n  ).then(() => sel.newProposalToken(getState()));\n};\n\nexport const onEditProposalV2 = ({ token, name, description, files }) => (\n  dispatch,\n  getState\n) => {\n  const email = sel.loggedInAsEmail(getState());\n  return dispatch(\n    onSubmitEditedProposal(email, name, description, files, token)\n  ).then(() => dispatch(onFetchProposalApi(token)).then(() => token));\n};\n\nexport const onSaveNewCommentV2 = ({ comment, token, parentID }) => (\n  dispatch,\n  getState\n) => {\n  const email = sel.loggedInAsEmail(getState());\n  return dispatch(onSubmitCommentApi(email, token, comment, parentID));\n};\n\nexport const onEditProposal = (\n  { name, description, files },\n  _,\n  props\n) => dispatch =>\n  dispatch(\n    onSubmitEditedProposal(\n      props.loggedInAsEmail,\n      name.trim(),\n      description,\n      files,\n      props.token\n    )\n  );\n\nexport const onResetUser = () => act.RESET_USER();\n\nexport const onEditInvoice = (\n  {\n    month,\n    year,\n    name,\n    location,\n    contact,\n    rate,\n    address,\n    lineitems,\n    exchangerate,\n    files\n  },\n  _,\n  props\n) => dispatch => {\n  dispatch(\n    onSubmitEditedInvoice(\n      props.loggedInAsEmail,\n      props.userid,\n      props.username,\n      +month,\n      +year,\n      exchangerate,\n      name,\n      location,\n      contact,\n      fromUSDUnitsToUSDCents(+rate),\n      address,\n      lineitems,\n      files,\n      props.token\n    )\n  );\n};\nexport const onSaveDraftProposal = ({ name, description, files, draftId }) => {\n  resetNewProposalData();\n  const id = draftId || uniqueID(\"draft\");\n  return act.SAVE_DRAFT_PROPOSAL({\n    name: name.trim(),\n    description,\n    files,\n    timestamp: Date.now() / 1000,\n    id\n  });\n};\n\nexport const onLoadDraftProposals = email => {\n  const stateFromLS = loadStateLocalStorage(email);\n  const drafts = sel.draftProposals(stateFromLS) || {};\n  return act.LOAD_DRAFT_PROPOSALS(drafts);\n};\n\nexport const onDeleteDraftProposal = draftId =>\n  act.DELETE_DRAFT_PROPOSAL(draftId);\n\nexport const onSaveDraftInvoice = ({\n  month,\n  year,\n  name,\n  location,\n  contact,\n  rate,\n  address,\n  lineitems,\n  files,\n  draftId\n}) => {\n  resetNewInvoiceData();\n  const id = draftId || uniqueID(\"draft\");\n  return act.SAVE_DRAFT_INVOICE({\n    month,\n    year,\n    name,\n    location,\n    contact,\n    rate,\n    address,\n    lineitems,\n    files,\n    id,\n    timestamp: Date.now() / 1000\n  });\n};\n\nexport const onLoadDraftInvoices = email => {\n  const stateFromLS = loadStateLocalStorage(email);\n  const drafts = sel.draftInvoices(stateFromLS) || {};\n  return act.LOAD_DRAFT_INVOICES(drafts);\n};\n\nexport const onDeleteDraftInvoice = draftId => {\n  return act.DELETE_DRAFT_INVOICE(draftId);\n};\n\nexport const onSaveChangeUsername = ({ password, newUsername }) => (\n  dispatch,\n  getState\n) =>\n  dispatch(onChangeUsername(password, newUsername)).then(() =>\n    sel.newProposalToken(getState())\n  );\n\nexport const onSaveChangePassword = ({ existingPassword, newPassword }) => (\n  dispatch,\n  getState\n) =>\n  dispatch(onChangePassword(existingPassword, newPassword)).then(() =>\n    sel.newProposalToken(getState())\n  );\n\nexport const onFetchProposalApp = token => dispatch =>\n  dispatch(onFetchProposalApi(token)).then(() =>\n    dispatch(onFetchProposalComments(token))\n  );\n\nexport const onFetchInvoiceApp = (token, version = null) => dispatch =>\n  dispatch(onFetchInvoiceApi(token, version)).then(() =>\n    dispatch(onFetchInvoiceComments(token))\n  );\n\nexport const onLoadMe = me => dispatch => {\n  dispatch(act.LOAD_ME(me));\n};\n\nexport const onResetPaywallInfo = () => act.RESET_PAYWALL_INFO();\nexport const onChangeAdminFilter = option =>\n  act.CHANGE_ADMIN_FILTER_VALUE(option);\nexport const onChangePublicFilter = option =>\n  act.CHANGE_PUBLIC_FILTER_VALUE(option);\nexport const onChangeUserFilter = option =>\n  act.CHANGE_USER_FILTER_VALUE(option);\n\nexport const onChangeDateFilter = (month, year) =>\n  act.CHANGE_DATE_FILTER({ month, year });\n\nexport const onResetDateFilter = () => act.RESET_DATE_FILTER();\n\nexport const onChangeProposalStatusApproved = status =>\n  act.SET_PROPOSAL_APPROVED(status);\n\nexport const onIdentityImported = (successMsg, errorMsg = \"\") =>\n  act.IDENTITY_IMPORTED({ errorMsg, successMsg });\n\nexport const onSubmitCommentApp = (...args) => dispatch =>\n  dispatch(onSubmitCommentApi(...args)).then(() =>\n    dispatch(onSetReplyParent())\n  );\n\nexport const onLocalStorageChange = event => async (dispatch, getState) => {\n  const state = getState();\n\n  if (event.key !== loggedInStateKey) {\n    return;\n  }\n\n  const apiMeResponse = sel.apiMeResponse(state);\n\n  const localUserDataDeleted = !event.newValue;\n\n  // user local data was cleared but the user data in the app\n  // state is also empty so there is nothing to do here\n  if (localUserDataDeleted && !apiMeResponse) {\n    return;\n  }\n\n  // request the api info to see if there is an active user\n  const apiInfoResponse = await apiInfo();\n  const userActive = apiInfoResponse.activeusersession;\n\n  // user is not active so we just trigger the logout action\n  // to clear the app state\n  if (!userActive) {\n    dispatch(handleLogout());\n    // dispatch(\n    //   openModal(\n    //     modalTypes.LOGIN,\n    //     {\n    //       title: \"Your session has expired. Please log in again.\",\n    //       redirectAfterLogin: window.location.pathname\n    //     },\n    //     null\n    //   )\n    // );\n    return;\n  }\n\n  // From this point we know the user is active and the local storage\n  // has changed. Because of it we can no longer trust the data saved in there.\n  // Hence, we update the user data by querying it from the api.\n  dispatch(onRequestMe());\n};\n\nexport const selectDefaultPublicFilterValue = (dispatch, getState) => {\n  const filterValue = selectDefaultFilterValue(\n    sel.getVettedProposalFilterCounts(getState()),\n    [\n      PROPOSAL_VOTING_ACTIVE,\n      PROPOSAL_VOTING_NOT_AUTHORIZED,\n      PROPOSAL_FILTER_ALL,\n      PROPOSAL_APPROVED,\n      PROPOSAL_REJECTED\n    ]\n  );\n  dispatch(onChangePublicFilter(filterValue));\n};\n\nexport const selectDefaultAdminFilterValue = (dispatch, getState) => {\n  const filterValue = selectDefaultFilterValue(\n    sel.getUnvettedProposalFilterCounts(getState()),\n    [PROPOSAL_STATUS_UNREVIEWED, PROPOSAL_FILTER_ALL]\n  );\n  dispatch(onChangeAdminFilter(filterValue));\n};\n\n// Chooses a sensible default filter - don't pick a filter with 0 proposals.\nconst selectDefaultFilterValue = (\n  proposalFilterCounts,\n  defaultFilterPreferences\n) => {\n  for (const filterPreference of defaultFilterPreferences) {\n    if ((proposalFilterCounts[filterPreference] || 0) > 0) {\n      return filterPreference;\n    }\n  }\n\n  return defaultFilterPreferences[defaultFilterPreferences.length - 1];\n};\n\nexport const setOnboardAsViewed = () => act.SET_ONBOARD_AS_VIEWED();\n\nexport const resetLastSubmittedProposal = () => act.RESET_LAST_SUBMITTED();\n\nexport const onSetCommentsSortOption = option =>\n  act.SET_COMMENTS_SORT_OPTION(option);\n\nexport const toggleCreditsPaymentPolling = bool =>\n  act.TOGGLE_CREDITS_PAYMENT_POLLING(bool);\n\nexport const toggleProposalPaymentReceived = bool =>\n  act.TOGGLE_PROPOSAL_PAYMENT_RECEIVED(bool);\n\nexport const onEditUserPreferences = preferences => dispatch =>\n  dispatch(onEditUser(sel.resolveEditUserValues(preferences)));\n\nexport const onResetComments = () => act.RESET_COMMENTS();\n\n// CMS\nexport const onResetInviteUser = () => act.RESET_INVITE_USER();\n","import { OPEN_MODAL, CLOSE_MODAL, CLOSE_ALL_MODALS } from \"./types\";\n\nexport const openModal = (\n  modalType,\n  payload,\n  callback,\n  options = { disableCloseOnClick: false, disableCloseOnEsc: false }\n) => ({\n  type: OPEN_MODAL,\n  modalType,\n  payload,\n  callback,\n  options\n});\n\nexport const closeModal = () => ({\n  type: CLOSE_MODAL\n});\n\nexport const closeAllModals = () => ({\n  type: CLOSE_ALL_MODALS\n});\n\nexport const confirmWithModal = (modalType, payload) => dispatch =>\n  new Promise(resolve => {\n    dispatch(\n      openModal(modalType, payload, function(a, b) {\n        resolve(a, b);\n      })\n    );\n  });\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Message from \"./Message\";\n\nconst defaulErrorRenderer = (error, title) => (\n  <Message header={title} type=\"error\" body={error.toString()} />\n);\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  render() {\n    const { title, errorRenderer, displayError } = this.props;\n    const { error } = this.state;\n    return error && displayError\n      ? errorRenderer(error, title)\n      : this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  title: PropTypes.string,\n  errorRenderer: PropTypes.func,\n  displayError: PropTypes.bool\n};\n\nErrorBoundary.defaultProps = {\n  title: \"Error\",\n  errorRenderer: defaulErrorRenderer,\n  displayError: true\n};\n\nexport default ErrorBoundary;\n","export const MAINNET = \"mainnet\";\nexport const TESTNET = \"testnet\";\n\nexport const CMSWWWMODE = \"cmswww\";\n\nexport const RECORD_TYPE_PROPOSAL = \"proposals\";\nexport const RECORD_TYPE_INVOICE = \"invoices\";\n\nexport const EXPLORER = \"mainnet\";\n\n// CMS\nexport const INVOICE_STATUS_UNREVIEWED = 2;\n\n// POLITEIA\n\nexport const PROPOSAL_FILTER_ALL = 0;\n\nexport const PROPOSAL_STATUS_UNREVIEWED = 2;\nexport const PROPOSAL_STATUS_CENSORED = 3;\nexport const PROPOSAL_STATUS_PUBLIC = 4;\nexport const PROPOSAL_STATUS_UNREVIEWED_CHANGES = 5;\n\nexport const PROPOSAL_USER_FILTER_SUBMITTED = 1;\nexport const PROPOSAL_USER_FILTER_DRAFT_PROPOSALS = 2;\n\nexport const PAYWALL_STATUS_WAITING = 0;\nexport const PAYWALL_STATUS_LACKING_CONFIRMATIONS = 1;\nexport const PAYWALL_STATUS_PAID = 2;\n\nexport const CMS_PAYWALL_STATUS = 2;\nexport const CONFIRMATIONS_REQUIRED = 2;\n\nexport const PUB_KEY_STATUS_LOADING = 0;\nexport const PUB_KEY_STATUS_LOADED = 1;\n\nexport const PROPOSAL_VOTING_NOT_AUTHORIZED = 1;\nexport const PROPOSAL_VOTING_AUTHORIZED = 2;\nexport const PROPOSAL_VOTING_ACTIVE = 3;\nexport const PROPOSAL_VOTING_FINISHED = 4;\nexport const PROPOSAL_STATUS_ABANDONED = 6;\nexport const PROPOSAL_REJECTED = 7;\nexport const PROPOSAL_APPROVED = 8;\n\nexport const USER_DETAIL_TAB_GENERAL = 0;\nexport const USER_DETAIL_TAB_PREFERENCES = 1;\nexport const USER_DETAIL_TAB_PROPOSALS = 2;\nexport const USER_DETAIL_TAB_COMMENTS = 3;\n\nexport const MANAGE_USER_EXPIRE_NEW_USER_VERIFICATION = 1;\nexport const MANAGE_USER_EXPIRE_UPDATE_KEY_VERIFICATION = 2;\nexport const MANAGE_USER_EXPIRE_RESET_PASSWORD_VERIFICATION = 3;\nexport const MANAGE_USER_CLEAR_USER_PAYWALL = 4;\nexport const MANAGE_USER_UNLOCK = 5;\nexport const MANAGE_USER_DEACTIVATE = 6;\nexport const MANAGE_USER_REACTIVATE = 7;\nexport const LIST_HEADER_PUBLIC = \"Public Proposals\";\nexport const LIST_HEADER_UNVETTED = \"Unvetted Proposals\";\nexport const LIST_HEADER_USER = \"Your Proposals\";\nexport const SORT_BY_OLD = \"OLD\";\nexport const SORT_BY_NEW = \"NEW\";\nexport const SORT_BY_TOP = \"TOP\";\n\nexport const DEFAULT_TAB_TITLE = \"Politeia\";\n\nexport const NOTIFICATION_EMAIL_MY_PROPOSAL_STATUS_CHANGE = 1 << 0;\nexport const NOTIFICATION_EMAIL_MY_PROPOSAL_VOTE_STARTED = 1 << 1;\nexport const NOTIFICATION_EMAIL_REGULAR_PROPOSAL_VETTED = 1 << 2;\nexport const NOTIFICATION_EMAIL_REGULAR_PROPOSAL_EDITED = 1 << 3;\nexport const NOTIFICATION_EMAIL_REGULAR_PROPOSAL_VOTE_STARTED = 1 << 4;\nexport const NOTIFICATION_EMAIL_ADMIN_PROPOSAL_NEW = 1 << 5;\nexport const NOTIFICATION_EMAIL_ADMIN_PROPOSAL_VOTE_AUTHORIZED = 1 << 6;\nexport const NOTIFICATION_EMAIL_COMMENT_ON_MY_PROPOSAL = 1 << 7;\nexport const NOTIFICATION_EMAIL_COMMENT_ON_MY_COMMENT = 1 << 8;\n// Import key errors\nexport const PUBLIC_KEY_MISMATCH =\n  \"The provided public key doesn't match the key stored in the server.\";\nexport const INVALID_KEY_PAIR = \"The provided key pair is not valid.\";\nexport const INVALID_FILE =\n  \"This is not a valid identity file. The identity has to be a JSON file containing the publicKey and the secretKey values.\";\nexport const LOAD_KEY_FAILED =\n  \"Sorry, something went wrong while importing the identity file, please try again. If the error persists, contact the Politeia support.\";\n\n//Links\nexport const PI_DOCS = \"https://docs.decred.org/governance/politeia/politeia/\";\nexport const PROPOSAL_GUIDELINES =\n  \"https://docs.decred.org/governance/politeia/proposal-guidelines/\";\nexport const TESTNET_PROPOSALS_REPOSITORY =\n  \"https://github.com/decred-proposals/testnet3\";\nexport const MAINNET_PROPOSALS_REPOSITORY =\n  \"https://github.com/decred-proposals/mainnet/\";\n\nexport const INVOICE_STATUS_INVALID = 0; // Invalid status XXX?\nexport const INVOICE_STATUS_NOTFOUND = 1; // Invoice not found XXX?\n\nexport const INVOICE_STATUS_NEW = 2; // Invoice has not been reviewed\nexport const INVOICE_STATUS_UPDATED = 3; // Invoice has unreviewed changes\nexport const INVOICE_STATUS_DISPUTED = 4; // Invoice has been disputed for some reason\nexport const INVOICE_STATUS_REJECTED = 5; // Invoice needs to be revised\nexport const INVOICE_STATUS_APPROVED = 6; // Invoice has been approved\nexport const INVOICE_STATUS_PAID = 7; // Invoice has been paid\n\nexport const INVOICE_FILTER_ALL = 99;\nexport const PROPOSAL_USER_FILTER_DRAFT_INVOICES = 100;\n\n// export const INVOICE_USER_FILTER_DRAFT = 1;\n// export const INVOICE_USER_FILTER_NEW = 2;\n\nexport const CMS_LIST_HEADER_ADMIN = \"Admin Invoices\";\nexport const CMS_LIST_HEADER_USER = \"Your Invoices\";\n\nexport const CMS_DEFAULT_TAB_TITLE = \"Contractor Management System\";\n\n// months && years\nexport const MONTHS = [\n  \"january\",\n  \"february\",\n  \"march\",\n  \"april\",\n  \"may\",\n  \"june\",\n  \"july\",\n  \"august\",\n  \"september\",\n  \"october\",\n  \"november\",\n  \"december\"\n];\nexport const YEARS = [\n  \"2019\",\n  \"2020\",\n  \"2021\",\n  \"2022\",\n  \"2023\",\n  \"2024\",\n  \"2025\",\n  \"2026\",\n  \"2027\",\n  \"2028\",\n  \"2029\",\n  \"2030\"\n];\nexport const FILTER_ALL_MONTHS = 0;\n\nexport const BLOCK_DURATION_TESTNET = 2;\nexport const BLOCK_DURATION_MAINNET = 5;\n","import * as types from \"./types\";\nimport { reduceTypes } from \"./lib\";\nexport default reduceTypes(types);\n","import React from \"react\";\n\nconst Message = ({\n  type,\n  header,\n  body,\n  children,\n  height,\n  className,\n  onDismissClick\n}) => {\n  const mapTypeToIcon = {\n    success: \"✔\",\n    error: \"✖\",\n    info: \"ℹ︎\"\n  };\n  const icon = mapTypeToIcon[type] ? mapTypeToIcon[type] : mapTypeToIcon.error;\n\n  if (className) {\n    className = \" \" + className;\n  } else {\n    className = \"\";\n  }\n\n  return (\n    <div\n      className={\"message-ct message-\" + type + className}\n      style={{ height: height }}\n    >\n      <div className=\"message-icon\" style={{ lineHeight: height }}>\n        {icon}\n      </div>\n      <div className=\"message-text\" style={{ flexGrow: \"1\" }}>\n        {header ? <div className=\"message-header\">{header}</div> : null}\n        <div className=\"message-body\">\n          {body ? (\n            <span style={{ whiteSpace: \"pre-wrap\" }}>\n              {body instanceof Error ? body.message : body}\n            </span>\n          ) : null}\n          {children ? children : null}\n        </div>\n      </div>\n      {onDismissClick && (\n        <span style={{ padding: \"10px\" }}>\n          <span\n            style={{\n              cursor: \"pointer\",\n              fontSize: \"15px\"\n            }}\n            onClick={onDismissClick}\n          >\n            ✖\n          </span>\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Message;\n","import { reducer } from \"redux-form\";\nimport * as act from \"../actions/types\";\n\nconst formReducer = reducer.plugin({\n  \"form/record\": (state, action) => {\n    switch (action.type) {\n      case act.RECEIVE_NEW_PROPOSAL:\n        if (action.error) {\n          return state;\n        }\n        return undefined;\n      case act.RECEIVE_NEW_INVOICE:\n        return action.error ? state : undefined;\n      case act.RECEIVE_EDIT_PROPOSAL:\n        if (action.error) {\n          return state;\n        }\n        return undefined;\n      case act.SAVE_DRAFT_PROPOSAL:\n        return state;\n      case act.SAVE_DRAFT_INVOICE:\n        return state;\n      default:\n        return state;\n    }\n  },\n  \"form/reply\": (state, action) => {\n    switch (action.type) {\n      case act.RECEIVE_NEW_COMMENT:\n        return undefined;\n      default:\n        return state;\n    }\n  },\n  \"form/change-username\": (state, action) => {\n    switch (action.type) {\n      case act.RECEIVE_CHANGE_USERNAME:\n        return !action.error ? undefined : state;\n      default:\n        return state;\n    }\n  },\n  \"form/change-password\": (state, action) => {\n    switch (action.type) {\n      case act.RECEIVE_CHANGE_PASSWORD:\n        return !action.error ? undefined : state;\n      default:\n        return state;\n    }\n  }\n});\n\nexport default formReducer;\n","import * as act from \"../actions/types\";\nimport { TOP_LEVEL_COMMENT_PARENTID } from \"../lib/api\";\nimport { getCurrentYear } from \"../helpers\";\nimport {\n  PROPOSAL_STATUS_UNREVIEWED,\n  PROPOSAL_FILTER_ALL,\n  PAYWALL_STATUS_PAID,\n  PROPOSAL_USER_FILTER_SUBMITTED,\n  SORT_BY_TOP,\n  FILTER_ALL_MONTHS\n} from \"../constants\";\n\nexport const DEFAULT_STATE = {\n  isShowingSignupConfirmation: false,\n  replyParent: TOP_LEVEL_COMMENT_PARENTID,\n  newProposal: {\n    name: \"\",\n    description: \"\"\n  },\n  replyThreadTree: {},\n  adminProposalsShow: PROPOSAL_STATUS_UNREVIEWED,\n  publicProposalsShow: PROPOSAL_FILTER_ALL,\n  userProposalsShow: PROPOSAL_USER_FILTER_SUBMITTED,\n  proposalCredits: 0,\n  recentPayments: [],\n  submittedProposals: {},\n  draftProposals: null,\n  identityImportResult: { errorMsg: \"\", successMsg: \"\" },\n  onboardViewed: false,\n  commentsSortOption: { value: SORT_BY_TOP, label: SORT_BY_TOP },\n  pollingCreditsPayment: false,\n  redirectedFrom: null,\n  invoiceSortOption: { month: FILTER_ALL_MONTHS, year: getCurrentYear() },\n  draftInvoices: null\n};\n\nconst app = (state = DEFAULT_STATE, action) =>\n  (({\n    [act.SET_REPLY_PARENT]: () => ({\n      ...state,\n      replyParent: action.payload || TOP_LEVEL_COMMENT_PARENTID\n    }),\n    [act.RECEIVE_NEW_PROPOSAL]: () =>\n      action.error\n        ? state\n        : {\n            ...state,\n            submittedProposals: {\n              ...state.submittedProposals,\n              lastSubmitted: action.payload.censorshiprecord.token,\n              [action.payload.censorshiprecord.token]: action.payload\n            }\n          },\n    [act.RECEIVE_NEW_THREAD_COMMENT]: () => {\n      const {\n        id,\n        comment: { parentid, commentid }\n      } = action.payload;\n      const tree = state.replyThreadTree[id];\n      if (tree) {\n        const parentBranch = tree[parentid];\n        const updatedParentBranch = parentBranch\n          ? [...parentBranch, commentid]\n          : [commentid];\n        return {\n          ...state,\n          replyThreadTree: {\n            ...state.replyThreadTree,\n            [id]: {\n              ...state.replyThreadTree[id],\n              [parentid]: updatedParentBranch\n            }\n          }\n        };\n      }\n      return {\n        ...state,\n        replyThreadTree: {\n          ...state.replyThreadTree,\n          [id]: {\n            ...state.replyThreadTree[id],\n            [parentid]: [commentid]\n          }\n        }\n      };\n    },\n    [act.SAVE_DRAFT_PROPOSAL]: () => {\n      const newDraftProposals = state.draftProposals;\n      const draftId = action.payload.id;\n      return {\n        ...state,\n        draftProposals: {\n          ...newDraftProposals,\n          newDraft: true,\n          lastSubmitted: action.payload.name,\n          [draftId]: {\n            ...action.payload,\n            draftId\n          }\n        }\n      };\n    },\n    [act.DELETE_DRAFT_PROPOSAL]: () => {\n      const draftId = action.payload;\n      if (!state.draftProposals[draftId]) {\n        return state;\n      }\n      const newDraftProposals = state.draftProposals;\n      delete newDraftProposals[draftId];\n      return { ...state, draftProposals: newDraftProposals };\n    },\n    [act.LOAD_DRAFT_PROPOSALS]: () => ({\n      ...state,\n      draftProposals: action.payload\n    }),\n\n    [act.SAVE_DRAFT_INVOICE]: () => {\n      const newDraftInvoices = state.draftInvoices;\n      const draftId = action.payload.id;\n      return {\n        ...state,\n        draftInvoices: {\n          ...newDraftInvoices,\n          newDraft: true,\n          lastSubmitted: action.payload.name,\n          [draftId]: {\n            ...action.payload,\n            draftId\n          }\n        }\n      };\n    },\n    [act.DELETE_DRAFT_INVOICE]: () => {\n      const draftId = action.payload;\n      if (!state.draftInvoices[draftId]) {\n        return state;\n      }\n      const newDraftInvoices = state.draftInvoices;\n      delete newDraftInvoices[draftId];\n      return { ...state, draftInvoices: newDraftInvoices };\n    },\n    [act.LOAD_DRAFT_INVOICES]: () => ({\n      ...state,\n      draftInvoices: action.payload\n    }),\n    [act.REQUEST_SETSTATUS_PROPOSAL]: () => {\n      if (action.error) return state;\n      const { status, token } = action.payload;\n      if (!(token in state.submittedProposals)) return state;\n      else {\n        return {\n          ...state,\n          submittedProposals: {\n            ...state.submittedProposals,\n            [token]: {\n              ...state.submittedProposals[token],\n              status\n            }\n          }\n        };\n      }\n    },\n    [act.RESET_LAST_SUBMITTED]: () => ({\n      ...state,\n      submittedProposals: { ...state.submittedProposals, lastSubmitted: false }\n    }),\n    [act.SET_PROPOSAL_APPROVED]: () => ({\n      ...state,\n      isProposalStatusApproved: action.payload\n    }),\n    [act.SET_VOTES_END_HEIGHT]: () => ({\n      ...state,\n      votesEndHeight: {\n        ...state.votesEndHeight,\n        [action.payload.token]: action.payload.endheight\n      }\n    }),\n    [act.REQUEST_SIGNUP_CONFIRMATION]: () => ({\n      ...state,\n      isShowingSignupConfirmation: true\n    }),\n    [act.RESET_SIGNUP_CONFIRMATION]: () => ({\n      ...state,\n      isShowingSignupConfirmation: false\n    }),\n    [act.CHANGE_ADMIN_FILTER_VALUE]: () => ({\n      ...state,\n      adminProposalsShow: action.payload\n    }),\n    [act.CHANGE_PUBLIC_FILTER_VALUE]: () => ({\n      ...state,\n      publicProposalsShow: action.payload\n    }),\n    [act.CHANGE_USER_FILTER_VALUE]: () => ({\n      ...state,\n      userProposalsShow: action.payload\n    }),\n    [act.CHANGE_DATE_FILTER]: () => ({\n      ...state,\n      invoiceSortOption: action.payload\n    }),\n    [act.RESET_DATE_FILTER]: () => ({\n      ...state,\n      invoiceSortOption: {\n        ...state.invoiceSortOption,\n        month: FILTER_ALL_MONTHS,\n        year: getCurrentYear()\n      }\n    }),\n    [act.RESET_PAYWALL_INFO]: () => ({ ...state, userAlreadyPaid: null }),\n    [act.UPDATE_USER_PAYWALL_STATUS]: () => ({\n      ...state,\n      userPaywallStatus: action.payload.status,\n      userPaywallTxid: action.payload.txid,\n      userAlreadyPaid: action.payload.status === PAYWALL_STATUS_PAID,\n      userPaywallConfirmations: action.payload.currentNumberOfConfirmations\n    }),\n    [act.SET_PROPOSAL_CREDITS]: () => ({\n      ...state,\n      proposalCredits: action.payload || 0\n    }),\n    [act.SUBTRACT_PROPOSAL_CREDITS]: () => ({\n      ...state,\n      proposalCredits: state.proposalCredits - (action.payload || 0)\n    }),\n    [act.LOAD_ME]: () => {\n      const proposalCredits = action.payload.response.proposalcredits;\n      return {\n        ...state,\n        proposalCredits: proposalCredits || state.proposalCredits\n      };\n    },\n    [act.ADD_PROPOSAL_CREDITS]: () => ({\n      ...state,\n      recentPayments: state.recentPayments\n        ? !state.recentPayments.find(el => el.txid === action.payload.txid)\n          ? [\n              ...state.recentPayments,\n              {\n                txid: action.payload.txid,\n                amount: action.payload.amount\n              }\n            ]\n          : [...state.recentPayments]\n        : [\n            {\n              txid: action.payload.txid,\n              amount: action.payload.amount\n            }\n          ],\n      proposalCredits: state.proposalCredits + (action.payload.amount || 0)\n    }),\n    [act.CSRF_NEEDED]: () => ({ ...state, csrfIsNeeded: action.payload }),\n    [act.SHOULD_AUTO_VERIFY_KEY]: () => ({\n      ...state,\n      shouldVerifyKey: action.payload\n    }),\n    [act.IDENTITY_IMPORTED]: () => ({\n      ...state,\n      identityImportResult: action.payload\n    }),\n    [act.SET_ONBOARD_AS_VIEWED]: () => ({ ...state, onboardViewed: true }),\n    [act.SET_COMMENTS_SORT_OPTION]: () => ({\n      ...state,\n      commentsSortOption: action.payload\n    }),\n    [act.TOGGLE_CREDITS_PAYMENT_POLLING]: () => ({\n      ...state,\n      pollingCreditsPayment: action.payload\n    }),\n    [act.TOGGLE_PROPOSAL_PAYMENT_RECEIVED]: () => ({\n      ...state,\n      proposalPaymentReceived: action.payload\n    }),\n    [act.REDIRECTED_FROM]: () => ({ ...state, redirectedFrom: action.payload }),\n    [act.RESET_REDIRECTED_FROM]: () => ({ ...state, redirectedFrom: null }),\n    [act.RECEIVE_LOGOUT]: () => DEFAULT_STATE\n  }[action.type] || (() => state))());\n\nexport default app;\n","export const DEFAULT_REQUEST_STATE = {\n  isRequesting: false,\n  response: null,\n  error: null\n};\n\nexport const request = (key, state, { payload, error }) => ({\n  ...state,\n  [key]: {\n    ...state[key],\n    payload: error ? null : payload,\n    isRequesting: error ? false : true,\n    response: state[key] ? state[key].response : null,\n    error: error ? payload : null\n  }\n});\n\nexport const receive = (key, state, { payload, error }) => ({\n  ...state,\n  [key]: {\n    ...state[key],\n    isRequesting: false,\n    response: error ? null : payload,\n    error: error ? payload : null\n  }\n});\n\nexport const reset = (key, state) => ({\n  ...state,\n  [key]: DEFAULT_REQUEST_STATE\n});\n\nexport const resetMultiple = (keys, state) =>\n  keys.reduce((acc, key) => ({ ...acc, [key]: DEFAULT_REQUEST_STATE }), state);\n","import get from \"lodash/fp/get\";\nimport map from \"lodash/fp/map\";\nimport unionWith from \"lodash/unionWith\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport { receive } from \"../util\";\nimport {\n  PROPOSAL_STATUS_UNREVIEWED,\n  PROPOSAL_STATUS_CENSORED,\n  PROPOSAL_STATUS_UNREVIEWED_CHANGES,\n  PROPOSAL_STATUS_PUBLIC,\n  PROPOSAL_STATUS_ABANDONED,\n  MANAGE_USER_EXPIRE_NEW_USER_VERIFICATION,\n  MANAGE_USER_EXPIRE_UPDATE_KEY_VERIFICATION,\n  MANAGE_USER_EXPIRE_RESET_PASSWORD_VERIFICATION,\n  MANAGE_USER_CLEAR_USER_PAYWALL,\n  MANAGE_USER_UNLOCK,\n  MANAGE_USER_DEACTIVATE,\n  MANAGE_USER_REACTIVATE\n} from \"../../constants\";\n\nexport const onReceiveSetStatus = (state, action) => {\n  state = receive(\"setStatusProposal\", state, action);\n  if (action.error) return state;\n\n  const getProposalToken = prop => get([\"censorshiprecord\", \"token\"], prop);\n\n  const updatedProposal = {\n    ...action.payload.proposal,\n    files: get([\"proposal\", \"response\", \"proposal\", \"files\"], state) || [],\n    username: get([\"proposal\", \"response\", \"proposal\", \"username\"], state) || \"\"\n  };\n\n  const viewedProposal = get([\"proposal\", \"response\", \"proposal\"], state);\n\n  const updateProposalStatus = proposal =>\n    getProposalToken(updatedProposal) === getProposalToken(proposal)\n      ? updatedProposal\n      : proposal;\n\n  let unvettedProps = get([\"unvetted\", \"response\", \"proposals\"], state) || [];\n  let vettedProps = get([\"vetted\", \"response\", \"proposals\"], state) || [];\n\n  if (updatedProposal.status === PROPOSAL_STATUS_PUBLIC) {\n    // remove from unvetted list\n    unvettedProps = unvettedProps.filter(\n      proposal =>\n        getProposalToken(updatedProposal) !== getProposalToken(proposal)\n    );\n    // add to vetted list\n    vettedProps = [updatedProposal].concat(vettedProps);\n  } else if (updatedProposal.status === PROPOSAL_STATUS_ABANDONED) {\n    // if status is set to abandoned keep it in the vetted list\n    // and update the status\n    vettedProps = map(updateProposalStatus, vettedProps);\n  } else {\n    unvettedProps = map(updateProposalStatus, unvettedProps);\n  }\n\n  return {\n    ...state,\n    proposal: viewedProposal\n      ? {\n          ...state.proposal,\n          response: {\n            ...state.proposal.response,\n            proposal: updatedProposal\n          }\n        }\n      : state.proposal,\n    unvetted: {\n      ...state.unvetted,\n      response: {\n        ...state.unvetted.response,\n        proposals: unvettedProps\n      }\n    },\n    vetted: {\n      ...state.vetted,\n      response: {\n        ...state.vetted.response,\n        proposals: vettedProps\n      }\n    }\n  };\n};\n\nexport const onReceiveCensoredComment = (state, action) => {\n  state = receive(\"censorComment\", state, action);\n  if (action.error) return state;\n\n  return {\n    ...state,\n    proposalComments: {\n      ...state.proposalComments,\n      response: {\n        ...state.proposalComments.response,\n        comments: state.proposalComments.response.comments.map(c => {\n          return c.commentid === action.payload\n            ? { ...c, comment: \"\", censored: true }\n            : c;\n        })\n      }\n    }\n  };\n};\n\nexport const onReceiveNewComment = (state, action) => {\n  state = receive(\"newComment\", state, action);\n  if (action.error) return state;\n  return {\n    ...state,\n    proposalComments: {\n      ...state.proposalComments,\n      response: {\n        ...state.proposalComments.response,\n        comments: [\n          ...((state.proposalComments.response &&\n            state.proposalComments.response.comments) ||\n            []),\n          {\n            ...state.newComment.payload,\n            token: state.proposal.payload,\n            userid: state.newComment.response.userid,\n            username: state.me.response.username,\n            isadmin: state.me.response.isadmin,\n            totalvotes: 0,\n            resultvotes: 0,\n            commentid: state.newComment.response.commentid,\n            timestamp: Date.now() / 1000\n          }\n        ]\n      }\n    }\n  };\n};\n\nexport const onResetSyncLikeComment = state => {\n  const { backup: commentsLikesBackup } = state.commentslikes;\n  const { backup: proposalCommentsBackup } = state.proposalComments;\n  return {\n    ...state,\n    commentslikes: {\n      ...state.commentslikes,\n      backup: null,\n      response: {\n        commentslikes: commentsLikesBackup\n      }\n    },\n    proposalComments: {\n      ...state.proposalComments,\n      backup: null,\n      response: {\n        ...state.proposalComments.response,\n        comments: proposalCommentsBackup\n      }\n    }\n  };\n};\n\nexport const onReceiveProposalVoteResults = (key, state, action) => {\n  state = receive(key, state, action);\n  if (action.error) return state;\n\n  const hashmap = state.proposalVoteResults.response.castvotes.reduce(\n    (map, obj) => {\n      map[obj.ticket] = obj;\n      return map;\n    },\n    {}\n  );\n\n  return {\n    ...state,\n    proposalVoteResults: {\n      ...state.proposalVoteResults,\n      response: {\n        ...state.proposalVoteResults.response,\n        castvotes: hashmap\n      }\n    }\n  };\n};\n\nexport const onReceiveSyncLikeComment = (state, action) => {\n  const { token, action: cAction, commentid } = action.payload;\n  const newAction = parseInt(cAction, 10);\n\n  const commentslikes =\n    state.commentslikes.response && state.commentslikes.response.commentslikes;\n  const backupCV = cloneDeep(commentslikes);\n  const comments =\n    state.proposalComments.response && state.proposalComments.response.comments;\n\n  let reducedVotes = null;\n  const cvfound =\n    commentslikes &&\n    commentslikes.find(cv => cv.commentid === commentid && cv.token === token);\n\n  if (cvfound) {\n    reducedVotes = commentslikes.reduce(\n      (acc, cv) => {\n        if (cv.commentid === commentid && cv.token === token) {\n          const currentAction = parseInt(cv.action, 10);\n          acc.oldAction = currentAction;\n          cv = {\n            ...cv,\n            action: newAction === currentAction ? 0 : newAction\n          };\n        }\n        return { ...acc, cvs: acc.cvs.concat([cv]) };\n      },\n      { cvs: [], oldAction: null }\n    );\n  } else {\n    const newCommentVote = { token, commentid, action: newAction };\n    reducedVotes = {\n      cvs: commentslikes\n        ? commentslikes.concat([newCommentVote])\n        : [newCommentVote],\n      oldAction: 0\n    };\n  }\n\n  const { cvs: newCommentsLikes, oldAction } = reducedVotes;\n\n  return {\n    ...state,\n    commentslikes: {\n      ...state.commentslikes,\n      backup: backupCV,\n      response: {\n        commentslikes: newCommentsLikes\n      }\n    },\n    proposalComments: {\n      ...state.proposalComments,\n      backup: comments,\n      response: {\n        ...state.proposalComments.response,\n        comments: state.proposalComments.response.comments.map(el =>\n          el.commentid === commentid\n            ? {\n                ...el,\n                totalvotes:\n                  el.totalvotes +\n                  (oldAction === newAction ? -1 : oldAction === 0 ? 1 : 0),\n                resultvotes:\n                  el.resultvotes +\n                  (oldAction === newAction ? -oldAction : newAction - oldAction)\n              }\n            : el\n        )\n      }\n    }\n  };\n};\n\nexport const onReceiveVoteStatusChange = (key, newStatus, state, action) => {\n  state = receive(key, state, action);\n  if (action.error) return state;\n\n  const newVoteStatus = {\n    token: state[key].payload.token,\n    status: newStatus,\n    optionsresult: null,\n    totalvotes: 0\n  };\n  return {\n    ...state,\n    proposalsVoteStatus: {\n      ...state.proposalsVoteStatus,\n      response: {\n        ...state.proposalsVoteStatus.response,\n        [newVoteStatus.token]: { ...newVoteStatus }\n      }\n    }\n  };\n};\n\nexport const receiveProposals = (key, proposals, state) => {\n  const isUnvetted = prop =>\n    prop.status === PROPOSAL_STATUS_UNREVIEWED ||\n    prop.status === PROPOSAL_STATUS_CENSORED ||\n    prop.status === PROPOSAL_STATUS_UNREVIEWED_CHANGES;\n\n  const lastLoaded =\n    proposals.length > 0 ? proposals[proposals.length - 1] : null;\n\n  const unvettedProps =\n    (state.unvetted.response && state.unvetted.response.proposals) || [];\n  const vettedProps =\n    (state.vetted.response && state.vetted.response.proposals) || [];\n  const incomingUnvettedProps = proposals.filter(isUnvetted);\n  const incomingVettedProps = proposals.filter(prop => !isUnvetted(prop));\n\n  return {\n    ...state,\n    lastLoaded: {\n      ...state.lastLoaded,\n      [key]: lastLoaded\n    },\n    vetted: {\n      ...state.vetted,\n      response: {\n        ...state.vetted.response,\n        proposals: unionWith(incomingVettedProps, vettedProps, (a, b) => {\n          return a.censorshiprecord.token === b.censorshiprecord.token;\n        })\n      }\n    },\n    unvetted: {\n      ...state.unvetted,\n      response: {\n        ...state.vetted.response,\n        proposals: unionWith(incomingUnvettedProps, unvettedProps, (a, b) => {\n          return a.censorshiprecord.token === b.censorshiprecord.token;\n        })\n      }\n    }\n  };\n};\n\nexport const onReceiveProposals = (key, state, { payload, error }) => {\n  const auxPayload = cloneDeep(payload);\n  if (auxPayload.proposals) {\n    delete auxPayload.proposals;\n  }\n\n  state = {\n    ...state,\n    [key]: {\n      ...state[key],\n      response: {\n        ...state[key].response,\n        ...auxPayload\n      },\n      isRequesting: false,\n      error: error ? payload : null\n    }\n  };\n\n  const proposals = payload.proposals || [];\n  return receiveProposals(key, proposals, state);\n};\n\nexport const onReceiveUser = (state, action) => {\n  state = receive(\"user\", state, action);\n  if (action.error) return state;\n\n  const userProps = action.payload.user.proposals || [];\n  return receiveProposals(\"user\", userProps, state);\n};\n\nexport const onReceiveRescanUserPayments = (state, action) => {\n  state = receive(\"rescanUserPayments\", state, action);\n  if (action.error) return state;\n\n  const creditsAdded = action.payload.newcredits.length;\n  const user = get([\"user\", \"response\", \"user\"], state) || {};\n  return {\n    ...state,\n    user: {\n      ...state.user,\n      response: {\n        ...state.user.response,\n        user: {\n          ...user,\n          proposalcredits: user.proposalcredits + creditsAdded\n        }\n      }\n    }\n  };\n};\n\nexport const onReceiveManageUser = (state, action) => {\n  state = receive(\"manageUser\", state, action);\n  if (action.error) return state;\n\n  const getExpiredTime = () => {\n    const oneHourInMilliseconds = 1000 * 60 * 60;\n    return (new Date().getTime() - 168 * oneHourInMilliseconds) / 1000; // -168 hours is 7 days in the past\n  };\n  const manageUserPayload = get([\"manageUser\", \"payload\"], state);\n  const user = get([\"user\", \"response\", \"user\"], state);\n  const { action: manageAction } = manageUserPayload;\n\n  switch (manageAction) {\n    case MANAGE_USER_EXPIRE_NEW_USER_VERIFICATION:\n      user.newuserverificationexpiry = getExpiredTime();\n      break;\n    case MANAGE_USER_EXPIRE_UPDATE_KEY_VERIFICATION:\n      user.updatekeyverificationexpiry = getExpiredTime();\n      break;\n    case MANAGE_USER_EXPIRE_RESET_PASSWORD_VERIFICATION:\n      user.resetpasswordverificationexpiry = getExpiredTime();\n      break;\n    case MANAGE_USER_CLEAR_USER_PAYWALL:\n      user.newuserpaywallamount = 0;\n      break;\n    case MANAGE_USER_UNLOCK:\n      user.islocked = false;\n      break;\n    case MANAGE_USER_DEACTIVATE:\n      user.isdeactivated = true;\n      break;\n    case MANAGE_USER_REACTIVATE:\n      user.isdeactivated = false;\n      break;\n    default:\n      break;\n  }\n  return {\n    ...state,\n    user: {\n      ...state.user,\n      response: {\n        ...state.user.response,\n        user: user\n      }\n    }\n  };\n};\n\nexport const onReceiveProposalsVoteStatus = (state, action) => {\n  const newState = receive(\"proposalsVoteStatus\", state, action);\n  if (action.error) return newState;\n\n  const proposalsVoteStatus = get([\"payload\", \"votesstatus\"], action) || [];\n\n  const data = proposalsVoteStatus.reduce(\n    (acc, value) => ({\n      ...acc,\n      [value.token]: { ...value }\n    }),\n    {}\n  );\n\n  return {\n    ...newState,\n    proposalsVoteStatus: {\n      ...newState.proposalsVoteStatus,\n      response: {\n        ...state.proposalsVoteStatus.response,\n        ...data\n      }\n    }\n  };\n};\n\nexport const onReceiveProposalVoteStatus = (state, action) => {\n  state = receive(\"proposalVoteStatus\", state, action);\n  if (action.error) return state;\n\n  const proposalsVoteStatus =\n    get([\"proposalsVoteStatus\", \"response\"], state) || {};\n\n  return {\n    ...state,\n    proposalsVoteStatus: {\n      ...state.proposalsVoteStatus,\n      response: {\n        ...proposalsVoteStatus,\n        [action.payload.token]: { ...action.payload }\n      }\n    }\n  };\n};\n","import cloneDeep from \"lodash/cloneDeep\";\nimport get from \"lodash/fp/get\";\nimport map from \"lodash/fp/map\";\nimport { receive, reset } from \"../util\";\n\nconst getInvoiceToken = invoice => get([\"censorshiprecord\", \"token\"], invoice);\n\nexport const onReceivePayApprovedInvoices = (state, action) => {\n  state = receive(\"payApproved\", state, action);\n  if (action.error) return state;\n  state = reset(\"payouts\", state);\n  return state;\n};\n\nexport const onReceiveSetStatusInvoice = (state, action) => {\n  state = receive(\"setStatusInvoice\", state, action);\n  if (action.error) return state;\n\n  const invoiceFromState = get([\"invoice\", \"response\", \"invoice\"], state);\n\n  const updatedInvoiceToken = get(\n    [\"setStatusInvoice\", \"payload\", \"token\"],\n    state\n  );\n  const updatedInvoiceStatus = get([\"payload\", \"invoice\", \"status\"], action);\n\n  const updateInvoiceStatus = invoice =>\n    updatedInvoiceToken === getInvoiceToken(invoice)\n      ? cloneDeep({ ...invoice, status: updatedInvoiceStatus })\n      : invoice;\n\n  // update user invoices list\n  const userInvoices =\n    get([\"userInvoices\", \"response\", \"invoices\"], state) || [];\n  const updatedUserInvoices = map(updateInvoiceStatus, userInvoices);\n\n  // update admin invoices list\n  const adminInvoices =\n    get([\"adminInvoices\", \"response\", \"invoices\"], state) || [];\n  const updatedAdminInvoices = map(updateInvoiceStatus, adminInvoices);\n\n  return {\n    ...state,\n    userInvoices: {\n      ...state.userInvoices,\n      response: {\n        ...state.userInvoices.resopnse,\n        invoices: updatedUserInvoices\n      }\n    },\n    adminInvoices: {\n      ...state.adminInvoices,\n      response: {\n        ...state.adminInvoices.response,\n        invoices: updatedAdminInvoices\n      }\n    },\n    invoice: {\n      ...state.invoice,\n      response: {\n        ...state.invoice.response,\n        invoice: cloneDeep({\n          ...invoiceFromState,\n          status: updatedInvoiceStatus\n        })\n      }\n    }\n  };\n};\n\nexport const onReceiveNewInvoiceComment = (state, action) => {\n  state = receive(\"newComment\", state, action);\n  if (action.error) return state;\n  return {\n    ...state,\n    invoiceComments: {\n      ...state.invoiceComments,\n      response: {\n        ...state.invoiceComments.response,\n        comments: [\n          ...state.invoiceComments.response.comments,\n          {\n            ...state.newComment.payload,\n            token: state.invoice.poyload,\n            userid: state.newComment.response.userid,\n            username: state.me.response.username,\n            isadmin: state.me.response.isadmin,\n            totalvotes: 0,\n            resultvotes: 0,\n            commentid: state.newComment.response.commentid,\n            timestamp: Date.now() / 1000\n          }\n        ]\n      }\n    }\n  };\n};\n\nexport const onReceiveCensorInvoiceComment = (state, action) => {\n  state = receive(\"censorComment\", state, action);\n  if (action.error) return state;\n  return {\n    ...state,\n    invoiceComments: {\n      ...state.invoiceComments,\n      response: {\n        ...state.invoiceComments.response,\n        comments: state.invoiceComments.response.comments.map(c => {\n          return c.commentid === action.payload\n            ? { ...c, comment: \"\", censored: true }\n            : c;\n        })\n      }\n    }\n  };\n};\n","import * as act from \"../../actions/types\";\nimport {\n  DEFAULT_REQUEST_STATE,\n  request,\n  receive,\n  reset,\n  resetMultiple\n} from \"../util\";\nimport {\n  PROPOSAL_VOTING_ACTIVE,\n  PROPOSAL_VOTING_AUTHORIZED,\n  PROPOSAL_VOTING_NOT_AUTHORIZED\n} from \"../../constants\";\nimport {\n  onReceiveCensoredComment,\n  onReceiveNewComment,\n  onReceiveSetStatus,\n  onReceiveProposals,\n  onReceiveSyncLikeComment,\n  onResetSyncLikeComment,\n  onReceiveUser,\n  onReceiveVoteStatusChange,\n  onReceiveRescanUserPayments,\n  onReceiveProposalVoteResults,\n  onReceiveManageUser,\n  onReceiveProposalVoteStatus,\n  onReceiveProposalsVoteStatus\n} from \"./handlers\";\nimport {\n  onReceivePayApprovedInvoices,\n  onReceiveSetStatusInvoice,\n  onReceiveNewInvoiceComment,\n  onReceiveCensorInvoiceComment\n} from \"./handlersCMS\";\n\nexport const DEFAULT_STATE = {\n  me: DEFAULT_REQUEST_STATE,\n  init: DEFAULT_REQUEST_STATE,\n  policy: DEFAULT_REQUEST_STATE,\n  newUser: DEFAULT_REQUEST_STATE,\n  verifyNewUser: DEFAULT_REQUEST_STATE,\n  login: DEFAULT_REQUEST_STATE,\n  logout: DEFAULT_REQUEST_STATE,\n  vetted: DEFAULT_REQUEST_STATE,\n  unvetted: DEFAULT_REQUEST_STATE,\n  censorComment: DEFAULT_REQUEST_STATE,\n  proposal: DEFAULT_REQUEST_STATE,\n  invoice: DEFAULT_REQUEST_STATE,\n  userInvoices: DEFAULT_REQUEST_STATE,\n  adminInvoices: DEFAULT_REQUEST_STATE,\n  proposalComments: DEFAULT_REQUEST_STATE,\n  invoiceComments: DEFAULT_REQUEST_STATE,\n  proposalsVoteStatus: DEFAULT_REQUEST_STATE,\n  proposalVoteStatus: DEFAULT_REQUEST_STATE,\n  commentslikes: DEFAULT_REQUEST_STATE,\n  userProposals: DEFAULT_REQUEST_STATE,\n  newProposal: DEFAULT_REQUEST_STATE,\n  editProposal: DEFAULT_REQUEST_STATE,\n  newComment: DEFAULT_REQUEST_STATE,\n  forgottenPassword: DEFAULT_REQUEST_STATE,\n  passwordReset: DEFAULT_REQUEST_STATE,\n  changeUsername: DEFAULT_REQUEST_STATE,\n  changePassword: DEFAULT_REQUEST_STATE,\n  updateUserKey: DEFAULT_REQUEST_STATE,\n  verifyUserKey: DEFAULT_REQUEST_STATE,\n  likeComment: DEFAULT_REQUEST_STATE,\n  unvettedStatus: DEFAULT_REQUEST_STATE,\n  proposalPaywallPayment: DEFAULT_REQUEST_STATE,\n  rescanUserPayments: DEFAULT_REQUEST_STATE,\n  userSearch: DEFAULT_REQUEST_STATE,\n  user: DEFAULT_REQUEST_STATE,\n  proposalPaywallDetails: DEFAULT_REQUEST_STATE,\n  email: \"\",\n  keyMismatch: false,\n  lastLoaded: {},\n  newInvoice: DEFAULT_REQUEST_STATE,\n  editInvoice: DEFAULT_REQUEST_STATE,\n  payouts: DEFAULT_REQUEST_STATE,\n  tokenInventory: DEFAULT_REQUEST_STATE\n};\n\nconst api = (state = DEFAULT_STATE, action) =>\n  (({\n    [act.SET_EMAIL]: () => ({ ...state, email: action.payload }),\n    [act.CLEAN_ERRORS]: () =>\n      Object.keys(state).reduce((acc, curr) => {\n        if (typeof state[curr] === \"object\") {\n          acc[curr] = Object.assign({}, state[curr], { error: null });\n        } else {\n          acc[curr] = state[curr];\n        }\n        return acc;\n      }, {}),\n    [act.LOAD_ME]: () => {\n      return {\n        ...state,\n        me: action.payload\n      };\n    },\n    [act.REQUEST_ME]: () => request(\"me\", state, action),\n    [act.RECEIVE_ME]: () => receive(\"me\", state, action),\n    [act.UPDATE_ME]: () => receive(\"me\", state, action),\n    [act.REQUEST_INIT_SESSION]: () => request(\"init\", state, action),\n    [act.RECEIVE_INIT_SESSION]: () => receive(\"init\", state, action),\n    [act.REQUEST_POLICY]: () => request(\"policy\", state, action),\n    [act.RECEIVE_POLICY]: () => receive(\"policy\", state, action),\n    [act.REQUEST_NEW_USER]: () => request(\"newUser\", state, action),\n    [act.RECEIVE_NEW_USER]: () => receive(\"newUser\", state, action),\n    [act.RESET_NEW_USER]: () => reset(\"newUser\", state),\n    [act.REQUEST_VERIFY_NEW_USER]: () =>\n      request(\"verifyNewUser\", state, action),\n    [act.RECEIVE_VERIFY_NEW_USER]: () =>\n      receive(\"verifyNewUser\", state, action),\n    [act.REQUEST_USER]: () => request(\"user\", state, action),\n    [act.RECEIVE_USER]: () => onReceiveUser(state, action),\n    [act.RESET_USER]: () => reset(\"user\", state, action),\n    [act.REQUEST_LOGIN]: () => request(\"login\", state, action),\n    [act.RECEIVE_LOGIN]: () => receive(\"login\", state, action),\n    [act.REQUEST_CHANGE_USERNAME]: () =>\n      request(\"changeUsername\", state, action),\n    [act.RECEIVE_CHANGE_USERNAME]: () =>\n      receive(\"changeUsername\", state, action),\n    [act.REQUEST_CHANGE_PASSWORD]: () =>\n      request(\"changePassword\", state, action),\n    [act.RECEIVE_CHANGE_PASSWORD]: () =>\n      receive(\"changePassword\", state, action),\n    [act.REQUEST_USER_PROPOSALS]: () => request(\"userProposals\", state, action),\n    [act.RECEIVE_USER_PROPOSALS]: () =>\n      onReceiveProposals(\"userProposals\", state, action),\n    [act.REQUEST_TOKEN_INVENTORY]: () =>\n      request(\"tokenInventory\", state, action),\n    [act.RECEIVE_TOKEN_INVENTORY]: () =>\n      receive(\"tokenInventory\", state, action),\n    [act.REQUEST_VETTED]: () => request(\"vetted\", state, action),\n    [act.RECEIVE_VETTED]: () => onReceiveProposals(\"vetted\", state, action),\n    [act.REQUEST_UNVETTED]: () => request(\"unvetted\", state, action),\n    [act.RECEIVE_UNVETTED]: () => onReceiveProposals(\"unvetted\", state, action),\n    [act.REQUEST_UNVETTED_STATUS]: () =>\n      request(\"unvettedStatus\", state, action),\n    [act.RECEIVE_UNVETTED_STATUS]: () =>\n      receive(\"unvettedStatus\", state, action),\n    [act.REQUEST_PROPOSAL]: () => request(\"proposal\", state, action),\n    [act.RECEIVE_PROPOSAL]: () => receive(\"proposal\", state, action),\n    [act.REQUEST_PROPOSAL_COMMENTS]: () =>\n      request(\"proposalComments\", state, action),\n    [act.RECEIVE_PROPOSAL_COMMENTS]: () =>\n      receive(\"proposalComments\", state, action),\n\n    [act.REQUEST_LIKE_COMMENT]: () => request(\"likeComment\", state, action),\n    [act.RECEIVE_LIKE_COMMENT]: () => receive(\"likeComment\", state, action),\n    [act.REQUEST_CENSOR_COMMENT]: () => request(\"censorComment\", state, action),\n    [act.RECEIVE_CENSOR_COMMENT]: () => onReceiveCensoredComment(state, action),\n    [act.RECEIVE_SYNC_LIKE_COMMENT]: () =>\n      onReceiveSyncLikeComment(state, action),\n    [act.RESET_SYNC_LIKE_COMMENT]: () => onResetSyncLikeComment(state),\n    [act.REQUEST_LIKED_COMMENTS]: () => request(\"commentslikes\", state, action),\n    [act.RECEIVE_LIKED_COMMENTS]: () => receive(\"commentslikes\", state, action),\n    [act.REQUEST_EDIT_USER]: () => request(\"editUser\", state, action),\n    [act.RECEIVE_EDIT_USER]: () => receive(\"editUser\", state, action),\n    [act.RECEIVE_EDIT_USER]: () => receive(\"editUser\", state, action),\n    [act.RESET_EDIT_USER]: () => reset(\"editUser\", state, action),\n    [act.REQUEST_MANAGE_USER]: () => request(\"manageUser\", state, action),\n    [act.RECEIVE_MANAGE_USER]: () => onReceiveManageUser(state, action),\n    [act.REQUEST_NEW_PROPOSAL]: () => request(\"newProposal\", state, action),\n    [act.RECEIVE_NEW_PROPOSAL]: () => receive(\"newProposal\", state, action),\n    [act.REQUEST_USER_SEARCH]: () => request(\"userSearch\", state, action),\n    [act.RECEIVE_USER_SEARCH]: () => receive(\"userSearch\", state, action),\n    [act.REQUEST_EDIT_PROPOSAL]: () => request(\"editProposal\", state, action),\n    [act.RECEIVE_EDIT_PROPOSAL]: () => receive(\"editProposal\", state, action),\n    [act.REQUEST_NEW_COMMENT]: () => request(\"newComment\", state, action),\n    [act.RECEIVE_NEW_COMMENT]: () => onReceiveNewComment(state, action),\n    // == CMS START ==\n    [act.REQUEST_INVITE_USER]: () => request(\"inviteUser\", state, action),\n    [act.RECEIVE_INVITE_USER]: () => receive(\"inviteUser\", state, action),\n    [act.RESET_INVITE_USER]: () => reset(\"inviteUser\", state, action),\n    [act.REQUEST_NEW_INVOICE]: () => request(\"newInvoice\", state, action),\n    [act.RECEIVE_NEW_INVOICE]: () => receive(\"newInvoice\", state, action),\n    [act.REQUEST_USER_INVOICES]: () => request(\"userInvoices\", state, action),\n    [act.RECEIVE_USER_INVOICES]: () => receive(\"userInvoices\", state, action),\n    [act.REQUEST_ADMIN_INVOICES]: () => request(\"adminInvoices\", state, action),\n    [act.RECEIVE_ADMIN_INVOICES]: () => receive(\"adminInvoices\", state, action),\n    [act.REQUEST_INVOICE]: () => request(\"invoice\", state, action),\n    [act.RECEIVE_INVOICE]: () => receive(\"invoice\", state, action),\n    [act.REQUEST_INVOICE_COMMENTS]: () =>\n      request(\"invoiceComments\", state, action),\n    [act.RECEIVE_INVOICE_COMMENTS]: () =>\n      receive(\"invoiceComments\", state, action),\n    [act.RECEIVE_NEW_INVOICE_COMMENT]: () =>\n      onReceiveNewInvoiceComment(state, action),\n    [act.RECEIVE_CENSOR_INVOICE_COMMENT]: () =>\n      onReceiveCensorInvoiceComment(state, action),\n    [act.REQUEST_SETSTATUS_INVOICE]: () =>\n      request(\"setStatusInvoice\", state, action),\n    [act.RECEIVE_SETSTATUS_INVOICE]: () =>\n      onReceiveSetStatusInvoice(state, action),\n    [act.REQUEST_EDIT_INVOICE]: () => request(\"editInvoice\", state, action),\n    [act.RECEIVE_EDIT_INVOICE]: () => receive(\"editInvoice\", state, action),\n    [act.REQUEST_EXCHANGE_RATE]: () => request(\"exchangeRate\", state, action),\n    [act.RECEIVE_EXCHANGE_RATE]: () => receive(\"exchangeRate\", state, action),\n    [act.RESET_COMMENTS]: () =>\n      resetMultiple([\"proposalComments\", \"invoiceComments\"], state),\n    // === CMS END ===\n    [act.REQUEST_PROPOSAL_PAYWALL_DETAILS]: () =>\n      request(\"proposalPaywallDetails\", state, action),\n    [act.RECEIVE_PROPOSAL_PAYWALL_DETAILS]: () =>\n      receive(\"proposalPaywallDetails\", state, action),\n    [act.REQUEST_UPDATE_PROPOSAL_CREDITS]: () =>\n      request(\"updateProposalCredits\", state, action),\n    [act.RECEIVE_UPDATE_PROPOSAL_CREDITS]: () =>\n      receive(\"updateProposalCredits\", state, action),\n    [act.REQUEST_USER_PROPOSAL_CREDITS]: () =>\n      request(\"userProposalCredits\", state, action),\n    [act.RECEIVE_USER_PROPOSAL_CREDITS]: () =>\n      receive(\"userProposalCredits\", state, action),\n    [act.REQUEST_FORGOTTEN_PASSWORD_REQUEST]: () =>\n      request(\"forgottenPassword\", state, action),\n    [act.RECEIVE_FORGOTTEN_PASSWORD_REQUEST]: () =>\n      receive(\"forgottenPassword\", state, action),\n    [act.RESET_FORGOTTEN_PASSWORD_REQUEST]: () =>\n      reset(\"forgottenPassword\", state),\n    [act.REQUEST_RESET_PASSWORD]: () => request(\"resetPassword\", state, action),\n    [act.RECEIVE_RESET_PASSWORD]: () => receive(\"resetPassword\", state, action),\n    [act.REQUEST_VERIFY_RESET_PASSWORD]: () =>\n      request(\"verifyResetPassword\", state, action),\n    [act.RECEIVE_VERIFY_RESET_PASSWORD]: () =>\n      receive(\"verifyResetPassword\", state, action),\n    [act.RESET_RESET_PASSWORD]: () =>\n      resetMultiple([\"resetPassword\", \"verifyResetPassword\"], state),\n    [act.REQUEST_RESEND_VERIFICATION_EMAIL]: () =>\n      request(\"resendVerificationEmail\", state, action),\n    [act.RECEIVE_RESEND_VERIFICATION_EMAIL]: () =>\n      receive(\"resendVerificationEmail\", state, action),\n    [act.RESET_RESEND_VERIFICATION_EMAIL]: () =>\n      reset(\"resendVerificationEmail\", state),\n    [act.REQUEST_PASSWORD_RESET_REQUEST]: () =>\n      request(\"passwordReset\", state, action),\n    [act.RECEIVE_PASSWORD_RESET_REQUEST]: () =>\n      receive(\"passwordReset\", state, action),\n    [act.RESET_PROPOSAL]: () =>\n      resetMultiple([\"newProposal\", \"editProposal\", \"proposal\"], state),\n    [act.RESET_INVOICE]: () =>\n      resetMultiple([\"newInvoice\", \"editInvoice\"], state),\n    [act.REQUEST_SETSTATUS_PROPOSAL]: () =>\n      request(\"setStatusProposal\", state, action),\n    [act.RECEIVE_SETSTATUS_PROPOSAL]: () => onReceiveSetStatus(state, action),\n    [act.RECEIVE_START_VOTE]: () =>\n      onReceiveVoteStatusChange(\n        \"startVote\",\n        PROPOSAL_VOTING_ACTIVE,\n        state,\n        action\n      ),\n    [act.REQUEST_START_VOTE]: () => request(\"startVote\", state, action),\n    [act.REQUEST_UPDATED_KEY]: () => request(\"updateUserKey\", state, action),\n    [act.RECEIVE_UPDATED_KEY]: () => receive(\"updateUserKey\", state, action),\n    [act.REQUEST_VERIFIED_KEY]: () => request(\"verifyUserKey\", state, action),\n    [act.RECEIVE_VERIFIED_KEY]: () => receive(\"verifyUserKey\", state, action),\n    [act.KEY_MISMATCH]: () => ({ ...state, keyMismatch: action.payload }),\n    [act.REQUEST_USERNAMES_BY_ID]: () =>\n      request(\"usernamesById\", state, action),\n    [act.RECEIVE_USERNAMES_BY_ID]: () =>\n      receive(\"usernamesById\", state, action),\n    [act.REQUEST_LOGOUT]: () => request(\"logout\", state, action),\n    [act.REQUEST_PROPOSALS_VOTE_STATUS]: () =>\n      request(\"proposalsVoteStatus\", state, action),\n    [act.RECEIVE_PROPOSALS_VOTE_STATUS]: () =>\n      onReceiveProposalsVoteStatus(state, action),\n    [act.REQUEST_PROPOSAL_VOTE_STATUS]: () =>\n      request(\"proposalVoteStatus\", state, action),\n    [act.RECEIVE_PROPOSAL_VOTE_STATUS]: () =>\n      onReceiveProposalVoteStatus(state, action),\n    [act.REQUEST_PROPOSAL_VOTE_RESULTS]: () =>\n      request(\"proposalVoteResults\", state, action),\n    [act.RECEIVE_PROPOSAL_VOTE_RESULTS]: () =>\n      onReceiveProposalVoteResults(\"proposalVoteResults\", state, action),\n    [act.REQUEST_AUTHORIZE_VOTE]: () => request(\"authorizeVote\", state, action),\n    [act.RECEIVE_AUTHORIZE_VOTE]: () =>\n      onReceiveVoteStatusChange(\n        \"authorizeVote\",\n        PROPOSAL_VOTING_AUTHORIZED,\n        state,\n        action\n      ),\n    [act.RECEIVE_REVOKE_AUTH_VOTE]: () =>\n      onReceiveVoteStatusChange(\n        \"authorizeVote\",\n        PROPOSAL_VOTING_NOT_AUTHORIZED,\n        state,\n        action\n      ),\n    [act.REQUEST_PROPOSAL_PAYWALL_PAYMENT]: () =>\n      request(\"proposalPaywallPayment\", state, action),\n    [act.RECEIVE_PROPOSAL_PAYWALL_PAYMENT]: () =>\n      receive(\"proposalPaywallPayment\", state, action),\n    [act.REQUEST_RESCAN_USER_PAYMENTS]: () =>\n      request(\"rescanUserPayments\", state, action),\n    [act.RECEIVE_RESCAN_USER_PAYMENTS]: () =>\n      onReceiveRescanUserPayments(state, action),\n    [act.RESET_RESCAN_USER_PAYMENTS]: () =>\n      reset(\"rescanUserPayments\", state, action),\n    [act.REQUEST_GENERATE_PAYOUTS]: () => request(\"payouts\", state, action),\n    [act.RECEIVE_GENERATE_PAYOUTS]: () => receive(\"payouts\", state, action),\n    [act.REQUEST_PAY_APPROVED]: () => request(\"payApproved\", state, action),\n    [act.RECEIVE_PAY_APPROVED]: () =>\n      onReceivePayApprovedInvoices(state, action),\n    [act.RECEIVE_LOGOUT]: () => {\n      if (!action.error) {\n        return {\n          ...state,\n          me: DEFAULT_REQUEST_STATE,\n          logout: DEFAULT_REQUEST_STATE,\n          login: DEFAULT_REQUEST_STATE,\n          verifyNewUser: DEFAULT_REQUEST_STATE,\n          passwordReset: DEFAULT_REQUEST_STATE,\n          changePassword: DEFAULT_REQUEST_STATE,\n          verifyUserKey: DEFAULT_REQUEST_STATE,\n          proposalPaywallPayment: DEFAULT_REQUEST_STATE,\n          proposalPaywallDetails: DEFAULT_REQUEST_STATE,\n          rescanUserPayments: DEFAULT_REQUEST_STATE,\n          unvetted: DEFAULT_REQUEST_STATE\n        };\n      }\n      return receive(\"logout\", state, action);\n    }\n  }[action.type] || (() => state))());\n\nexport default api;\n","import api from \"./api\";\nexport * from \"./handlers\";\nexport * from \"./api\";\n\nexport default api;\n","import * as act from \"../actions/types\";\n\nconst DEFAULT_STATE = {\n  openedModals: []\n};\n\nconst modal = (state = DEFAULT_STATE, action) =>\n  (({\n    [act.OPEN_MODAL]: () => ({\n      ...state,\n      openedModals: state.openedModals.concat([\n        {\n          type: action.modalType,\n          payload: action.payload,\n          callback: action.callback,\n          options: {\n            disableCloseOnClick: action.options.disableCloseOnClick,\n            disableCloseOnEsc: action.options.disableCloseOnEsc\n          }\n        }\n      ])\n    }),\n    [act.CLOSE_MODAL]: () => ({\n      ...state,\n      openedModals: state.openedModals.filter(\n        (obj, idx) => idx !== state.openedModals.length - 1\n      )\n    }),\n    [act.CLOSE_ALL_MODALS]: () => ({\n      ...state,\n      openedModals: []\n    })\n  }[action.type] || (() => state))());\n\nexport default modal;\n","import * as act from \"../actions/types\";\nimport { DEFAULT_REQUEST_STATE, receive, request, reset } from \"./util\";\n\nexport const DEFAULT_STATE = {\n  payWithFaucet: DEFAULT_REQUEST_STATE\n};\n\nconst external_api = (state = DEFAULT_STATE, action) =>\n  (({\n    [act.REQUEST_PAYWALL_PAYMENT_WITH_FAUCET]: () =>\n      request(\"payWithFaucet\", state, action),\n    [act.RECEIVE_PAYWALL_PAYMENT_WITH_FAUCET]: () =>\n      receive(\"payWithFaucet\", state, action),\n    [act.RESET_PAYWALL_PAYMENT_WITH_FAUCET]: () =>\n      reset(\"payWithFaucet\", state),\n    [act.REQUEST_GET_LAST_BLOCK_HEIGHT]: () =>\n      request(\"blockHeight\", state, action),\n    [act.RECEIVE_GET_LAST_BLOCK_HEIGHT]: () =>\n      receive(\"blockHeight\", state, action),\n    [act.RECEIVE_LOGOUT]: () => DEFAULT_STATE\n  }[action.type] || (() => state))());\n\nexport default external_api;\n","import { combineReducers } from \"redux\";\nimport form from \"./form\";\nimport app from \"./app\";\nimport api from \"./api\";\nimport modal from \"./modal\";\nimport external_api from \"./external_api\";\n\nconst rootReducer = combineReducers({ form, app, api, modal, external_api });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport rootReducer from \"../reducers\";\n\nconst getComposer = () => {\n  const isProductionEnv = process.env.NODE_ENV === \"production\";\n  const browserHasReduxDevTools =\n    typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\n  if (!isProductionEnv && browserHasReduxDevTools) {\n    return window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      trace: true\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    });\n  }\n\n  return compose;\n};\n\nconst getMiddlewares = () => {\n  const loggerMiddleware = createLogger();\n  const isProductionEnv = process.env.NODE_ENV === \"production\";\n  const reduxLoggerIsOn = process.env.REACT_APP_USE_REDUX_LOGGER;\n  const middlewares = [\n    thunkMiddleware,\n    !isProductionEnv && reduxLoggerIsOn && loggerMiddleware\n  ].filter(Boolean);\n\n  return middlewares;\n};\n\nconst configureStore = (preloadedState = {}) => {\n  const composeEnhancers = getComposer();\n  const middlewares = getMiddlewares();\n  return createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  );\n};\n\nexport default configureStore;\n","import { TESTNET, EXPLORER } from \"../constants\";\n\nconst getSubdomainForDcrdata = isTestnet => (isTestnet ? TESTNET : EXPLORER);\n\nconst dcrdataURL = isTestnet =>\n  `https://${getSubdomainForDcrdata(isTestnet)}.doschain.org/api`;\n\nexport const dcrddataBlockHeightURL = isTestnet =>\n  `${dcrdataURL(isTestnet)}/block/best/height`;\n\nconst dcrdataAddressURL = (isTestnet, address) =>\n  `${dcrdataURL(isTestnet)}/address/${address}/raw`;\nconst FAUCET_URL = \"https://faucet.doschain.org/requestfaucet\";\n\nconst POST = (path, params, method = \"POST\") => {\n  let formBody = [];\n  for (const key in params) {\n    const encodedKey = encodeURIComponent(key);\n    const encodedValue = encodeURIComponent(params[key]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n  formBody = formBody.join(\"&\");\n\n  return fetch(path, {\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=UTF-8\"\n    },\n    method,\n    body: formBody\n  }).then(function(response) {\n    if (response.status >= 400) {\n      throw new Error(\"Bad response from server\");\n    }\n    return response.json();\n  });\n};\n\nconst getRawTransactions = url => {\n  return fetch(url).then(r => {\n    // work around when transactions are not paid and dcrdata api returns Unprocessable Entity\n    if (r.statusText === \"Unprocessable Entity\") {\n      return null;\n    }\n    return r.json();\n  });\n};\n\nconst addressFromTestnet = addr => addr[0] === \"T\";\n\nexport const getHeightByDcrdata = isTestnet =>\n  getRawTransactions(dcrddataBlockHeightURL(isTestnet));\n\nexport const getPaymentsByAddressDcrdata = address => {\n  const isTestnet = addressFromTestnet(address);\n  return getRawTransactions(dcrdataAddressURL(isTestnet, address));\n};\n\nexport const payWithFaucet = (address, amount) => {\n  const data = {\n    address,\n    amount,\n    json: true\n  };\n\n  return POST(FAUCET_URL, data);\n};\n","import * as external_api from \"../lib/external_api\";\nimport { verifyUserPaymentWithPoliteia } from \"./api\";\nimport act from \"./methods\";\nimport * as sel from \"../selectors\";\nimport {\n  PAYWALL_STATUS_LACKING_CONFIRMATIONS,\n  PAYWALL_STATUS_PAID,\n  CONFIRMATIONS_REQUIRED\n} from \"../constants\";\n\nlet globalpollingpointer = null;\n\nexport const clearPollingPointer = () => clearTimeout(globalpollingpointer);\nexport const setPollingPointer = paymentpolling => {\n  globalpollingpointer = paymentpolling;\n};\n\nconst POLL_INTERVAL = 10 * 1000;\nexport const verifyUserPayment = (address, amount, txNotBefore) => dispatch => {\n  // Check dcrdata first.\n  return external_api\n    .getPaymentsByAddressDcrdata(address)\n    .then(response => {\n      if (response === null) {\n        return null;\n      }\n      return checkForPayment(\n        checkDcrdataHandler,\n        response,\n        address,\n        amount,\n        txNotBefore\n      );\n    })\n    .catch(() => {\n      // Failed to fetch from dcrdata.\n      return null;\n    })\n    .then(txn => {\n      if (txn) {\n        return txn;\n      }\n    })\n    .then(txn => {\n      if (!txn) {\n        return false;\n      }\n      if (txn.confirmations < CONFIRMATIONS_REQUIRED) {\n        dispatch(\n          act.UPDATE_USER_PAYWALL_STATUS({\n            status: PAYWALL_STATUS_LACKING_CONFIRMATIONS,\n            currentNumberOfConfirmations: txn.confirmations,\n            txid: txn.id\n          })\n        );\n        return false;\n      }\n\n      return verifyUserPaymentWithPoliteia(txn.id);\n    })\n    .then(verified => {\n      if (verified) {\n        dispatch(\n          act.UPDATE_USER_PAYWALL_STATUS({ status: PAYWALL_STATUS_PAID })\n        );\n      } else {\n        const paymentpolling = setTimeout(\n          () => dispatch(verifyUserPayment(address, amount, txNotBefore)),\n          POLL_INTERVAL\n        );\n        setPollingPointer(paymentpolling);\n      }\n    })\n    .catch(error => {\n      const paymentpolling = setTimeout(\n        () => dispatch(verifyUserPayment(address, amount, txNotBefore)),\n        POLL_INTERVAL\n      );\n      setPollingPointer(paymentpolling);\n      throw error;\n    });\n};\n\nconst checkForPayment = (\n  handler,\n  transactions,\n  addressToMatch,\n  amount,\n  txNotBefore\n) => {\n  for (const transaction of transactions) {\n    const txn = handler(transaction, addressToMatch, amount, txNotBefore);\n    if (txn) {\n      return txn;\n    }\n  }\n};\n\nconst checkDcrdataHandler = (\n  transaction,\n  addressToMatch,\n  amount,\n  txNotBefore\n) => {\n  if (!transaction.vout) {\n    return null;\n  }\n  if (transaction.time < txNotBefore) {\n    return null;\n  }\n\n  for (const voutData of transaction.vout) {\n    const addresses = voutData.scriptPubKey.addresses;\n    if (!addresses) {\n      continue;\n    }\n\n    for (const address of addresses) {\n      if (address === addressToMatch && voutData.value >= amount) {\n        return {\n          id: transaction.txid,\n          confirmations: transaction.confirmations\n        };\n      }\n    }\n  }\n\n  return null;\n};\n\nexport const payWithFaucet = (address, amount) => dispatch => {\n  dispatch(act.REQUEST_PAYWALL_PAYMENT_WITH_FAUCET());\n  return external_api\n    .payWithFaucet(address, amount)\n    .then(json => {\n      if (json.Error) {\n        return dispatch(\n          act.RECEIVE_PAYWALL_PAYMENT_WITH_FAUCET(null, new Error(json.Error))\n        );\n      }\n      return dispatch(act.RECEIVE_PAYWALL_PAYMENT_WITH_FAUCET(json));\n    })\n    .catch(error => {\n      dispatch(act.RECEIVE_PAYWALL_PAYMENT_WITH_FAUCET(null, error));\n      throw error;\n    });\n};\n\nexport const getLastBlockHeight = () => (dispatch, getState) => {\n  const isTestnet = sel.isTestNet(getState());\n  dispatch(act.REQUEST_GET_LAST_BLOCK_HEIGHT());\n  external_api\n    .getHeightByDcrdata(isTestnet)\n    .then(response => {\n      return dispatch(act.RECEIVE_GET_LAST_BLOCK_HEIGHT(response));\n    })\n    .catch(() => {\n      return dispatch(act.RECEIVE_GET_LAST_BLOCK_HEIGHT(null));\n    });\n};\n\nexport const resetPaywallPaymentWithFaucet = () =>\n  act.RESET_PAYWALL_PAYMENT_WITH_FAUCET();\n","import CryptoJS from \"crypto-js\";\nimport get from \"lodash/fp/get\";\nimport { INVALID_FILE } from \"./constants\";\nimport {\n  INVOICE_STATUS_APPROVED,\n  INVOICE_STATUS_DISPUTED,\n  INVOICE_STATUS_NEW,\n  INVOICE_STATUS_PAID,\n  INVOICE_STATUS_REJECTED,\n  INVOICE_STATUS_UPDATED,\n  PROPOSAL_FILTER_ALL,\n  PROPOSAL_VOTING_ACTIVE,\n  PROPOSAL_VOTING_AUTHORIZED,\n  PROPOSAL_VOTING_FINISHED,\n  PROPOSAL_VOTING_NOT_AUTHORIZED\n} from \"./constants.js\";\nimport * as pki from \"./lib/pki\";\n\nexport const getProposalStatus = proposalStatus =>\n  get(proposalStatus, [\n    \"Invalid\",\n    \"Not found\",\n    \"Not reviewed\",\n    \"Censored\",\n    \"Public\",\n    \"Unreviewed changes\",\n    \"Abandoned\",\n    \"Rejected\",\n    \"Approved\"\n  ]);\n\nexport const utoa = str => window.btoa(unescape(encodeURIComponent(str)));\nexport const atou = str => decodeURIComponent(escape(window.atob(str)));\n\n// This function extracts the content of index.md's payload. The payload is\n// formatted as:\n//\n//  <proposal name>\\n\n//  <proposal description>\n//\nexport const getTextFromIndexMd = file => {\n  const text = atou(file.payload);\n  return text.substring(text.indexOf(\"\\n\\n\") + 1);\n};\n\nexport const getTextFromJsonToCsv = file => {\n  const json = JSON.parse(atou(file.payload));\n  return json;\n};\n\nexport const getHumanReadableError = (errorCode, errorContext = []) => {\n  const genericContactMsg = \"please contact Politeia administrators\";\n  const errorMessages = {\n    0: \"The operation returned an invalid status.\",\n    1: \"The provided email address or password was invalid.\",\n    2: \"The provided email address is invalid.\",\n    3: \"The provided verification token is invalid. Please ensure you click the link or copy and paste it exactly as it appears in the verification email.\",\n    4: \"The provided verification token is expired. Please register again to receive another email with a new verification token.\",\n    5: `The provided proposal is missing the following file(s): ${errorContext.join(\n      \", \"\n    )}`,\n    6: \"The requested proposal does not exist.\",\n    7: `The provided proposal has duplicate files: ${errorContext.join(\", \")}`,\n    8: \"The provided proposal does not have a valid title.\",\n    9: \"The submitted proposal has too many markdown files.\",\n    10: \"The submitted proposal has too many images.\",\n    11: \"The submitted proposal markdown is too large.\",\n    12: \"The submitted proposal has one or more images that are too large.\",\n    13: \"The password you provided is invalid; it's either too short, too long, or has unsupported characters.\",\n    14: \"The requested comment does not exist.\",\n    15: \"The provided proposal name was invalid.\",\n    16: \"The SHA256 checksum for one of the files was incorrect.\",\n    17: \"The Base64 encoding for one of the files was incorrect.\",\n    18: `The MIME type detected for ${\n      errorContext[0]\n    } did not match the provided MIME type. MIME type: ${errorContext[1]}`,\n    19: \"The MIME type for one of the files is not supported.\",\n    20: \"The proposal cannot be set to that status.\",\n    21: \"The provided public key was invalid.\",\n    22: \"No active public key was found for your account, please visit your account page to resolve this issue.\",\n    23: \"The provided signature was invalid.\",\n    24: \"The provided parameters were invalid.\",\n    25: \"The private key used for signing was invalid.\",\n    26: \"Your comment is too long.\",\n    27: \"The user was not found.\",\n    28: `The proposal is in an unexpected state, ${genericContactMsg}.`,\n    29: \"You must be logged in to perform this action.\",\n    30: \"You must pay the registration fee to perform this action.\",\n    31: \"You cannot change the status of your own proposal, please have another admin review it!\",\n    32: \"The username you provided is invalid; it's either too short, too long, or has unsupported characters.\",\n    33: \"Another user already has that username, please choose another.\",\n    34: `A verification email has already been sent recently. Please check your email, or wait until it expires and send another one.\\n\\nYour verification email is set to expire on ${new Date(\n      parseInt(errorContext[0] + \"000\", 10)\n    )}. If you did not receive an email, please contact Politeia administrators.`,\n    35: \"The server cannot verify the payment at this time, please try again later or contact Politeia administrators.\",\n    36: \"The public key provided is already taken by another user.\",\n    37: \"The proposal cannot be set to that voting status.\",\n    38: \"Your account has been locked due to too many login attempts.\",\n    39: \"You do not have any proposal credits; you must purchase one before you can submit a proposal.\",\n    40: \"That is an invalid user edit action.\",\n    41: \"You are not authorized to perform this action.\",\n    42: \"This proposal is in the wrong state for that action.\",\n    43: \"Commenting is not allowed on this proposal.\",\n    44: \"You cannot vote on this comment.\",\n    45: \"You must provide a reason for censoring the proposal.\",\n    46: \"You must provide a reason for censoring the comment.\",\n    47: \"You cannot censor this comment.\",\n    48: \"Only the proposal author may perform this action.\",\n    49: \"The author has not yet authorized a vote for this proposal.\",\n    50: \"The vote has already been authorized for this proposal.\",\n    51: \"That is an invalid vote authorization action.\",\n    52: \"This account has been deactivated.\",\n    53: \"Your email address has not yet been verified.\",\n    54: \"Invalid proposal vote parameters\",\n    55: \"Email address is not verified\",\n    56: \"Invalid user ID\",\n    57: \"Invalid like comment action\",\n    58: \"Invalid proposal censorship token\",\n    59: \"Email address is already verified\",\n    85: \"The provided password was invalid\",\n    88: \"No changes were found in the proposal.\",\n    // CMS Errors\n    1001: \"Malformed name\",\n    1002: \"Malformed location\",\n    1003: \"Invoice cannot be found\",\n    1004: \"Month or year was set, while the other was not\",\n    1005: \"Invalid invoice status transition\",\n    1006: \"Reason for action not provided\",\n    1007: \"Submitted invoice file is malformed\",\n    1008: \"Submitted invoice is a duplicate of an existing invoice\",\n    1009: \"Invalid payment address\",\n    1010: \"Malformed line item submitted\",\n    1011: \"Invoice missing contractor name\",\n    1012: \"Invoice missing contractor location\",\n    1013: \"Invoice missing contractor contact\",\n    1014: \"Invoice missing contractor rate\",\n    1015: \"Invoice has invalid contractor rate\",\n    1016: \"Invoice has malformed contractor contact\",\n    1017: \"Line item has malformed proposal token\",\n    1018: \"Line item has malformed domain\",\n    1019: \"Line item has malformed subdomain\",\n    1020: \"Line item has malformed description\",\n    1021: \"Invoice is an wrong status to be editted (approved, rejected or paid)\",\n    1022: \"Invoices require at least 1 line item\",\n    1023: \"Only one invoice per month/year is allowed to be submitted\",\n    1024: \"An invalid month/year was submitted on an invoice\",\n    1025: \"Exchange rate was invalid or didn't match the expected result\",\n    1026: \"An invalid line item type was entered.\",\n    1027: \"An invalid value was entered into labor or expenses.\",\n    1028: \"The invoice has a duplicate payment address, please use a new address.\",\n    1029: \"Invalid dates were requested for line item payouts.\",\n    1030: \"An attempted edit of invoice included an unauthorized month or year change.\"\n  };\n\n  const error = errorMessages[errorCode];\n  if (!error) {\n    // If the error code sent from the server cannot be translated to any error message,\n    // it's an internal error code for an internal server error.\n    return (\n      \"The server encountered an unexpected error, please contact Politeia \" +\n      \"administrators and include the following error code: \" +\n      errorCode\n    );\n  }\n\n  return error;\n};\n\n// Copied from https://stackoverflow.com/a/43131635\nexport const hexToArray = hex =>\n  new Uint8Array(hex.match(/[\\da-f]{2}/gi).map(h => parseInt(h, 16)));\n\n// Copied from https://stackoverflow.com/a/21797381\nexport const base64ToArrayBuffer = base64 => {\n  const binary_string = window.atob(base64);\n  const len = binary_string.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binary_string.charCodeAt(i);\n  }\n  return bytes.buffer;\n};\n\n// Copied from https://stackoverflow.com/a/33918579\nexport const arrayBufferToWordArray = ab => {\n  const i8a = new Uint8Array(ab);\n  const a = [];\n  for (let i = 0; i < i8a.length; i += 4) {\n    // eslint-disable-next-line\n    a.push(\n      (i8a[i] << 24) | (i8a[i + 1] << 16) | (i8a[i + 2] << 8) | i8a[i + 3]\n    );\n  }\n  return CryptoJS.lib.WordArray.create(a, i8a.length);\n};\n\nexport const getUsernameFieldLabel = (policy, defaultText = \"Username\") => {\n  if (policy) {\n    return `${defaultText} (${policy.minusernamelength} - ${policy.maxusernamelength} characters)`;\n  }\n  return defaultText;\n};\n\nexport const getPasswordFieldLabel = (policy, defaultText = \"Password\") => {\n  if (policy) {\n    return `${defaultText} (at least ${policy.minpasswordlength} characters)`;\n  }\n  return defaultText;\n};\n\nexport const getRandomColor = () => {\n  const letters = \"0123456789ABCDEF\";\n  let color = \"#3F\";\n  for (let i = 0; i < 4; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nexport const uniqueID = prefix =>\n  prefix +\n  \"_\" +\n  Math.random()\n    .toString(36)\n    .substr(2, 9);\n\nexport const verifyUserPubkey = (email, keyToBeMatched, keyMismatchAction) =>\n  pki.getKeys(email).then(keys => {\n    const res = keys ? keys.publicKey !== keyToBeMatched : true;\n    keyMismatchAction(res);\n  });\n\nexport const multiplyFloatingNumbers = (num1, num2) => {\n  let cont1 = 0;\n  let cont2 = 0;\n  while (num1 < 1) {\n    num1 *= 10;\n    cont1++;\n  }\n  while (num2 < 1) {\n    num2 *= 10;\n    cont2++;\n  }\n  return (num1 * num2) / Math.pow(10, cont1 + cont2);\n};\n\nexport const isProposalApproved = vs => {\n  const hasReachedQuorom =\n    vs.totalvotes >= (vs.numofeligiblevotes * vs.quorumpercentage) / 100;\n  const yesOption = vs.optionsresult && vs.optionsresult[1];\n  const hasPassed =\n    yesOption &&\n    vs.totalvotes > 0 &&\n    yesOption.votesreceived >= (vs.totalvotes * vs.passpercentage) / 100;\n  return hasReachedQuorom && hasPassed;\n};\n\nexport const countPublicProposals = proposals => {\n  const defaultObj = {\n    [PROPOSAL_VOTING_ACTIVE]: 0,\n    [PROPOSAL_VOTING_NOT_AUTHORIZED]: 0,\n    [PROPOSAL_FILTER_ALL]: 0\n  };\n  return proposals\n    ? proposals.reduce((acc, cur) => {\n        if (\n          cur.status === PROPOSAL_VOTING_NOT_AUTHORIZED ||\n          cur.status === PROPOSAL_VOTING_AUTHORIZED\n        )\n          acc[PROPOSAL_VOTING_NOT_AUTHORIZED]++;\n        else if (cur.status === PROPOSAL_VOTING_ACTIVE)\n          acc[PROPOSAL_VOTING_ACTIVE]++;\n        else if (cur.status === PROPOSAL_VOTING_FINISHED)\n          acc[PROPOSAL_VOTING_FINISHED]++;\n        acc[PROPOSAL_FILTER_ALL]++;\n        return acc;\n      }, defaultObj)\n    : defaultObj;\n};\n\nexport const proposalsArrayToObject = arr =>\n  arr\n    ? arr.reduce((acc, cur) => {\n        return {\n          ...acc,\n          [cur.censorshiprecord.token]: cur\n        };\n      }, {})\n    : {};\n\nexport const removeProposalsDuplicates = (arr1, arr2) => {\n  const mergedObj = {\n    ...proposalsArrayToObject(arr1),\n    ...proposalsArrayToObject(arr2)\n  };\n  return Object.keys(mergedObj).map(item => mergedObj[item]);\n};\n\n// CMS HELPERS\nexport const renderInvoiceStatus = status => {\n  return mapInvoiceStatusToMessage[status] || \"Invalid Invoice Status\";\n};\n\nconst mapInvoiceStatusToMessage = {\n  [INVOICE_STATUS_NEW]: \"Invoice unreviewed\",\n  [INVOICE_STATUS_UPDATED]: \"Invoice updated and unreviewed\",\n  [INVOICE_STATUS_REJECTED]: \"Invoice rejected\",\n  [INVOICE_STATUS_DISPUTED]: \"Invoice disputed\",\n  [INVOICE_STATUS_APPROVED]: \"Invoice approved\",\n  [INVOICE_STATUS_PAID]: \"Invoice paid\"\n};\n\nexport const formatDate = date => {\n  const twoChars = v => (v < 10 ? `0${v}` : v);\n  const d = new Date(date * 1000);\n  const year = d.getUTCFullYear();\n  const month = twoChars(d.getUTCMonth());\n  const day = twoChars(d.getUTCDate());\n  const hours = twoChars(d.getUTCHours());\n  const minutes = twoChars(d.getUTCMinutes());\n  const seconds = twoChars(d.getUTCSeconds());\n  return `${year}-${month}-${day}-${hours}:${minutes}:${seconds}`;\n};\n\nexport const getJsonData = base64 => {\n  const data = atob(base64.split(\",\").pop());\n  try {\n    const json = JSON.parse(data);\n    if (!json) throw new Error(INVALID_FILE);\n    return json;\n  } catch (e) {\n    throw new Error(INVALID_FILE);\n  }\n};\n\nexport const setQueryStringWithoutPageReload = qs => {\n  const newurl =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    qs;\n  window.history.pushState({ path: newurl }, \"\", newurl);\n};\n\n// CSV\nconst DELIMITER_CHAR = \",\";\nconst COMMENT_CHAR = \"#\";\nconst LINE_DELIMITER = \"\\n\";\n\nexport const isComment = line => line[0] === COMMENT_CHAR;\n\nconst split = (string, delimiter) => string.split(delimiter);\n\nexport const splitLine = string => split(string, LINE_DELIMITER);\n\nexport const splitColumn = string => split(string, DELIMITER_CHAR);\n\nconst jsonCsvMap = (line, linenum) => ({\n  linenum,\n  type: +line[0],\n  subtype: line[1],\n  description: line[2],\n  proposaltoken: line[3],\n  hours: +line[4],\n  totalcost: +line[5]\n});\n\nexport const csvToJson = csv =>\n  splitLine(csv)\n    .map(splitColumn)\n    .map(jsonCsvMap);\n\nexport const getCurrentMonth = () => {\n  const d = new Date();\n  return d.getMonth() + 1;\n};\n\nexport const getCurrentYear = () => {\n  const d = new Date();\n  return d.getFullYear();\n};\n\nexport const fromMinutesToHours = minutes =>\n  parseFloat(minutes / 60).toFixed(2);\nexport const fromHoursToMinutes = hours => parseInt(hours * 60, 10);\nexport const fromUSDCentsToUSDUnits = cents =>\n  parseFloat(cents / 100).toFixed(2);\nexport const fromUSDUnitsToUSDCents = units => parseInt(units * 100, 10);\n\nexport const isEmpty = obj => Object.keys(obj).length === 0;\n\n/**\n * Toggle Scroll Block\n * @param {bool} block - block/unblock scroll\n */\nexport const toggleBlockScroll = block => {\n  if (block) {\n    window.scrollTo(0, 0);\n    document.body.style.overflow = \"hidden\";\n  } else {\n    document.body.style.overflow = \"scroll\";\n  }\n};\n","export const arg = idx => (...args) => args[idx];\nexport const constant = x => () => x;\nexport const not = fn => (...args) => !fn(...args);\nexport const bool = fn => (...args) => !!fn(...args);\nexport const or = (...fns) => (...args) => {\n  let result;\n  return fns.find(fn => (result = fn(...args))) ? result : false;\n};\nexport const and = (...fns) => (...args) => {\n  let result;\n  return fns.find(fn => {\n    result = fn(...args);\n    return !result;\n  })\n    ? false\n    : result;\n};\n","import compose from \"lodash/fp/compose\";\nimport reduce from \"lodash/fp/reduce\";\n\nexport const basicAction = type => (payload, error) => ({\n  type,\n  error: !!error,\n  payload: error ? error : payload\n});\n\nexport const reduceTypes = types =>\n  compose(\n    reduce((t, name) => ({ ...t, [name]: basicAction(types[name]) }), {}),\n    Object.keys\n  )(types);\n\nexport const callAfterMinimumWait = (callback, waitTimeMs) => {\n  let args = null;\n  let timedOut = false;\n\n  const revisedCallback = function() {\n    if (!timedOut) {\n      args = arguments;\n      return;\n    }\n\n    callback.apply(this, arguments);\n  };\n\n  setTimeout(() => {\n    timedOut = true;\n    if (args) {\n      revisedCallback.apply(this, args);\n    }\n  }, waitTimeMs);\n\n  return revisedCallback;\n};\n","export const CONFIRM_ACTION = \"CONFIRM_ACTION\";\nexport const CONFIRM_ACTION_WITH_REASON = \"CONFIRM_ACTION_WITH_REASON\";\nexport const LOGIN = \"LOGIN\";\nexport const PAYWALL_MODAL = \"PAYWALL_MODAL\";\nexport const PURCHASE_CREDITS_MODAL = \"PURCHASE_CREDITS_MODAL\";\nexport const CREDITS_HISTORY_MODAL = \"CREDITS_HISTORY_MODAL\";\nexport const MANAGE_CREDITS_MODAL = \"MANAGE_CREDITS_MODAL\";\nexport const CHANGE_USERNAME_MODAL = \"CHANGE_USERNAME_MODAL\";\nexport const CHANGE_PASSWORD_MODAL = \"CHANGE_PASSWORD_MODAL\";\nexport const START_VOTE_MODAL = \"START_VOTE_MODAL\";\nexport const SEARCH_PROPOSAL_VOTES = \"SEARCH_PROPOSAL_VOTES\";\nexport const IMPORT_IDENTITY_MODAL = \"IMPORT_IDENTITY_MODAL\";\nexport const PROPOSAL_VERSION_DIFF = \"PROPOSAL_VERSION_DIFF\";\nexport const WELCOME_MODAL = \"WELCOME_MODAL\";\n","import qs from \"query-string\";\n\nexport const setQueryStringWithoutPageReload = qsValue => {\n  const newurl =\n    window.location.protocol +\n    \"//\" +\n    window.location.host +\n    window.location.pathname +\n    qsValue;\n  window.history.pushState({ path: newurl }, \"\", newurl);\n};\n\nexport const getQueryStringValue = (\n  key,\n  queryString = window.location.search\n) => {\n  const values = qs.parse(queryString);\n  return values[key];\n};\n\nexport const getQueryStringValues = (queryString = window.location.search) =>\n  qs.parse(queryString);\n\nexport const setQueryStringValue = (\n  key,\n  value,\n  queryString = window.location.search\n) => {\n  const values = qs.parse(queryString);\n  const newQsValue = qs.stringify({\n    ...values,\n    [key]: value\n  });\n  setQueryStringWithoutPageReload(`?${newQsValue}`);\n};\n\nexport const removeQueryStringsFromUrl = (url, parameter, parameter2) => {\n  const newurl = url\n    .replace(new RegExp(\"[?&]\" + parameter + \"=[^&#]*(#.*)?$\"), \"$1\")\n    .replace(new RegExp(\"([?&])\" + parameter + \"=[^&]*&\"), \"$1\")\n    .replace(new RegExp(\"[?&]\" + parameter2 + \"=[^&#]*(#.*)?$\"), \"$1\")\n    .replace(new RegExp(\"([?&])\" + parameter2 + \"=[^&]*&\"), \"$1\");\n  window.history.pushState({ path: newurl }, \"\", newurl);\n};\n","export const constants = {\n  RECORD_TYPE_INVOICE: \"invoice\",\n  RECORD_TYPE_PROPOSAL: \"proposal\"\n};\n\nexport const commonDefaults = {\n  isStaging: false,\n  aboutContent: \"about-politeia\"\n};\n\nexport const POLITEIA = {\n  ...commonDefaults,\n  title: \"Politeia\",\n  paywallContent: \"paywall-politeia\",\n  recordType: constants.RECORD_TYPE_PROPOSAL,\n  enableAdminInvite: false,\n  enableCommentVote: true,\n  enablePaywall: true,\n  privacyPolicyContent: \"privacy-policy\",\n  testnetGitRepository:\n    \"https://github.com/decred-proposals/testnet3/tree/master\",\n  mainnetGitRepository:\n    \"https://github.com/decred-proposals/mainnet/tree/master\"\n};\n\nexport const CMS = {\n  ...commonDefaults,\n  title: \"Contractor Management\",\n  recordType: constants.RECORD_TYPE_INVOICE,\n  enableAdminInvite: true,\n  enableCommentVote: false,\n  enablePaywall: false,\n  privacyprivacyPolicyContent: \"privacy-policy-cms\",\n  testnetGitRepository: \"\",\n  mainnetGitRepository: \"\"\n};\n","import React, { createContext, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { constants } from \"./presets\";\n\nexport const ConfigContext = createContext();\n\nexport const ConfigConsumer = ConfigContext.Consumer;\n\nexport const useConfig = () => useContext(ConfigContext);\n\n/**\n * This wrap around the config provider is needed to add props validation for\n * each custom option alllowed.\n */\nexport const ConfigProvider = ({ children, ...configOptions }) => (\n  <ConfigContext.Provider value={{ ...configOptions, constants }}>\n    {children}\n  </ConfigContext.Provider>\n);\n\nConfigProvider.propTypes = {\n  isStaging: PropTypes.bool,\n  title: PropTypes.string,\n  recordType: PropTypes.oneOf([\n    constants.RECORD_TYPE_INVOICE,\n    constants.RECORD_TYPE_PROPOSAL\n  ]),\n  enableAdminInvite: PropTypes.bool,\n  enableCommentVote: PropTypes.bool\n};\n\nexport default ConfigProvider;\n","import dotenvParse from \"dotenv-parse-variables\";\nimport React from \"react\";\nimport { ConfigProvider } from \"./ConfigProvider\";\nimport * as presets from \"./presets\";\n\nconst defaultPreset = presets.POLITEIA;\n\n/**\n * loadConfig will override any default option with the options specified\n * through the enviroment variables. If a preset name is specified, all\n * other options will be ignored and the preset will be returned instead.\n */\nconst loadConfig = () => {\n  const {\n    isStaging: defaultStagingValue,\n    title: defaultTitleValue,\n    recordType: defaultRecordType,\n    enableAdminInvite: defaultEnableAdminInvite,\n    enableCommentVote: defaultEnableCommentVote,\n    enablePaywall: defaultEnablePaywall,\n    privacyPolicyContent: defaultprivacyPolicyContent,\n    aboutContent: defaultAboutContent,\n    paywallContent: defaultPaywallContent,\n    testnetGitRepository: defaultTestnetGitRepository,\n    mainnetGitRepository: defaultMainnetGitRepository\n  } = defaultPreset;\n  const env = dotenvParse(process.env);\n  const getConf = key => env[`REACT_APP_${key}`];\n\n  const presetName = getConf(\"PRESET\");\n  if (presetName) {\n    if (!presets[presetName]) {\n      throw new Error(\n        \"Invalid preset. Valid presets name are POLITEIA and CMS.\"\n      );\n    }\n\n    return presets[presetName];\n  }\n\n  return {\n    isStaging: getConf(\"IS_STAGING\") || defaultStagingValue,\n    title: getConf(\"TITLE\") || defaultTitleValue,\n    recordType: getConf(\"RECORD_TYPE\") || defaultRecordType,\n    enableAdminInvite:\n      getConf(\"ENABLE_ADMIN_INVITE\") || defaultEnableAdminInvite,\n    enableCommentVote:\n      getConf(\"ENABLE_COMMENT_VOTE\") || defaultEnableCommentVote,\n    enablePaywall: getConf(\"ENABLE_PAYWALL\") || defaultEnablePaywall,\n    privacyPolicyContent:\n      getConf(\"PRIVACY_POLICY_CONTENT\") || defaultprivacyPolicyContent,\n    aboutContent: getConf(\"ABOUT_CONTENT\") || defaultAboutContent,\n    paywallContent: getConf(\"PAYWALL_CONTENT\") || defaultPaywallContent,\n    testnetGitRepository:\n      getConf(\"TESTNET_GIT_REPOSITORY\") || defaultTestnetGitRepository,\n    mainnetGitRepository:\n      getConf(\"MAINNET_GIT_REPOSITORY\") || defaultMainnetGitRepository\n  };\n};\n\n/**\n * Config will give preference to load the config options from the preset\n * if any is specified.\n */\nconst Config = ({ children }) => {\n  const configOptions = loadConfig();\n  return <ConfigProvider {...configOptions}>{children}</ConfigProvider>;\n};\n\nexport default Config;\n","import Config from \"./Config\";\nexport * from \"./ConfigProvider\";\n\nexport default Config;\n","// code grabbed/modified from: https://github.com/miguelmota/merkle-tree/\nimport crypto from \"crypto\";\n\n// hash algorithm\nfunction sha256(data) {\n  // returns Buffer\n  return crypto\n    .createHash(\"sha256\")\n    .update(data)\n    .digest();\n}\n\n/**\n * Class reprensenting a Merkle Tree\n * @namespace MerkleTree\n */\nclass MerkleTree {\n  /**\n   * @desc Constructs a Merkle Tree.\n   * All nodes and leaves are stored as Buffers.\n   * Lonely leaf nodes are promoted to the next level up without being hashed again.\n   * @param {Buffer[]} leaves - Array of hashed leaves. Each leaf must be a Buffer.\n   * @param {Function} hashAlgorithm - Algorithm used for hashing leaves and nodes\n   * @param {Object} options - Additional options\n   * @example\n   * const MerkleTree = require('merkletreejs')\n   * const crypto = require('crypto')\n   *\n   * function sha256(data) {\n   *   // returns Buffer\n   *   return crypto.createHash('sha256').update(data).digest()\n   * }\n   *\n   * const leaves = ['a', 'b', 'c'].map(x => sha3(x))\n   *\n   * const tree = new MerkleTree(leaves, sha256)\n   */\n  constructor(leaves, hashAlgorithm = sha256) {\n    this.hashAlgo = hashAlgorithm;\n    this.leaves = leaves;\n    this.layers = [leaves];\n\n    this.createHashes(this.leaves);\n  }\n\n  createHashes(nodes) {\n    if (nodes.length === 1) {\n      return false;\n    }\n\n    const layerIndex = this.layers.length;\n\n    this.layers.push([]);\n\n    for (let i = 0; i < nodes.length - 1; i += 2) {\n      const left = nodes[i];\n      const right = nodes[i + 1];\n      let data = null;\n\n      data = Buffer.concat([left, right]);\n\n      const hash = this.hashAlgo(data);\n\n      this.layers[layerIndex].push(hash);\n    }\n\n    // is odd number of nodes\n    if (nodes.length % 2 === 1) {\n      let data = nodes[nodes.length - 1];\n      let hash = data;\n      data = Buffer.concat([data, data]);\n      hash = this.hashAlgo(data);\n\n      this.layers[layerIndex].push(hash);\n    }\n\n    this.createHashes(this.layers[layerIndex]);\n  }\n\n  /**\n   * getLeaves\n   * @desc Returns array of leaves of Merkle Tree.\n   * @return {Buffer[]}\n   * @example\n   * const leaves = tree.getLeaves()\n   */\n  getLeaves() {\n    return this.leaves;\n  }\n\n  /**\n   * getLayers\n   * @desc Returns array of all layers of Merkle Tree, including leaves and root.\n   * @return {Buffer[]}\n   * @example\n   * const layers = tree.getLayers()\n   */\n  getLayers() {\n    return this.layers;\n  }\n\n  /**\n   * getRoot\n   * @desc Returns the Merkle root hash as a Buffer.\n   * @return {Buffer}\n   * @example\n   * const root = tree.getRoot()\n   */\n  getRoot() {\n    return this.layers[this.layers.length - 1][0];\n  }\n\n  /**\n   * getProof\n   * @desc Returns the proof for a target leaf.\n   * @param {Buffer} leaf - Target leaf\n   * @param {Number} [index] - Target leaf index in leaves array.\n   * Use if there are leaves containing duplicate data in order to distinguish it.\n   * @return {Buffer[]} - Array of Buffer hashes.\n   * @example\n   * const proof = tree.getProof(leaves[2])\n   *\n   * @example\n   * const leaves = ['a', 'b', 'a'].map(x => sha3(x))\n   * const tree = new MerkleTree(leaves, sha3)\n   * const proof = tree.getProof(leaves[2], 2)\n   */\n  getProof(leaf, index) {\n    const proof = [];\n\n    if (typeof index !== \"number\") {\n      index = -1;\n\n      for (let i = 0; i < this.leaves.length; i++) {\n        if (Buffer.compare(leaf, this.leaves[i]) === 0) {\n          index = i;\n        }\n      }\n    }\n\n    if (index <= -1) {\n      return [];\n    }\n\n    if (index === this.leaves.length - 1) {\n      for (let i = 0; i < this.layers.length - 1; i++) {\n        const layer = this.layers[i];\n        const isRightNode = index % 2;\n        const pairIndex = isRightNode ? index - 1 : index;\n\n        if (pairIndex < layer.length) {\n          proof.push({\n            position: isRightNode ? \"left\" : \"right\",\n            data: layer[pairIndex]\n          });\n        }\n\n        // set index to parent index\n        index = (index / 2) | 0;\n      }\n\n      return proof;\n    } else {\n      for (let i = 0; i < this.layers.length; i++) {\n        const layer = this.layers[i];\n        const isRightNode = index % 2;\n        const pairIndex = isRightNode ? index - 1 : index + 1;\n\n        if (pairIndex < layer.length) {\n          proof.push({\n            position: isRightNode ? \"left\" : \"right\",\n            data: layer[pairIndex]\n          });\n        }\n\n        // set index to parent index\n        index = (index / 2) | 0;\n      }\n\n      return proof;\n    }\n  }\n\n  /**\n   * verify\n   * @desc Returns true if the proof path (array of hashes) can connect the target node\n   * to the Merkle root.\n   * @param {Buffer[]} proof - Array of proof Buffer hashes that should connect\n   * target node to Merkle root.\n   * @param {Buffer} targetNode - Target node Buffer\n   * @param {Buffer} root - Merkle root Buffer\n   * @return {Boolean}\n   * @example\n   * const root = tree.getRoot()\n   * const proof = tree.getProof(leaves[2])\n   * const verified = tree.verify(proof, leaves[2], root)\n   *\n   */\n  verify(proof, targetNode, root) {\n    let hash = targetNode;\n\n    if (!Array.isArray(proof) || !proof.length || !targetNode || !root) {\n      return false;\n    }\n\n    for (let i = 0; i < proof.length; i++) {\n      const node = proof[i];\n      const isLeftNode = node.position === \"left\";\n      const buffers = [];\n\n      buffers.push(hash);\n\n      buffers[isLeftNode ? \"unshift\" : \"push\"](node.data);\n\n      hash = this.hashAlgo(Buffer.concat(buffers));\n    }\n\n    return Buffer.compare(hash, root) === 0;\n  }\n}\n\nexport default MerkleTree;\n","import Promise from \"promise\";\nimport localforage from \"localforage\";\nimport nacl from \"tweetnacl\";\nimport util from \"tweetnacl-util\";\nimport get from \"lodash/fp/get\";\n\nexport const STORAGE_PREFIX = \"ed255191~\";\nexport const toHex = x => Buffer.from(toUint8Array(x)).toString(\"hex\");\n\nexport const toByteArray = str => {\n  const bytes = new Uint8Array(Math.ceil(str.length / 2));\n  for (let i = 0; i < bytes.length; i++)\n    bytes[i] = parseInt(str.substr(i * 2, 2), 16);\n  return bytes;\n};\n\nexport const toUint8Array = obj =>\n  Object.prototype.toString.call(obj) !== \"[object Object]\"\n    ? obj\n    : Uint8Array.from(Object.keys(obj).map(key => obj[key]));\n\nexport const loadKeys = (email, keys) =>\n  localforage.setItem(STORAGE_PREFIX + email, keys).then(() => keys);\nexport const generateKeys = () => Promise.resolve(nacl.sign.keyPair());\nexport const existing = email =>\n  localforage.getItem(STORAGE_PREFIX + email).catch(e => console.warn(e));\nconst myKeyPair = email =>\n  existing(email).then(res => res && res.secretKey && res);\nexport const myPublicKey = email => myKeyPair(email).then(get(\"publicKey\"));\nexport const myPubKeyHex = email =>\n  myPublicKey(email)\n    .then(keys => toHex(keys))\n    .catch(() => {\n      throw new Error(\n        \"Failed to load user identity. You need tor restore it from a backup or generate a new one.\"\n      );\n    });\nexport const sign = (email, msg) =>\n  myKeyPair(email).then(({ secretKey }) =>\n    nacl.sign.detached(toUint8Array(msg), toUint8Array(secretKey))\n  );\nexport const signString = (email, msg) => sign(email, util.decodeUTF8(msg));\nexport const signHex = (email, msg) => sign(email, msg).then(toHex);\nexport const signStringHex = (email, msg) => signString(email, msg).then(toHex);\nexport const verify = (msg, sig, pubKey) =>\n  nacl.sign.detached.verify(\n    toUint8Array(msg),\n    toUint8Array(sig),\n    toUint8Array(pubKey)\n  );\n\nexport const verifyKeyPair = keys => {\n  const msg = util.decodeUTF8(\"any\");\n  const { publicKey, secretKey } = keysFromHex(keys);\n  const signature = nacl.sign.detached(\n    toUint8Array(msg),\n    toUint8Array(secretKey)\n  );\n  return verify(msg, signature, publicKey);\n};\n\nexport const keysToHex = ({ publicKey, secretKey }) => ({\n  publicKey: toHex(publicKey),\n  secretKey: toHex(secretKey)\n});\n\nconst keysFromHex = ({ publicKey, secretKey }) => ({\n  publicKey: toByteArray(publicKey),\n  secretKey: toByteArray(secretKey)\n});\n\nexport const getKeys = email =>\n  myKeyPair(email).then(keys => (keys ? keysToHex(keys) : keys));\n\nexport const importKeys = (email, keys) =>\n  Promise.resolve(keysFromHex(keys)).then(decodedKeys =>\n    loadKeys(email, decodedKeys)\n  );\n","/**\n * Capitalizes the first letter of a given string\n * @param {string} stringInput\n * @returns {string} stringOutput\n */\nexport const capitalize = stringInput => {\n  if (typeof stringInput !== \"string\") return \"\";\n  return stringInput.charAt(0).toUpperCase() + stringInput.slice(1);\n};\n","import * as stringUtils from \"./strings\";\n/**\n * Converts an array of chars into a Regex Expression\n * @param {Array} supportedChars\n * @return {RegExp} regex expression from supported chars\n */\nexport const buildRegexFromSupportedChars = supportedChars => {\n  const charNeedsEscaping = c => c === \"/\" || c === \".\" || c === \"-\";\n  const concatedChars = supportedChars.reduce(\n    (str, char) => (charNeedsEscaping(char) ? str + `\\\\${char}` : str + char),\n    \"\"\n  );\n  const regex = \"^[\" + concatedChars + \"]*$\";\n  return new RegExp(regex);\n};\n\n/**\n * Creates a string from the concatenation of the supported chars\n * @param {Array} supportedChars\n * @returns {string} string of valid chars\n */\nexport const buildValidCharsStrFromSupportedChars = supportedChars =>\n  supportedChars.reduce((str, v) => str + v, \"\");\n\n/**\n *\n * @param {string} fieldName\n * @param {Array} supportedChars\n * @returns {string} custom error message for a non-valid field given a set of\n * supported chars\n */\nexport const invalidMessage = (fieldName, supportedChars) =>\n  `${stringUtils.capitalize(\n    fieldName\n  )} is not valid. Valid chars are ${buildValidCharsStrFromSupportedChars(\n    supportedChars\n  )} `;\n\n/**\n * Creates a yup field matcher for given a field name and an array of\n * supported chars\n * @param {string} fieldName\n * @param {Array} supportedChars\n * @returns {Array} array of parameters for a yup field matcher\n */\nexport const yupFieldMatcher = (fieldName, supportedChars) => {\n  return [\n    buildRegexFromSupportedChars(supportedChars),\n    {\n      excludeEmptyString: true,\n      message: invalidMessage(fieldName, supportedChars)\n    }\n  ];\n};\n\n/**\n * Returns a generic error message for exceeding the minimum length\n * @param {string} fieldName\n * @param {number} minLenght\n */\nexport const minLengthMessage = (fieldName, minLenght) =>\n  `${stringUtils.capitalize(\n    fieldName\n  )} must be at least ${minLenght} characters`;\n\n/**\n * Returns a generic error message for exceeding the maximum length\n * @param {string} fieldName\n * @param {number} minLenght\n */\nexport const maxLengthMessage = (fieldName, maxLength) =>\n  `${stringUtils.capitalize(\n    fieldName\n  )} must be at most ${maxLength} characters`;\n","export const SET_EMAIL = \"API_SET_EMAIL\";\nexport const REQUEST_INIT_SESSION = \"API_REQUEST_INIT_SESSION\";\nexport const RECEIVE_INIT_SESSION = \"API_RECEIVE_INIT_SESSION\";\nexport const REQUEST_ME = \"API_REQUEST_ME\";\nexport const RECEIVE_ME = \"API_RECEIVE_ME\";\nexport const UPDATE_ME = \"UPDATE_ME\";\nexport const REQUEST_POLICY = \"API_REQUEST_POLICY\";\nexport const RECEIVE_POLICY = \"API_RECEIVE_POLICY\";\nexport const REQUEST_NEW_USER = \"API_REQUEST_NEW_USER\";\nexport const RECEIVE_NEW_USER = \"API_RECEIVE_NEW_USER\";\nexport const RECEIVE_PAYWALL_PAYMENT_WITH_FAUCET =\n  \"RECEIVE_PAYWALL_PAYMENT_WITH_FAUCET\";\nexport const REQUEST_PAYWALL_PAYMENT_WITH_FAUCET =\n  \"REQUEST_PAYWALL_PAYMENT_WITH_FAUCET\";\nexport const RESET_PAYWALL_PAYMENT_WITH_FAUCET =\n  \"RESET_PAYWALL_PAYMENT_WITH_FAUCET\";\nexport const UPDATE_USER_PAYWALL_STATUS = \"UPDATE_USER_PAYWALL_STATUS\";\nexport const SET_PROPOSAL_CREDITS = \"SET_PROPOSAL_CREDITS\";\nexport const ADD_PROPOSAL_CREDITS = \"ADD_PROPOSAL_CREDITS\";\nexport const SUBTRACT_PROPOSAL_CREDITS = \"SUBTRACT_PROPOSAL_CREDITS\";\nexport const REQUEST_CHANGE_USERNAME = \"API_REQUEST_CHANGE_USERNAME\";\nexport const RECEIVE_CHANGE_USERNAME = \"API_RECEIVE_CHANGE_USERNAME\";\nexport const REQUEST_CHANGE_PASSWORD = \"API_REQUEST_CHANGE_PASSWORD\";\nexport const RECEIVE_CHANGE_PASSWORD = \"API_RECEIVE_CHANGE_PASSWORD\";\nexport const RESET_NEW_USER = \"API_RESET_NEW_USER\";\nexport const REQUEST_VERIFY_NEW_USER = \"API_REQUEST_VERIFY_NEW_USER\";\nexport const RECEIVE_VERIFY_NEW_USER = \"API_RECEIVE_VERIFY_NEW_USER\";\nexport const REQUEST_USER = \"API_REQUEST_USER\";\nexport const RECEIVE_USER = \"API_RECEIVE_USER\";\nexport const RESET_USER = \"API_RESET_USER\";\nexport const REQUEST_LOGIN = \"API_REQUEST_LOGIN\";\nexport const RECEIVE_LOGIN = \"API_RECEIVE_LOGIN\";\nexport const KEY_MISMATCH = \"KEY_MISMATCH\";\nexport const REQUEST_FORGOTTEN_PASSWORD_REQUEST =\n  \"API_REQUEST_FORGOTTEN_PASSWORD_REQUEST\";\nexport const RECEIVE_FORGOTTEN_PASSWORD_REQUEST =\n  \"API_RECEIVE_FORGOTTEN_PASSWORD_REQUEST\";\nexport const RESET_FORGOTTEN_PASSWORD_REQUEST =\n  \"API_RESET_FORGOTTEN_PASSWORD_REQUEST\";\nexport const REQUEST_RESEND_VERIFICATION_EMAIL =\n  \"API_REQUEST_RESEND_VERIFICATION_EMAIL\";\nexport const RECEIVE_RESEND_VERIFICATION_EMAIL =\n  \"API_RECEIVE_RESEND_VERIFICATION_EMAIL\";\nexport const RESET_RESEND_VERIFICATION_EMAIL =\n  \"API_RESET_RESEND_VERIFICATION_EMAIL\";\nexport const REQUEST_PASSWORD_RESET_REQUEST =\n  \"API_REQUEST_PASSWORD_RESET_REQUEST\";\nexport const RECEIVE_PASSWORD_RESET_REQUEST =\n  \"API_RECEIVE_PASSWORD_RESET_REQUEST\";\nexport const RESET_PASSWORD_RESET_REQUEST = \"API_RESET_PASSWORD_RESET_REQUEST\";\nexport const REQUEST_LOGOUT = \"API_REQUEST_LOGOUT\";\nexport const RECEIVE_LOGOUT = \"API_RECEIVE_LOGOUT\";\nexport const REQUEST_USER_PROPOSALS = \"API_REQUEST_USER_PROPOSALS\";\nexport const RECEIVE_USER_PROPOSALS = \"API_RECEIVE_USER_PROPOSALS\";\nexport const REQUEST_VETTED = \"API_REQUEST_VETTED\";\nexport const RECEIVE_VETTED = \"API_RECEIVE_VETTED\";\nexport const REQUEST_UNVETTED = \"API_REQUEST_UNVETTED\";\nexport const RECEIVE_UNVETTED = \"API_RECEIVE_UNVETTED\";\nexport const REQUEST_PROPOSAL = \"API_REQUEST_PROPOSAL\";\nexport const RECEIVE_PROPOSAL = \"API_RECEIVE_PROPOSAL\";\nexport const REQUEST_PROPOSAL_COMMENTS = \"API_REQUEST_PROPOSAL_COMMENTS\";\nexport const RECEIVE_PROPOSAL_COMMENTS = \"API_RECEIVE_PROPOSAL_COMMENTS\";\nexport const REQUEST_NEW_PROPOSAL = \"API_REQUEST_NEW_PROPOSAL\";\nexport const RECEIVE_NEW_PROPOSAL = \"API_RECEIVE_NEW_PROPOSAL\";\n\nexport const REQUEST_EDIT_PROPOSAL = \"API_REQUEST_EDIT_PROPOSAL\";\nexport const RECEIVE_EDIT_PROPOSAL = \"API_RECEIVE_EDIT_PROPOSAL\";\nexport const REQUEST_NEW_COMMENT = \"API_REQUEST_NEW_COMMENT\";\nexport const RECEIVE_NEW_COMMENT = \"API_RECEIVE_NEW_COMMENT\";\nexport const RESET_PROPOSAL = \"API_RESET_PROPOSAL\";\nexport const RESET_INVOICE = \"API_RESET_INVOICE\";\nexport const REQUEST_SETSTATUS_PROPOSAL = \"API_REQUEST_SETSTATUS_PROPOSAL\";\nexport const RECEIVE_SETSTATUS_PROPOSAL = \"API_RECEIVE_SETSTATUS_PROPOSAL\";\nexport const SET_PROPOSAL_APPROVED = \"SET_PROPOSAL_APPROVED\";\nexport const SET_VOTES_END_HEIGHT = \"SET_VOTES_END_HEIGHT\";\nexport const REQUEST_START_VOTE = \"API_REQUEST_START_VOTE\";\nexport const RECEIVE_START_VOTE = \"API_RECEIVE_START_VOTE\";\nexport const REQUEST_UPDATED_KEY = \"API_REQUEST_UPDATED_KEY\";\nexport const RECEIVE_UPDATED_KEY = \"API_RECEIVE_UPDATED_KEY\";\nexport const REQUEST_VERIFIED_KEY = \"API_REQUEST_VERIFIED_KEY\";\nexport const RECEIVE_VERIFIED_KEY = \"API_RECEIVE_VERIFIED_KEY\";\nexport const REQUEST_USERNAMES_BY_ID = \"API_REQUEST_USERNAMES_BY_ID\";\nexport const RECEIVE_USERNAMES_BY_ID = \"API_RECEIVE_USERNAMES_BY_ID\";\nexport const REDIRECTED_FROM = \"REDIRECTED_FROM\";\nexport const RESET_REDIRECTED_FROM = \"RESET_REDIRECTED_FROM\";\nexport const CHANGE_ADMIN_FILTER_VALUE = \"CHANGE_ADMIN_FILTER_VALUE\";\nexport const CHANGE_PUBLIC_FILTER_VALUE = \"CHANGE_PUBLIC_FILTER_VALUE\";\nexport const CHANGE_USER_FILTER_VALUE = \"CHANGE_USER_FILTER_VALUE\";\nexport const CHANGE_DATE_FILTER = \"CHANGE_DATE_FILTER\";\nexport const RESET_DATE_FILTER = \"RESET_DATE_FILTER\";\n\nexport const REQUEST_LIKE_COMMENT = \"API_REQUEST_LIKE_COMMENT\";\nexport const RECEIVE_LIKE_COMMENT = \"API_RECEIVE_LIKE_COMMENT\";\nexport const RECEIVE_SYNC_LIKE_COMMENT = \"RECEIVE_SYNC_LIKE_COMMENT\";\nexport const RESET_SYNC_LIKE_COMMENT = \"RESET_SYNC_LIKE_COMMENT\";\n\nexport const REQUEST_CENSOR_COMMENT = \"API_REQUEST_CENSOR_COMMENT\";\nexport const RECEIVE_CENSOR_COMMENT = \"API_RECEIVE_CENSOR_COMMENT\";\n\nexport const REQUEST_LIKED_COMMENTS = \"API_REQUEST_LIKED_COMMENTS\";\nexport const RECEIVE_LIKED_COMMENTS = \"API_RECEIVE_LIKED_COMMENTS\";\n\nexport const REQUEST_UNVETTED_STATUS = \"API_REQUEST_UNVETTED_STATUS\";\nexport const RECEIVE_UNVETTED_STATUS = \"API_RECEIVE_UNVETTED_STATUS\";\n\nexport const REQUEST_EDIT_USER = \"API_REQUEST_EDIT_USER\";\nexport const RECEIVE_EDIT_USER = \"API_RECEIVE_EDIT_USER\";\nexport const RESET_EDIT_USER = \"API_RESET_EDIT_USER\";\n\nexport const REQUEST_MANAGE_USER = \"API_REQUEST_MANAGE_USER\";\nexport const RECEIVE_MANAGE_USER = \"API_RECEIVE_MANAGE_USER\";\n\nexport const REQUEST_PROPOSAL_VOTE_STATUS = \"API_REQUEST_PROPOSAL_VOTE_STATUS\";\nexport const RECEIVE_PROPOSAL_VOTE_STATUS = \"API_RECEIVE_PROPOSAL_VOTE_STATUS\";\n\nexport const REQUEST_PROPOSAL_VOTE_RESULTS =\n  \"API_REQUEST_PROPOSAL_VOTE_RESULTS\";\nexport const RECEIVE_PROPOSAL_VOTE_RESULTS =\n  \"API_RECEIVE_PROPOSAL_VOTE_RESULTS\";\n\nexport const REQUEST_PROPOSALS_VOTE_STATUS =\n  \"API_REQUEST_PROPOSALS_VOTE_STATUS\";\nexport const RECEIVE_PROPOSALS_VOTE_STATUS =\n  \"API_RECEIVE_PROPOSALS_VOTE_STATUS\";\n\nexport const REQUEST_USER_SEARCH = \"API_REQUEST_USER_SEARCH\";\nexport const RECEIVE_USER_SEARCH = \"API_RECEIVE_USER_SEARCH\";\n\nexport const SAVE_DRAFT_PROPOSAL = \"SAVE_DRAFT_PROPOSAL\";\nexport const DELETE_DRAFT_PROPOSAL = \"DELETE_DRAFT_PROPOSAL\";\nexport const LOAD_DRAFT_PROPOSALS = \"LOAD_DRAFT_PROPOSALS\";\n\nexport const REQUEST_SET_VISITED_PROPOSAL = \"REQUEST_SET_VISITED_PROPOSAL\";\nexport const RECEIVE_SET_VISITED_PROPOSAL = \"RECEIVE_SET_VISITED_PROPOSAL\";\nexport const REQUEST_GET_VISITED_PROPOSAL = \"REQUEST_GET_VISITED_PROPOSAL\";\nexport const RECEIVE_GET_VISITED_PROPOSAL = \"RECEIVE_GET_VISITED_PROPOSAL\";\n\nexport const SAVE_PAYMENT_POLLING_QUEUE = \"SAVE_PAYMENT_POLLING_QUEUE\";\nexport const UPDATE_PAYMENT_POLLING_QUEUE = \"UPDATE_PAYMENT_POLLING_QUEUE\";\nexport const SET_PAYMENT_POLLING_QUEUE = \"SET_PAYMENT_POLLING_QUEUE\";\n\nexport const REQUEST_PROPOSAL_PAYWALL_DETAILS =\n  \"API_REQUEST_PROPOSAL_PAYWALL_DETAILS\";\nexport const RECEIVE_PROPOSAL_PAYWALL_DETAILS =\n  \"API_RECEIVE_PROPOSAL_PAYWALL_DETAILS\";\nexport const REQUEST_UPDATE_PROPOSAL_CREDITS =\n  \"API_REQUEST_UPDATE_PROPOSAL_CREDITS\";\nexport const RECEIVE_UPDATE_PROPOSAL_CREDITS =\n  \"API_RECEIVE_UPDATE_PROPOSAL_CREDITS\";\nexport const REQUEST_USER_PROPOSAL_CREDITS =\n  \"API_REQUEST_USER_PROPOSAL_CREDITS\";\nexport const RECEIVE_USER_PROPOSAL_CREDITS =\n  \"API_RECEIVE_USER_PROPOSAL_CREDITS\";\n\nexport const LOAD_ME = \"LOAD_ME\";\n\nexport const CLEAN_ERRORS = \"CLEAN_ERRORS\";\n\nexport const REQUEST_SIGNUP_CONFIRMATION = \"REQUEST_SIGNUP_CONFIRMATION\";\nexport const RESET_SIGNUP_CONFIRMATION = \"RESET_SIGNUP_CONFIRMATION\";\nexport const SET_REPLY_PARENT = \"SET_REPLY_PARENT\";\nexport const RECEIVE_USERNAMES = \"SET_USERNAMES\";\n\nexport const OPEN_MODAL = \"OPEN_MODAL\";\nexport const CLOSE_MODAL = \"CLOSE_MODAL\";\nexport const CLOSE_ALL_MODALS = \"CLOSE_ALL_MODALS\";\nexport const CONFIRM_MODAL = \"CONFIRM_WITH_MODAL\";\n\nexport const RECEIVE_NEW_THREAD_COMMENT = \"RECEIVE_NEW_THREAD_COMMENT\";\n\nexport const REQUEST_GET_LAST_BLOCK_HEIGHT =\n  \"EXTERNAL_API_REQUEST_GET_LAST_BLOCK_HEIGHT\";\nexport const RECEIVE_GET_LAST_BLOCK_HEIGHT =\n  \"EXTERNAL_API_RECEIVE_GET_LAST_BLOCK_HEIGHT\";\n\nexport const CSRF_NEEDED = \"API_CSRF_NEEDED\";\nexport const SHOULD_AUTO_VERIFY_KEY = \"API_SHOULD_AUTO_VERIFY_KEY\";\n\nexport const IDENTITY_IMPORTED = \"IDENTITY_IMPORTED\";\n\nexport const RESET_LAST_SUBMITTED = \"RESET_LAST_SUBMITTED\";\n\nexport const SET_ONBOARD_AS_VIEWED = \"SET_ONBOARD_AS_VIEWED\";\n\nexport const SET_COMMENTS_SORT_OPTION = \"SET_COMMENTS_SORT_OPTION\";\n\nexport const REQUEST_AUTHORIZE_VOTE = \"REQUEST_AUTHORIZE_VOTE\";\nexport const RECEIVE_AUTHORIZE_VOTE = \"RECEIVE_AUTHORIZE_VOTE\";\n\nexport const RECEIVE_REVOKE_AUTH_VOTE = \"RECEIVE_REVOKE_AUTH_VOTE\";\n\nexport const REQUEST_PROPOSAL_PAYWALL_PAYMENT =\n  \"REQUEST_PROPOSAL_PAYWALL_PAYMENT\";\nexport const RECEIVE_PROPOSAL_PAYWALL_PAYMENT =\n  \"RECEIVE_PROPOSAL_PAYWALL_PAYMENT\";\n\nexport const TOGGLE_CREDITS_PAYMENT_POLLING = \"TOGGLE_CREDITS_PAYMENT_POLLING\";\nexport const TOGGLE_PROPOSAL_PAYMENT_RECEIVED =\n  \"TOGGLE_PROPOSAL_PAYMENT_RECEIVED\";\n\nexport const RESET_PAYWALL_INFO = \"RESET_PAYWALL_INFO\";\n\nexport const REQUEST_RESCAN_USER_PAYMENTS = \"REQUEST_RESCAN_USER_PAYMENTS\";\nexport const RECEIVE_RESCAN_USER_PAYMENTS = \"RECEIVE_RESCAN_USER_PAYMENTS\";\nexport const RESET_RESCAN_USER_PAYMENTS = \"RESET_RESCAN_USER_PAYMENTS\";\n\nexport const REQUEST_TOKEN_INVENTORY = \"REQUEST_TOKEN_INVENTORY\";\nexport const RECEIVE_TOKEN_INVENTORY = \"RECEIVE_TOKEN_INVENTORY\";\n\nexport const REQUEST_RESET_PASSWORD = \"REQUEST_RESET_PASSWORD\";\nexport const RECEIVE_RESET_PASSWORD = \"RECEIVE_RESET_PASSWORD\";\n\nexport const REQUEST_VERIFY_RESET_PASSWORD = \"REQUEST_VERIFY_RESET_PASSWORD\";\nexport const RECEIVE_VERIFY_RESET_PASSWORD = \"RECEIVE_VERIFY_RESET_PASSWORD\";\n\nexport const RESET_RESET_PASSWORD = \"RESET_RESET_PASSWORD\";\n\n// CMS\nexport const REQUEST_INVITE_USER = \"REQUEST_INVITE_USER\";\nexport const RECEIVE_INVITE_USER = \"RECEIVE_INVITE_USER\";\nexport const RESET_INVITE_USER = \"RESET_INVITE_USER\";\nexport const REQUEST_NEW_INVOICE = \"API_REQUEST_NEW_INVOICE\";\nexport const RECEIVE_NEW_INVOICE = \"API_RECEIVE_NEW_INVOICE\";\n\nexport const REQUEST_EDIT_INVOICE = \"API_REQUEST_EDIT_INVOICE\";\nexport const RECEIVE_EDIT_INVOICE = \"API_RECEIVE_EDIT_INVOICE\";\n\nexport const REQUEST_USER_INVOICES = \"API_REQUEST_USER_INVOICES\";\nexport const RECEIVE_USER_INVOICES = \"API_RECEIVE_USER_INVOICES\";\n\nexport const REQUEST_ADMIN_INVOICES = \"API_REQUEST_ADMIN_INVOICES\";\nexport const RECEIVE_ADMIN_INVOICES = \"API_RECEIVE_ADMIN_INVOICES\";\n\nexport const REQUEST_INVOICE = \"API_REQUEST_INVOICE\";\nexport const RECEIVE_INVOICE = \"API_RECEIVE_INVOICE\";\n\nexport const SAVE_DRAFT_INVOICE = \"SAVE_DRAFT_INVOICE\";\nexport const DELETE_DRAFT_INVOICE = \"DELETE_DRAFT_INVOICE\";\nexport const LOAD_DRAFT_INVOICES = \"LOAD_DRAFT_INVOICES\";\n\nexport const REQUEST_INVOICE_COMMENTS = \"API_REQUEST_INVOICE_COMMENTS\";\nexport const RECEIVE_INVOICE_COMMENTS = \"API_RECEIVE_INVOICE_COMMENTS\";\nexport const RECEIVE_NEW_INVOICE_COMMENT = \"API_RECEIVE_NEW_INVOICE_COMMENT\";\nexport const RECEIVE_CENSOR_INVOICE_COMMENT =\n  \"API_RECEIVE_CENSOR_INVOICE_COMMENT\";\n\nexport const REQUEST_SETSTATUS_INVOICE = \"API_REQUEST_SETSTATUS_INVOICE\";\nexport const RECEIVE_SETSTATUS_INVOICE = \"API_RECEIVE_SETSTATUS_INVOICE\";\n\nexport const REQUEST_GENERATE_PAYOUTS = \"API_REQUEST_GENERATE_PAYOUTS\";\nexport const RECEIVE_GENERATE_PAYOUTS = \"API_RECEIVE_GENERATE_PAYOUTS\";\n\nexport const REQUEST_PAY_APPROVED = \"API_REQUEST_PAY_APPROVED\";\nexport const RECEIVE_PAY_APPROVED = \"API_RECEIVE_PAY_APPROVED\";\n\nexport const REQUEST_EXCHANGE_RATE = \"API_REQUEST_EXCHANGE_RATE\";\nexport const RECEIVE_EXCHANGE_RATE = \"API_RECEIVE_EXCHANGE_RATE\";\n\nexport const RESET_COMMENTS = \"API_RESET_COMMENTS\";\n","import Promise from \"promise\";\nimport * as modalTypes from \"../components/Modal/modalTypes\";\nimport { PROPOSAL_STATUS_PUBLIC } from \"../constants\";\nimport * as api from \"../lib/api\";\nimport {\n  resetNewInvoiceData,\n  resetNewProposalData\n} from \"../lib/editors_content_backup\";\nimport { clearStateLocalStorage } from \"../lib/local_storage\";\nimport * as pki from \"../lib/pki\";\nimport * as sel from \"../selectors\";\nimport * as external_api_actions from \"./external_api\";\nimport { callAfterMinimumWait } from \"./lib\";\nimport act from \"./methods\";\nimport { closeModal, confirmWithModal, openModal } from \"./modal\";\n\nexport const onResetProposal = act.RESET_PROPOSAL;\nexport const onResetInvoice = act.RESET_INVOICE;\n\nexport const onSetEmail = act.SET_EMAIL;\n\nexport const onSignup = act.REQUEST_SIGNUP_CONFIRMATION;\nexport const onResetSignup = act.RESET_SIGNUP_CONFIRMATION;\nexport const onResetRescanUserPayments = act.RESET_RESCAN_USER_PAYMENTS;\nexport const onSignupConfirm = (props, isCMS) => dispatch => {\n  if (isCMS) {\n    dispatch(onCreateNewUserCMS(props));\n  } else {\n    dispatch(onCreateNewUser(props));\n  }\n};\n\nexport const requestApiInfo = (fetchUser = true) => dispatch => {\n  dispatch(act.REQUEST_INIT_SESSION());\n  return api\n    .apiInfo()\n    .then(response => {\n      dispatch(act.RECEIVE_INIT_SESSION(response));\n\n      // if there is an active session, try to fetch the user information\n      // otherwise we make sure there are no user data saved into localstorage\n      if (!response.activeusersession) {\n        clearStateLocalStorage();\n      } else if (fetchUser) {\n        dispatch(onRequestMe());\n      }\n\n      return response;\n    })\n    .catch(error => {\n      dispatch(act.RECEIVE_INIT_SESSION(null, error));\n      throw error;\n    });\n};\n\nexport const onRequestMe = () => (dispatch, getState) => {\n  dispatch(act.REQUEST_ME());\n  return api\n    .me()\n    .then(response => {\n      dispatch(act.RECEIVE_ME(response));\n      if (sel.usePaywall(getState())) {\n        dispatch(act.SET_PROPOSAL_CREDITS(response.proposalcredits));\n\n        // Start polling for the user paywall tx, if applicable.\n        const paywallAddress = sel.paywallAddress(getState());\n        if (paywallAddress) {\n          const paywallAmount = sel.paywallAmount(getState());\n          const paywallTxNotBefore = sel.paywallTxNotBefore(getState());\n          dispatch(\n            external_api_actions.verifyUserPayment(\n              paywallAddress,\n              paywallAmount,\n              paywallTxNotBefore\n            )\n          );\n        }\n        return response;\n      }\n    })\n    .catch(error => {\n      dispatch(act.RECEIVE_ME(null, error));\n      clearStateLocalStorage();\n      throw error;\n    });\n};\n\nexport const updateMe = payload => dispatch => dispatch(act.UPDATE_ME(payload));\n\nexport const cleanErrors = act.CLEAN_ERRORS;\n\nexport const onGetPolicy = () => dispatch => {\n  dispatch(act.REQUEST_POLICY());\n  return api\n    .policy()\n    .then(response => dispatch(act.RECEIVE_POLICY(response)))\n    .catch(error => {\n      dispatch(act.RECEIVE_POLICY(null, error));\n      throw error;\n    });\n};\n\nexport const withCsrf = fn => (dispatch, getState) => {\n  const csrf = sel.csrf(getState());\n  const csrfIsNeeded = sel.getCsrfIsNeeded(getState());\n  if (csrf || csrfIsNeeded) return fn(dispatch, getState, csrf);\n\n  dispatch(act.CSRF_NEEDED(true));\n  return dispatch(requestApiInfo()).then(() =>\n    withCsrf(fn)(dispatch, getState)\n  );\n};\n\nexport const onInviteUserConfirm = ({ email }) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_INVITE_USER({ email }));\n    return api\n      .inviteNewUser(csrf, email)\n      .then(response => {\n        dispatch(act.RECEIVE_INVITE_USER(response));\n        dispatch(closeModal());\n      })\n      .catch(error => {\n        if (error.toString() === \"Error: No available storage method found.\") {\n          //local storage error\n          dispatch(\n            act.RECEIVE_INVITE_USER(\n              null,\n              new Error(\"CMS requires local storage to work.\")\n            )\n          );\n        } else {\n          dispatch(act.RECEIVE_INVITE_USER(null, error));\n        }\n        throw error;\n      });\n  });\n\nexport const onCreateNewUser = ({ email, username, password }) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_NEW_USER({ email }));\n    return api\n      .newUser(csrf, email, username, password)\n      .then(response => {\n        dispatch(act.RECEIVE_NEW_USER(response));\n        dispatch(closeModal());\n      })\n      .catch(error => {\n        if (error.toString() === \"Error: No available storage method found.\") {\n          //local storage error\n          dispatch(\n            act.RECEIVE_NEW_USER(\n              null,\n              new Error(\"Politeia requires local storage to work.\")\n            )\n          );\n        } else {\n          dispatch(act.RECEIVE_NEW_USER(null, error));\n        }\n        throw error;\n      });\n  });\n\nexport const onCreateNewUserCMS = ({\n  email,\n  username,\n  password,\n  verificationtoken\n}) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_NEW_USER({ email }));\n    return api\n      .register(csrf, email, username, password, verificationtoken)\n      .then(response => {\n        dispatch(act.RECEIVE_NEW_USER(response));\n        dispatch(closeModal());\n      })\n      .catch(error => {\n        if (error.toString() === \"Error: No available storage method found.\") {\n          //local storage error\n          dispatch(\n            act.RECEIVE_NEW_USER(\n              null,\n              new Error(\"CMS requires local storage to work.\")\n            )\n          );\n        } else {\n          dispatch(act.RECEIVE_NEW_USER(null, error));\n        }\n        throw error;\n      });\n  });\n\nexport const onResetNewUser = act.RESET_NEW_USER;\n\nexport const onVerifyNewUser = (email, verificationToken) => dispatch => {\n  dispatch(act.REQUEST_VERIFY_NEW_USER({ email, verificationToken }));\n  return api\n    .verifyNewUser(email, verificationToken)\n    .then(res => dispatch(act.RECEIVE_VERIFY_NEW_USER(res)))\n    .catch(err => {\n      dispatch(act.RECEIVE_VERIFY_NEW_USER(null, err));\n      throw err;\n    });\n};\n\nexport const onSearchUser = query => dispatch => {\n  dispatch(act.REQUEST_USER_SEARCH());\n  return api\n    .searchUser(query)\n    .then(res => dispatch(act.RECEIVE_USER_SEARCH(res)))\n    .catch(err => {\n      dispatch(act.RECEIVE_USER_SEARCH(null, err));\n      throw err;\n    });\n};\n\nexport const onLogin = ({ username, password }) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_LOGIN({ username }));\n    return api\n      .login(csrf, username, password)\n      .then(response => {\n        dispatch(act.RECEIVE_LOGIN(response));\n        if (sel.usePaywall(getState())) {\n          dispatch(act.SET_PROPOSAL_CREDITS(response.proposalcredits));\n        }\n        dispatch(closeModal());\n        return response;\n      })\n      .then(() => dispatch(onRequestMe()))\n      .catch(error => {\n        dispatch(act.RECEIVE_LOGIN(null, error));\n        throw error;\n      });\n  });\n\n// handleLogout handles all the procedure to be done once the user is logged out\n// it can be called either when the logout request has been successful or when the\n// session has already expired\nexport const handleLogout = response => dispatch => {\n  dispatch(act.RECEIVE_LOGOUT(response));\n  clearStateLocalStorage();\n  external_api_actions.clearPollingPointer();\n  dispatch(onSetEmail(\"\"));\n};\n\nexport const onLogout = () =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_LOGOUT());\n    return api\n      .logout(csrf)\n      .then(response => {\n        dispatch(handleLogout(response));\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_LOGOUT(null, error));\n      });\n  });\n\nexport const onChangeUsername = (password, newUsername) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_CHANGE_USERNAME());\n    return api\n      .changeUsername(csrf, password, newUsername)\n      .then(response =>\n        dispatch(\n          act.RECEIVE_CHANGE_USERNAME({ ...response, username: newUsername })\n        )\n      )\n      .catch(error => {\n        dispatch(act.RECEIVE_CHANGE_USERNAME(null, error));\n        throw error;\n      });\n  });\n\nexport const onChangePassword = (password, newPassword) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_CHANGE_PASSWORD());\n    return api\n      .changePassword(csrf, password, newPassword)\n      .then(response => dispatch(act.RECEIVE_CHANGE_PASSWORD(response)))\n      .catch(error => {\n        dispatch(act.RECEIVE_CHANGE_PASSWORD(null, error));\n        throw error;\n      });\n  });\n\nexport const onFetchUserProposals = (userid, token) => dispatch => {\n  dispatch(act.REQUEST_USER_PROPOSALS());\n  return api\n    .userProposals(userid, token)\n    .then(response => dispatch(act.RECEIVE_USER_PROPOSALS(response)))\n    .catch(error => {\n      dispatch(act.RECEIVE_USER_PROPOSALS(null, error));\n    });\n};\n\nexport const onFetchUserInvoices = (userid, token) => dispatch => {\n  dispatch(act.REQUEST_USER_INVOICES());\n  return api\n    .userInvoices(userid, token)\n    .then(response => dispatch(act.RECEIVE_USER_INVOICES(response)))\n    .catch(error => {\n      dispatch(act.RECEIVE_USER_INVOICES(null, error));\n    });\n};\n\nexport const onFetchInvoiceComments = token => dispatch => {\n  dispatch(act.REQUEST_INVOICE_COMMENTS());\n  return api\n    .invoiceComments(token)\n    .then(response => {\n      dispatch(act.RECEIVE_INVOICE_COMMENTS(response));\n    })\n    .catch(error => {\n      dispatch(act.RECEIVE_INVOICE_COMMENTS(null, error));\n    });\n};\n\nexport const onFetchAdminInvoices = () =>\n  withCsrf((dispatch, _, csrf) => {\n    dispatch(act.REQUEST_ADMIN_INVOICES());\n    return api\n      .adminInvoices(csrf)\n      .then(response => dispatch(act.RECEIVE_ADMIN_INVOICES(response)))\n      .catch(error => {\n        dispatch(act.RECEIVE_ADMIN_INVOICES(null, error));\n      });\n  });\n\nexport const onFetchVetted = token => dispatch => {\n  dispatch(act.REQUEST_VETTED());\n  return api\n    .vetted(token)\n    .then(response => dispatch(act.RECEIVE_VETTED(response)))\n    .catch(error => {\n      dispatch(act.RECEIVE_VETTED(null, error));\n    });\n};\n\nexport const onFetchVettedByTokens = (\n  tokens,\n  fetchVoteStatus = true\n) => async dispatch => {\n  dispatch(act.REQUEST_VETTED(tokens));\n  try {\n    let promises = tokens.map(t => api.proposal(t));\n\n    if (fetchVoteStatus) {\n      const voteStatusPromises = tokens.map(t =>\n        dispatch(onFetchProposalVoteStatus(t))\n      );\n      promises = promises.concat(voteStatusPromises);\n    }\n    const res = await Promise.all(promises);\n\n    // filter only proposals responses\n    const proposals = res.filter(r => r && r.proposal).map(r => r.proposal);\n\n    return dispatch(act.RECEIVE_VETTED({ proposals }));\n  } catch (error) {\n    dispatch(act.RECEIVE_VETTED(null, error));\n  }\n};\n\nexport const onFetchTokenInventory = () => dispatch => {\n  dispatch(act.REQUEST_TOKEN_INVENTORY());\n  return api\n    .tokenInventory()\n    .then(tokenInventory =>\n      dispatch(act.RECEIVE_TOKEN_INVENTORY(tokenInventory))\n    )\n    .catch(error => {\n      dispatch(act.RECEIVE_TOKEN_INVENTORY(null, error));\n    });\n};\n\nexport const onFetchUnvettedStatus = () => dispatch => {\n  dispatch(act.REQUEST_UNVETTED_STATUS());\n  return api\n    .status()\n    .then(response => dispatch(act.RECEIVE_UNVETTED_STATUS(response)))\n    .catch(error => {\n      dispatch(act.RECEIVE_UNVETTED_STATUS(null, error));\n    });\n};\n\nexport const onFetchUnvetted = token => dispatch => {\n  dispatch(act.REQUEST_UNVETTED());\n  return api\n    .unvetted(token)\n    .then(response => dispatch(act.RECEIVE_UNVETTED(response)))\n    .catch(error => {\n      dispatch(act.RECEIVE_UNVETTED(null, error));\n    });\n};\n\nexport const onFetchProposal = (token, version = null) => dispatch => {\n  dispatch(act.REQUEST_PROPOSAL(token));\n  return api\n    .proposal(token, version)\n    .then(response => {\n      response && response.proposal && Object.keys(response.proposal).length > 0\n        ? dispatch(act.RECEIVE_PROPOSAL(response))\n        : dispatch(\n            act.RECEIVE_PROPOSAL(\n              null,\n              new Error(\"The requested proposal does not exist.\")\n            )\n          );\n    })\n    .catch(error => {\n      dispatch(act.RECEIVE_PROPOSAL(null, error));\n    });\n};\n\nexport const onFetchInvoice = (token, version = null) => dispatch => {\n  dispatch(act.REQUEST_INVOICE(token));\n  return api\n    .invoice(token, version)\n    .then(response => {\n      response && response.invoice && Object.keys(response.invoice).length > 0\n        ? dispatch(act.RECEIVE_INVOICE(response))\n        : dispatch(\n            act.RECEIVE_PROPOSAL(\n              null,\n              new Error(\"The requested invoice does not exist.\")\n            )\n          );\n    })\n    .catch(error => {\n      dispatch(act.RECEIVE_INVOICE(null, error));\n    });\n};\n\nexport const onFetchUser = userId => dispatch => {\n  dispatch(act.RESET_EDIT_USER());\n  dispatch(act.REQUEST_USER(userId));\n  const regexp = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n  const valid = regexp.test(userId);\n  if (!valid)\n    return dispatch(act.RECEIVE_USER(null, \"This is not a valid user ID.\"));\n  return api\n    .user(userId)\n    .then(response => dispatch(act.RECEIVE_USER(response)))\n    .catch(error => {\n      dispatch(act.RECEIVE_USER(null, error));\n    });\n};\n\nexport const onFetchProposalComments = token =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_PROPOSAL_COMMENTS(token));\n    return api\n      .proposalComments(token, csrf)\n      .then(response => dispatch(act.RECEIVE_PROPOSAL_COMMENTS(response)))\n      .catch(error => {\n        dispatch(act.RECEIVE_PROPOSAL_COMMENTS(null, error));\n      });\n  });\n\nexport const onFetchLikedComments = token => dispatch => {\n  dispatch(act.REQUEST_LIKED_COMMENTS(token));\n  return api\n    .likedComments(token)\n    .then(response => dispatch(act.RECEIVE_LIKED_COMMENTS(response)))\n    .catch(error => {\n      dispatch(act.RECEIVE_LIKED_COMMENTS(null, error));\n    });\n};\n\nexport const onEditUser = preferences =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_EDIT_USER(preferences));\n    return api\n      .editUser(csrf, preferences)\n      .then(response => dispatch(act.RECEIVE_EDIT_USER(response)))\n      .catch(error => {\n        dispatch(act.RECEIVE_EDIT_USER(null, error));\n      });\n  });\n\n// TODO: erase this after the refactor and make the onManageUserv2 official\nexport const onManageUser = (userId, action) =>\n  withCsrf((dispatch, getState, csrf) => {\n    return dispatch(\n      confirmWithModal(modalTypes.CONFIRM_ACTION_WITH_REASON, {})\n    ).then(({ confirm, reason }) => {\n      if (confirm) {\n        dispatch(act.REQUEST_MANAGE_USER({ userId, action, reason }));\n        return api\n          .manageUser(csrf, userId, action, reason)\n          .then(response => dispatch(act.RECEIVE_MANAGE_USER(response)))\n          .catch(error => {\n            dispatch(act.RECEIVE_MANAGE_USER(null, error));\n          });\n      }\n    });\n  });\n\nexport const onManageUserv2 = (userId, action, reason) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_MANAGE_USER({ userId, action, reason }));\n    return api\n      .manageUser(csrf, userId, action, reason)\n      .then(response => dispatch(act.RECEIVE_MANAGE_USER(response)))\n      .catch(error => {\n        dispatch(act.RECEIVE_MANAGE_USER(null, error));\n      });\n  });\n\nexport const onSubmitInvoice = (\n  loggedInAsEmail,\n  userid,\n  username,\n  month,\n  year,\n  exchangerate,\n  name,\n  location,\n  contact,\n  rate,\n  address,\n  lineItems,\n  files\n) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(\n      act.REQUEST_NEW_INVOICE({\n        month,\n        year,\n        exchangerate,\n        name,\n        location,\n        contact,\n        rate,\n        address,\n        lineItems,\n        files\n      })\n    );\n    return Promise.resolve(\n      api.makeInvoice(\n        month,\n        year,\n        exchangerate,\n        name,\n        location,\n        contact,\n        rate,\n        address,\n        lineItems,\n        files\n      )\n    )\n      .then(invoice => api.signRegister(loggedInAsEmail, invoice))\n      .then(invoice => api.newInvoice(csrf, invoice))\n      .then(invoice => {\n        dispatch(\n          act.RECEIVE_NEW_INVOICE({\n            ...invoice,\n            numcomments: 0,\n            userid,\n            username\n          })\n        );\n        resetNewInvoiceData();\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_NEW_INVOICE(null, error));\n        resetNewProposalData();\n        throw error;\n      });\n  });\n\nexport const onSubmitProposal = (\n  loggedInAsEmail,\n  userid,\n  username,\n  name,\n  description,\n  files\n) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_NEW_PROPOSAL({ name, description, files }));\n    return Promise.resolve(api.makeProposal(name, description, files))\n      .then(proposal => api.signRegister(loggedInAsEmail, proposal))\n      .then(proposal => api.newProposal(csrf, proposal))\n      .then(proposal => {\n        dispatch(\n          act.RECEIVE_NEW_PROPOSAL({\n            ...proposal,\n            numcomments: 0,\n            userid,\n            username,\n            name,\n            description\n          })\n        );\n        resetNewProposalData();\n      })\n      .then(() => {\n        dispatch(act.SUBTRACT_PROPOSAL_CREDITS(1));\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_NEW_PROPOSAL(null, error));\n        resetNewProposalData();\n        throw error;\n      });\n  });\n\nexport const onSubmitEditedProposal = (\n  loggedInAsEmail,\n  name,\n  description,\n  files,\n  token\n) =>\n  withCsrf((dispatch, _, csrf) => {\n    dispatch(act.REQUEST_EDIT_PROPOSAL({ name, description, files }));\n    return Promise.resolve(api.makeProposal(name, description, files))\n      .then(proposal => api.signRegister(loggedInAsEmail, proposal))\n      .then(proposal => api.editProposal(csrf, { ...proposal, token }))\n      .then(proposal => {\n        dispatch(act.RECEIVE_EDIT_PROPOSAL(proposal));\n        resetNewProposalData();\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_EDIT_PROPOSAL(null, error));\n        resetNewProposalData();\n        throw error;\n      });\n  });\n\nexport const onSubmitEditedInvoice = (\n  loggedInAsEmail,\n  userid,\n  username,\n  month,\n  year,\n  exchangerate,\n  name,\n  location,\n  contact,\n  rate,\n  address,\n  lineItems,\n  files,\n  token\n) =>\n  withCsrf((dispatch, _, csrf) => {\n    dispatch(\n      act.REQUEST_EDIT_INVOICE({\n        month,\n        year,\n        exchangerate,\n        name,\n        location,\n        contact,\n        rate,\n        address,\n        lineItems,\n        files\n      })\n    );\n    return Promise.resolve(\n      api.makeInvoice(\n        month,\n        year,\n        exchangerate,\n        name,\n        location,\n        contact,\n        rate,\n        address,\n        lineItems,\n        files\n      )\n    )\n      .then(invoice => api.signRegister(loggedInAsEmail, invoice))\n      .then(invoice => api.editInvoice(csrf, { ...invoice, token }))\n      .then(invoice => {\n        dispatch(\n          act.RECEIVE_EDIT_INVOICE({\n            ...invoice,\n            numcomments: 0,\n            userid,\n            username\n          })\n        );\n        resetNewInvoiceData();\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_EDIT_INVOICE(null, error));\n        resetNewInvoiceData();\n        throw error;\n      });\n  });\n\nexport const onLikeComment = (loggedInAsEmail, token, commentid, action) =>\n  withCsrf((dispatch, getState, csrf) => {\n    if (!loggedInAsEmail) {\n      dispatch(openModal(\"LOGIN\", {}, null));\n      return;\n    }\n    dispatch(act.REQUEST_LIKE_COMMENT({ commentid, token }));\n    dispatch(act.RECEIVE_SYNC_LIKE_COMMENT({ token, commentid, action }));\n    return Promise.resolve(api.makeLikeComment(token, action, commentid))\n      .then(comment => api.signLikeComment(loggedInAsEmail, comment))\n      .then(comment => api.likeComment(csrf, comment))\n      .catch(error => {\n        dispatch(act.RESET_SYNC_LIKE_COMMENT());\n        dispatch(act.RECEIVE_LIKE_COMMENT(null, error));\n      });\n  });\n\nexport const onCensorComment = (loggedInAsEmail, token, commentid, isCms) =>\n  withCsrf((dispatch, getState, csrf) => {\n    return dispatch(\n      confirmWithModal(modalTypes.CONFIRM_ACTION_WITH_REASON, {})\n    ).then(({ confirm, reason }) => {\n      if (confirm) {\n        dispatch(act.REQUEST_CENSOR_COMMENT({ commentid, token }));\n        return Promise.resolve(\n          api.makeCensoredComment(token, reason, commentid)\n        )\n          .then(comment => api.signCensorComment(loggedInAsEmail, comment))\n          .then(comment => api.censorComment(csrf, comment))\n          .then(response => {\n            if (response.receipt) {\n              !isCms\n                ? dispatch(act.RECEIVE_CENSOR_COMMENT(commentid, null))\n                : dispatch(act.RECEIVE_CENSOR_INVOICE_COMMENT(commentid, null));\n            }\n          })\n          .catch(error => {\n            dispatch(act.RECEIVE_CENSOR_COMMENT(null, error));\n          });\n      }\n    });\n  });\n\nexport const onSubmitComment = (\n  loggedInAsEmail,\n  token,\n  comment,\n  parentid,\n  commentid,\n  isCMS = false\n) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_NEW_COMMENT({ token, comment, parentid }));\n    return Promise.resolve(api.makeComment(token, comment, parentid))\n      .then(comment => api.signComment(loggedInAsEmail, comment))\n      .then(comment => api.newComment(csrf, comment))\n      .then(response => {\n        const responsecomment = response.comment;\n        !isCMS\n          ? dispatch(act.RECEIVE_NEW_COMMENT(responsecomment))\n          : dispatch(act.RECEIVE_NEW_INVOICE_COMMENT(responsecomment));\n        commentid &&\n          dispatch(\n            act.RECEIVE_NEW_THREAD_COMMENT({\n              id: commentid,\n              comment: responsecomment\n            })\n          );\n        return;\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_NEW_COMMENT(null, error));\n        throw error;\n      });\n  });\n\nexport const onUpdateUserKey = loggedInAsEmail =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_UPDATED_KEY());\n    return pki\n      .generateKeys()\n      .then(keys =>\n        pki.loadKeys(loggedInAsEmail, keys).then(() =>\n          api\n            .updateKeyRequest(csrf, pki.toHex(keys.publicKey))\n            .then(response => {\n              const { verificationtoken } = response;\n              if (verificationtoken) {\n                const { testnet } = getState().api.init.response;\n                if (testnet) {\n                  dispatch(act.SHOULD_AUTO_VERIFY_KEY(true));\n                }\n              }\n              return dispatch(\n                act.RECEIVE_UPDATED_KEY({ ...response, success: true })\n              );\n            })\n        )\n      )\n      .catch(error => {\n        dispatch(act.RECEIVE_UPDATED_KEY(null, error));\n        throw error;\n      });\n  });\n\nexport const onVerifyUserKey = (loggedInAsEmail, verificationtoken) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(\n      act.REQUEST_VERIFIED_KEY({ email: loggedInAsEmail, verificationtoken })\n    );\n    return api\n      .verifyKeyRequest(csrf, loggedInAsEmail, verificationtoken)\n      .then(response =>\n        dispatch(act.RECEIVE_VERIFIED_KEY({ ...response, success: true }))\n      )\n      .catch(error => {\n        dispatch(act.RECEIVE_VERIFIED_KEY(null, error));\n      });\n  });\n\nexport const onSetInvoiceStatus = (\n  authorid,\n  loggedInAsEmail,\n  token,\n  status,\n  version,\n  reason = \"\"\n) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_SETSTATUS_INVOICE({ status, token, reason }));\n    return api\n      .invoiceSetStatus(loggedInAsEmail, csrf, token, version, status, reason)\n      .then(({ invoice }) => {\n        dispatch(\n          act.RECEIVE_SETSTATUS_INVOICE({\n            invoice: {\n              ...invoice,\n              userid: authorid\n            }\n          })\n        );\n        // dispatch(onFetchUnvettedStatus());\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_SETSTATUS_INVOICE(null, error));\n      });\n  });\n\nexport const onSetProposalStatus = (\n  authorid,\n  loggedInAsEmail,\n  token,\n  status,\n  censorMessage = \"\"\n) => {\n  return withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_SETSTATUS_PROPOSAL({ status, token }));\n    if (status === 4) {\n      dispatch(act.SET_PROPOSAL_APPROVED(true));\n    }\n    return api\n      .proposalSetStatus(loggedInAsEmail, csrf, token, status, censorMessage)\n      .then(({ proposal }) => {\n        dispatch(\n          act.RECEIVE_SETSTATUS_PROPOSAL({\n            proposal: {\n              ...proposal,\n              userid: authorid\n            }\n          })\n        );\n        dispatch(onFetchUnvettedStatus());\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_SETSTATUS_PROPOSAL(null, error));\n      });\n  });\n};\n\nexport const redirectedFrom = location => dispatch =>\n  dispatch(act.REDIRECTED_FROM(location));\nexport const resetRedirectedFrom = () => dispatch =>\n  dispatch(act.RESET_REDIRECTED_FROM());\n\nexport const onForgottenPasswordRequest = ({ email }) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_FORGOTTEN_PASSWORD_REQUEST({ email }));\n    return api\n      .forgottenPasswordRequest(csrf, email)\n      .then(response =>\n        dispatch(act.RECEIVE_FORGOTTEN_PASSWORD_REQUEST(response))\n      )\n      .catch(error => {\n        dispatch(act.RECEIVE_FORGOTTEN_PASSWORD_REQUEST(null, error));\n        throw error;\n      });\n  });\n\nexport const resetForgottenPassword = () => dispatch =>\n  dispatch(act.RESET_FORGOTTEN_PASSWORD_REQUEST());\n\n// XXXX: Do not use this action for production code before the following\n// PR is meged: https://github.com/decred/politeia/pull/937\nexport const onResetPassword = ({ username, email }) =>\n  withCsrf((dispatch, _, csrf) => {\n    dispatch(act.REQUEST_RESET_PASSWORD({ username, email }));\n    return api\n      .resetPassword(csrf, username, email)\n      .then(response => dispatch(act.RECEIVE_RESET_PASSWORD(response)))\n      .catch(error => {\n        dispatch(act.RECEIVE_RESET_PASSWORD(null, error));\n        throw error;\n      });\n  });\n\n// XXXX: Do not use this action for production code before the following\n// PR is meged: https://github.com/decred/politeia/pull/937\nexport const onVerifyResetPassword = ({\n  username,\n  verificationtoken,\n  newpassword\n}) =>\n  withCsrf((dispatch, _, csrf) => {\n    dispatch(act.REQUEST_RESET_PASSWORD({ username }));\n    return api\n      .verifyResetPassword(csrf, username, verificationtoken, newpassword)\n      .then(response => dispatch(act.RECEIVE_VERIFY_RESET_PASSWORD(response)))\n      .catch(error => {\n        dispatch(act.RECEIVE_VERIFY_RESET_PASSWORD(null, error));\n        throw error;\n      });\n  });\n\nexport const onResendVerificationEmail = act.REQUEST_SIGNUP_CONFIRMATION;\nexport const onResendVerificationEmailConfirm = ({ email }) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_RESEND_VERIFICATION_EMAIL({ email }));\n    return api\n      .resendVerificationEmailRequest(csrf, email)\n      .then(response =>\n        dispatch(act.RECEIVE_RESEND_VERIFICATION_EMAIL(response))\n      )\n      .catch(error => {\n        dispatch(act.RECEIVE_RESEND_VERIFICATION_EMAIL(null, error));\n        throw error;\n      });\n  });\n\nexport const resetResendVerificationEmail = () => dispatch =>\n  dispatch(act.RESET_RESEND_VERIFICATION_EMAIL());\n\n// USING THIS ON PASSWORD RESET\nexport const onPasswordResetRequest = ({\n  email,\n  verificationtoken,\n  newpassword\n}) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(\n      act.REQUEST_PASSWORD_RESET_REQUEST({\n        email,\n        verificationtoken,\n        newpassword\n      })\n    );\n    return api\n      .passwordResetRequest(csrf, email, verificationtoken, newpassword)\n      .then(response => dispatch(act.RECEIVE_PASSWORD_RESET_REQUEST(response)))\n      .catch(error => {\n        dispatch(act.RECEIVE_PASSWORD_RESET_REQUEST(null, error));\n        throw error;\n      });\n  });\n\nexport const keyMismatch = payload => dispatch =>\n  dispatch(act.KEY_MISMATCH(payload));\n\nexport const resetPasswordReset = () => dispatch =>\n  dispatch(act.RESET_RESET_PASSWORD());\n\nexport const verifyUserPaymentWithPoliteia = txid => {\n  return api.verifyUserPayment(txid).then(response => response.haspaid);\n};\n\nexport const onStartVote = (loggedInAsEmail, token, duration, quorum, pass) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_START_VOTE({ token }));\n    return api\n      .startVote(loggedInAsEmail, csrf, token, duration, quorum, pass)\n      .then(response => {\n        dispatch(act.RECEIVE_START_VOTE({ ...response, success: true }));\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_START_VOTE(null, error));\n      });\n  });\n\nexport const onFetchProposalPaywallDetails = () => dispatch => {\n  dispatch(act.REQUEST_PROPOSAL_PAYWALL_DETAILS());\n  return api\n    .proposalPaywallDetails()\n    .then(response => dispatch(act.RECEIVE_PROPOSAL_PAYWALL_DETAILS(response)))\n    .catch(error => {\n      dispatch(act.RECEIVE_PROPOSAL_PAYWALL_DETAILS(null, error));\n    });\n};\n\nexport const onUpdateProposalCredits = () => dispatch => {\n  dispatch(act.REQUEST_UPDATE_PROPOSAL_CREDITS());\n\n  const dispatchAfterWaitFn = callAfterMinimumWait(response => {\n    dispatch(act.RECEIVE_UPDATE_PROPOSAL_CREDITS(response));\n    dispatch(act.SET_PROPOSAL_CREDITS(response.proposalcredits));\n  }, 500);\n\n  return api\n    .me()\n    .then(dispatchAfterWaitFn)\n    .catch(error => {\n      dispatch(act.RECEIVE_UPDATE_PROPOSAL_CREDITS(null, error));\n    });\n};\n\nexport const onAddProposalCredits = ({ amount, txNotBefore }) => (\n  dispatch,\n  getState\n) => {\n  const propPaywallDetails = getState().api.proposalPaywallDetails;\n  let creditPrice = 0.1;\n  if (propPaywallDetails) {\n    creditPrice = propPaywallDetails.response.creditprice / 100000000;\n  } else {\n    api.proposalPaywallDetails().then(response => {\n      dispatch(act.RECEIVE_PROPOSAL_PAYWALL_DETAILS(response));\n      creditPrice = response.creditprice / 100000000;\n    });\n  }\n\n  return amount\n    ? dispatch(\n        act.ADD_PROPOSAL_CREDITS({\n          amount: Math.round((amount * 1) / creditPrice),\n          txid: txNotBefore\n        })\n      )\n    : null;\n};\n\nexport const onUserProposalCredits = () => dispatch => {\n  dispatch(act.REQUEST_USER_PROPOSAL_CREDITS());\n\n  const dispatchAfterWaitFn = callAfterMinimumWait(response => {\n    dispatch(act.RECEIVE_USER_PROPOSAL_CREDITS(response));\n    dispatch(\n      act.SET_PROPOSAL_CREDITS(\n        response.unspentcredits ? response.unspentcredits.length : 0\n      )\n    );\n  }, 500);\n\n  return api\n    .userProposalCredits()\n    .then(dispatchAfterWaitFn)\n    .catch(error => {\n      dispatch(act.RECEIVE_USER_PROPOSAL_CREDITS(null, error));\n    });\n};\n\nexport const onFetchProposalsVoteStatus = () => dispatch => {\n  dispatch(act.REQUEST_PROPOSALS_VOTE_STATUS());\n  return api\n    .proposalsVoteStatus()\n    .then(response =>\n      dispatch(\n        act.RECEIVE_PROPOSALS_VOTE_STATUS({ ...response, success: true })\n      )\n    )\n    .catch(error => {\n      dispatch(act.RECEIVE_PROPOSALS_VOTE_STATUS(null, error));\n      throw error;\n    });\n};\n\nexport const onFetchUserProposalsWithVoteStatus = userid => async dispatch => {\n  dispatch(act.REQUEST_USER_PROPOSALS({ userid }));\n  try {\n    const { proposals } = await api.userProposals(userid);\n    const publicPropsTokens = proposals\n      .filter(prop => prop.status === PROPOSAL_STATUS_PUBLIC)\n      .map(prop => prop.censorshiprecord.token);\n\n    if (publicPropsTokens.length) {\n      await dispatch(onFetchProposalsVoteStatusByTokens(publicPropsTokens));\n    }\n    dispatch(act.RECEIVE_USER_PROPOSALS({ proposals }));\n  } catch (e) {\n    dispatch(act.RECEIVE_USER_PROPOSALS(null, e));\n  }\n};\n\nexport const onFetchProposalsVoteStatusByTokens = tokens => async dispatch => {\n  dispatch(act.REQUEST_PROPOSALS_VOTE_STATUS({ tokens }));\n  try {\n    const promises = tokens.map(token => api.proposalVoteStatus(token));\n    const res = await Promise.all(promises);\n    dispatch(\n      act.RECEIVE_PROPOSALS_VOTE_STATUS({ votesstatus: res, success: true })\n    );\n  } catch (e) {\n    dispatch(act.RECEIVE_PROPOSALS_VOTE_STATUS(null, e));\n    throw e;\n  }\n};\n\nexport const onFetchProposalVoteStatus = token => dispatch => {\n  dispatch(act.REQUEST_PROPOSAL_VOTE_STATUS({ token }));\n  return api\n    .proposalVoteStatus(token)\n    .then(response => {\n      dispatch(\n        act.RECEIVE_PROPOSAL_VOTE_STATUS({ ...response, success: true })\n      );\n      return response;\n    })\n    .catch(error => {\n      dispatch(act.RECEIVE_PROPOSAL_VOTE_STATUS(null, error));\n    });\n};\n\nexport const onFetchProposalVoteResults = token => dispatch => {\n  dispatch(act.REQUEST_PROPOSAL_VOTE_RESULTS({ token }));\n  return api\n    .proposalVoteResults(token)\n    .then(response =>\n      dispatch(\n        act.RECEIVE_PROPOSAL_VOTE_RESULTS({ ...response, success: true })\n      )\n    )\n    .catch(error => {\n      dispatch(act.RECEIVE_PROPOSAL_VOTE_RESULTS(null, error));\n      throw error;\n    });\n};\n\nexport const onAuthorizeVote = (email, token, version) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_AUTHORIZE_VOTE({ token }));\n    return api\n      .proposalAuthorizeOrRevokeVote(csrf, \"authorize\", token, email, version)\n      .then(response =>\n        dispatch(act.RECEIVE_AUTHORIZE_VOTE({ ...response, success: true }))\n      )\n      .catch(error => {\n        dispatch(act.RECEIVE_AUTHORIZE_VOTE(null, error));\n        throw error;\n      });\n  });\n\nexport const onRevokeVote = (email, token, version) =>\n  withCsrf((dispatch, getState, csrf) => {\n    dispatch(act.REQUEST_AUTHORIZE_VOTE({ token }));\n    return api\n      .proposalAuthorizeOrRevokeVote(csrf, \"revoke\", token, email, version)\n      .then(response =>\n        dispatch(act.RECEIVE_REVOKE_AUTH_VOTE({ ...response, success: true }))\n      )\n      .catch(error => {\n        dispatch(act.RECEIVE_REVOKE_AUTH_VOTE(null, error));\n        throw error;\n      });\n  });\n\nexport const onFetchProposalPaywallPayment = () => dispatch => {\n  dispatch(act.REQUEST_PROPOSAL_PAYWALL_PAYMENT());\n  return api\n    .proposalPaywallPayment()\n    .then(response => dispatch(act.RECEIVE_PROPOSAL_PAYWALL_PAYMENT(response)))\n    .catch(error => {\n      dispatch(act.RECEIVE_PROPOSAL_PAYWALL_PAYMENT(null, error));\n      throw error;\n    });\n};\n\nexport const onRescanUserPayments = userid =>\n  withCsrf((dispatch, _, csrf) => {\n    dispatch(act.REQUEST_RESCAN_USER_PAYMENTS(userid));\n    return api\n      .rescanUserPayments(csrf, userid)\n      .then(response => {\n        dispatch(act.RECEIVE_RESCAN_USER_PAYMENTS(response));\n\n        // if the rescan returns new credits, a refetch of the user details\n        // is needed to update the user credits.\n        // if(response.newcredits && response.newcredits.length > 0) {\n        //   dispatch(onFetchUser(userid));\n        // }\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_RESCAN_USER_PAYMENTS(null, error));\n        throw error;\n      });\n  });\n\nexport const onGeneratePayouts = () =>\n  withCsrf((dispatch, _, csrf) => {\n    dispatch(act.REQUEST_GENERATE_PAYOUTS({}));\n    return api\n      .generatePayouts(csrf)\n      .then(response => {\n        dispatch(act.RECEIVE_GENERATE_PAYOUTS(response));\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_GENERATE_PAYOUTS(null, error));\n      });\n  });\n\nexport const onPayApprovedInvoices = () => dispatch => {\n  dispatch(act.REQUEST_PAY_APPROVED({}));\n  return api\n    .payApprovedInvoices()\n    .then(response => {\n      dispatch(act.RECEIVE_PAY_APPROVED(response));\n    })\n    .catch(error => {\n      dispatch(act.RECEIVE_PAY_APPROVED(null, error));\n    });\n};\n\nexport const onFetchExchangeRate = (month, year) =>\n  withCsrf((dispatch, _, csrf) => {\n    dispatch(act.REQUEST_EXCHANGE_RATE({ month, year }));\n    return api\n      .exchangeRate(csrf, +month, +year)\n      .then(response => {\n        dispatch(act.RECEIVE_EXCHANGE_RATE(response));\n      })\n      .catch(error => {\n        dispatch(act.RECEIVE_EXCHANGE_RATE(null, error));\n      });\n  });\n"],"sourceRoot":""}